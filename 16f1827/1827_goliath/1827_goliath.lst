

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun May 21 15:12:33 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0016                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001C                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  008C                     	;# 
    50  008D                     	;# 
    51  0091                     	;# 
    52  0092                     	;# 
    53  0093                     	;# 
    54  0094                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  010C                     	;# 
    67  010D                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0113                     	;# 
    71  0114                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011A                     	;# 
    78  011B                     	;# 
    79  011D                     	;# 
    80  011E                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019B                     	;# 
    98  019C                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019E                     	;# 
   102  019F                     	;# 
   103  020C                     	;# 
   104  020D                     	;# 
   105  0211                     	;# 
   106  0211                     	;# 
   107  0212                     	;# 
   108  0212                     	;# 
   109  0213                     	;# 
   110  0213                     	;# 
   111  0214                     	;# 
   112  0214                     	;# 
   113  0215                     	;# 
   114  0215                     	;# 
   115  0215                     	;# 
   116  0216                     	;# 
   117  0216                     	;# 
   118  0217                     	;# 
   119  0217                     	;# 
   120  0219                     	;# 
   121  021A                     	;# 
   122  021B                     	;# 
   123  021C                     	;# 
   124  021D                     	;# 
   125  021E                     	;# 
   126  021F                     	;# 
   127  0291                     	;# 
   128  0291                     	;# 
   129  0292                     	;# 
   130  0293                     	;# 
   131  0294                     	;# 
   132  0295                     	;# 
   133  0295                     	;# 
   134  0296                     	;# 
   135  0298                     	;# 
   136  0298                     	;# 
   137  0299                     	;# 
   138  029A                     	;# 
   139  029B                     	;# 
   140  029C                     	;# 
   141  029C                     	;# 
   142  029D                     	;# 
   143  029E                     	;# 
   144  029E                     	;# 
   145  0311                     	;# 
   146  0311                     	;# 
   147  0312                     	;# 
   148  0313                     	;# 
   149  0318                     	;# 
   150  0318                     	;# 
   151  0319                     	;# 
   152  031A                     	;# 
   153  0394                     	;# 
   154  0395                     	;# 
   155  0396                     	;# 
   156  039A                     	;# 
   157  039C                     	;# 
   158  039D                     	;# 
   159  039E                     	;# 
   160  039F                     	;# 
   161  0415                     	;# 
   162  0416                     	;# 
   163  0417                     	;# 
   164  041C                     	;# 
   165  041D                     	;# 
   166  041E                     	;# 
   167  0FE4                     	;# 
   168  0FE5                     	;# 
   169  0FE6                     	;# 
   170  0FE7                     	;# 
   171  0FE8                     	;# 
   172  0FE9                     	;# 
   173  0FEA                     	;# 
   174  0FEB                     	;# 
   175  0FED                     	;# 
   176  0FEE                     	;# 
   177  0FEF                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0113                     	;# 
   229  0114                     	;# 
   230  0115                     	;# 
   231  0116                     	;# 
   232  0117                     	;# 
   233  0118                     	;# 
   234  0119                     	;# 
   235  011A                     	;# 
   236  011B                     	;# 
   237  011D                     	;# 
   238  011E                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0191                     	;# 
   242  0191                     	;# 
   243  0192                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0193                     	;# 
   247  0194                     	;# 
   248  0195                     	;# 
   249  0196                     	;# 
   250  0199                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019C                     	;# 
   257  019C                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0216                     	;# 
   276  0217                     	;# 
   277  0217                     	;# 
   278  0219                     	;# 
   279  021A                     	;# 
   280  021B                     	;# 
   281  021C                     	;# 
   282  021D                     	;# 
   283  021E                     	;# 
   284  021F                     	;# 
   285  0291                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0294                     	;# 
   290  0295                     	;# 
   291  0295                     	;# 
   292  0296                     	;# 
   293  0298                     	;# 
   294  0298                     	;# 
   295  0299                     	;# 
   296  029A                     	;# 
   297  029B                     	;# 
   298  029C                     	;# 
   299  029C                     	;# 
   300  029D                     	;# 
   301  029E                     	;# 
   302  029E                     	;# 
   303  0311                     	;# 
   304  0311                     	;# 
   305  0312                     	;# 
   306  0313                     	;# 
   307  0318                     	;# 
   308  0318                     	;# 
   309  0319                     	;# 
   310  031A                     	;# 
   311  0394                     	;# 
   312  0395                     	;# 
   313  0396                     	;# 
   314  039A                     	;# 
   315  039C                     	;# 
   316  039D                     	;# 
   317  039E                     	;# 
   318  039F                     	;# 
   319  0415                     	;# 
   320  0416                     	;# 
   321  0417                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  0FE4                     	;# 
   326  0FE5                     	;# 
   327  0FE6                     	;# 
   328  0FE7                     	;# 
   329  0FE8                     	;# 
   330  0FE9                     	;# 
   331  0FEA                     	;# 
   332  0FEB                     	;# 
   333  0FED                     	;# 
   334  0FEE                     	;# 
   335  0FEF                     	;# 
   336  0000                     	;# 
   337  0001                     	;# 
   338  0002                     	;# 
   339  0003                     	;# 
   340  0004                     	;# 
   341  0005                     	;# 
   342  0006                     	;# 
   343  0007                     	;# 
   344  0008                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0014                     	;# 
   354  0015                     	;# 
   355  0016                     	;# 
   356  0016                     	;# 
   357  0017                     	;# 
   358  0018                     	;# 
   359  0019                     	;# 
   360  001A                     	;# 
   361  001B                     	;# 
   362  001C                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  0111                     	;# 
   385  0112                     	;# 
   386  0113                     	;# 
   387  0114                     	;# 
   388  0115                     	;# 
   389  0116                     	;# 
   390  0117                     	;# 
   391  0118                     	;# 
   392  0119                     	;# 
   393  011A                     	;# 
   394  011B                     	;# 
   395  011D                     	;# 
   396  011E                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0191                     	;# 
   400  0191                     	;# 
   401  0192                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0193                     	;# 
   405  0194                     	;# 
   406  0195                     	;# 
   407  0196                     	;# 
   408  0199                     	;# 
   409  019A                     	;# 
   410  019B                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019C                     	;# 
   415  019C                     	;# 
   416  019D                     	;# 
   417  019E                     	;# 
   418  019F                     	;# 
   419  020C                     	;# 
   420  020D                     	;# 
   421  0211                     	;# 
   422  0211                     	;# 
   423  0212                     	;# 
   424  0212                     	;# 
   425  0213                     	;# 
   426  0213                     	;# 
   427  0214                     	;# 
   428  0214                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0216                     	;# 
   433  0216                     	;# 
   434  0217                     	;# 
   435  0217                     	;# 
   436  0219                     	;# 
   437  021A                     	;# 
   438  021B                     	;# 
   439  021C                     	;# 
   440  021D                     	;# 
   441  021E                     	;# 
   442  021F                     	;# 
   443  0291                     	;# 
   444  0291                     	;# 
   445  0292                     	;# 
   446  0293                     	;# 
   447  0294                     	;# 
   448  0295                     	;# 
   449  0295                     	;# 
   450  0296                     	;# 
   451  0298                     	;# 
   452  0298                     	;# 
   453  0299                     	;# 
   454  029A                     	;# 
   455  029B                     	;# 
   456  029C                     	;# 
   457  029C                     	;# 
   458  029D                     	;# 
   459  029E                     	;# 
   460  029E                     	;# 
   461  0311                     	;# 
   462  0311                     	;# 
   463  0312                     	;# 
   464  0313                     	;# 
   465  0318                     	;# 
   466  0318                     	;# 
   467  0319                     	;# 
   468  031A                     	;# 
   469  0394                     	;# 
   470  0395                     	;# 
   471  0396                     	;# 
   472  039A                     	;# 
   473  039C                     	;# 
   474  039D                     	;# 
   475  039E                     	;# 
   476  039F                     	;# 
   477  0415                     	;# 
   478  0416                     	;# 
   479  0417                     	;# 
   480  041C                     	;# 
   481  041D                     	;# 
   482  041E                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  000B                     _INTCON	set	11
   495  001B                     _PR2	set	27
   496  001C                     _T2CON	set	28
   497  005F                     _GIE	set	95
   498  008D                     _RCIF	set	141
   499  008C                     _TXIF	set	140
   500  009D                     _ADCON0	set	157
   501  009E                     _ADCON1	set	158
   502  009C                     _ADRESH	set	156
   503  009B                     _ADRESL	set	155
   504  0099                     _OSCCON	set	153
   505  008C                     _TRISA	set	140
   506  008D                     _TRISB	set	141
   507  04E9                     _ADGO	set	1257
   508  04E8                     _ADON	set	1256
   509  0469                     _TRISB1	set	1129
   510  046A                     _TRISB2	set	1130
   511  088F                     _C1ON	set	2191
   512  0860                     _LATA0	set	2144
   513  0861                     _LATA1	set	2145
   514  0866                     _LATA6	set	2150
   515  0867                     _LATA7	set	2151
   516  08EF                     _RXDTSEL	set	2287
   517  08F0                     _TXCKSEL	set	2288
   518  018C                     _ANSELA	set	396
   519  018D                     _ANSELB	set	397
   520  0199                     _RCREG	set	409
   521  019D                     _RCSTA	set	413
   522  019B                     _SPBRG	set	411
   523  019A                     _TXREG	set	410
   524  019E                     _TXSTA	set	414
   525  0CEC                     _CREN	set	3308
   526  0CE9                     _OERR	set	3305
   527  0313                     _CCP3CON	set	787
   528  031A                     _CCP4CON	set	794
   529  0311                     _CCPR3L	set	785
   530  0318                     _CCPR4L	set	792
   531                           
   532                           ; #config settings
   533  0000                     
   534                           	psect	cinit
   535  07F4                     start_initialization:	
   536  07F4                     __initialization:	
   537                           
   538                           ; Clear objects allocated to COMMON
   539  07F4  01FA               	clrf	__pbssCOMMON& (0+127)
   540  07F5  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   541  07F6  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   542                           
   543                           ; Clear objects allocated to BANK0
   544  07F7  01A0               	clrf	__pbssBANK0& (0+127)
   545  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   546  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   547  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   548  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   549  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   550  07FD                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  07FD                     __end_of__initialization:	
   554  07FD  0020               	movlb	0
   555  07FE  3186  2EFC         	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  007A                     __pbssCOMMON:	
   559  007A                     _addata:	
   560  007A                     	ds	2
   561  007C                     _contORE:	
   562  007C                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565  0020                     __pbssBANK0:	
   566  0020                     _data:	
   567  0020                     	ds	6
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:	
   571  0070                     ?_init:	
   572  0070                     ??_init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_get_usart:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_forward:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_back:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Rturn:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Lturn:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_SetPWM1:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_SetPWM2:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_main:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_getch:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ??_getch:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_inRxData:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ??_inRxData:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     inRxData@rxData:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     getch@cnt:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     SetPWM1@dutycycle:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     SetPWM2@dutycycle:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 2 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     inRxData@cnt1:	
   627                           
   628                           ; 2 bytes @ 0x1
   629  0071                     	ds	1
   630  0072                     ??_SetPWM1:	
   631  0072                     ??_SetPWM2:	
   632                           ; 1 bytes @ 0x2
   633                           
   634                           
   635                           ; 1 bytes @ 0x2
   636  0072                     	ds	1
   637  0073                     inRxData@cnt2:	
   638                           
   639                           ; 2 bytes @ 0x3
   640  0073                     	ds	1
   641  0074                     ??_forward:	
   642  0074                     ??_back:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??_Rturn:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ??_Lturn:	
   649                           ; 1 bytes @ 0x4
   650                           
   651                           
   652                           ; 1 bytes @ 0x4
   653  0074                     	ds	1
   654  0075                     ??_get_usart:	
   655                           
   656                           ; 1 bytes @ 0x5
   657  0075                     	ds	1
   658  0076                     get_usart@i:	
   659                           
   660                           ; 2 bytes @ 0x6
   661  0076                     	ds	2
   662  0078                     ??_main:	
   663  0078                     main@cntError:	
   664                           ; 1 bytes @ 0x8
   665                           
   666                           
   667                           ; 2 bytes @ 0x8
   668  0078                     	ds	2
   669                           
   670                           	psect	maintext
   671  06FC                     __pmaintext:	
   672 ;;
   673 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   674 ;;
   675 ;; *************** function _main *****************
   676 ;; Defined at:
   677 ;;		line 51 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  cntError        2    8[COMMON] unsigned int 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : B1F/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   691 ;;      Params:         0       0       0       0       0       0
   692 ;;      Locals:         2       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels required when called:    2
   697 ;; This function calls:
   698 ;;		_Lturn
   699 ;;		_Rturn
   700 ;;		_back
   701 ;;		_forward
   702 ;;		_get_usart
   703 ;;		_init
   704 ;; This function is called by:
   705 ;;		Startup code after reset
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _main
   711  06FC                     _main:	
   712                           
   713                           ;main.c: 53: init();
   714                           
   715                           ;incstack = 0
   716                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   717  06FC  3186  26DC  3186   	fcall	_init
   718  06FF  2F0C               	goto	L1
   719  0700                     l1013:	
   720                           ;main.c: 54: unsigned int cntError = 0;
   721                           
   722                           
   723                           ;main.c: 59: forward();
   724  0700  3187  2785  3186   	fcall	_forward
   725                           
   726                           ;main.c: 60: back();
   727  0703  3187  274F  3186   	fcall	_back
   728                           
   729                           ;main.c: 61: Rturn();
   730  0706  3186  2695  3186   	fcall	_Rturn
   731                           
   732                           ;main.c: 62: Lturn();
   733  0709  3186  267E  3186   	fcall	_Lturn
   734  070C                     L1:	
   735                           
   736                           ;main.c: 64: cntError = 0;
   737  070C  01F8               	clrf	main@cntError
   738  070D  01F9               	clrf	main@cntError+1
   739  070E                     l1011:	
   740                           ;main.c: 55: while(1)
   741                           
   742                           ;main.c: 66: }
   743                           
   744                           
   745                           ;main.c: 56: {
   746                           ;main.c: 57: if(get_usart()==0x01){
   747  070E  3187  27BB  3186   	fcall	_get_usart
   748  0711  3A01               	xorlw	1
   749  0712  1903               	btfsc	3,2
   750  0713  2F00               	goto	l1013
   751                           
   752                           ;main.c: 67: else{
   753                           ;main.c: 69: cntError++;
   754  0714  3001               	movlw	1
   755  0715  07F8               	addwf	main@cntError,f
   756  0716  3000               	movlw	0
   757  0717  3DF9               	addwfc	main@cntError+1,f
   758                           
   759                           ;main.c: 70: if(cntError>=10)
   760  0718  3000               	movlw	0
   761  0719  0279               	subwf	main@cntError+1,w
   762  071A  300A               	movlw	10
   763  071B  1903               	skipnz
   764  071C  0278               	subwf	main@cntError,w
   765  071D  1C03               	skipc
   766  071E  2F0E               	goto	l1011
   767  071F  2F0C               	goto	L1
   768  0720                     __end_of_main:	
   769                           ;main.c: 71: {
   770                           ;main.c: 72: cntError=0;
   771                           
   772                           
   773                           	psect	text1
   774  06DC                     __ptext1:	
   775 ;; *************** function _init *****************
   776 ;; Defined at:
   777 ;;		line 116 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   791 ;;      Params:         0       0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _init
   806  06DC                     _init:	
   807                           
   808                           ;main.c: 118: INTCON=0;
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _init: [wreg+status,2]
   812  06DC  018B               	clrf	11	;volatile
   813                           
   814                           ;main.c: 119: TRISB1 = 1; TRISB2 = 1; SPBRG = ((int)(32000000L/(16UL * 115200) -1)); RCS
      +                          TA = (0|0x90); TXSTA = (0x4|0|0x20);
   815  06DD  0021               	movlb	1	; select bank1
   816  06DE  148D               	bsf	13,1	;volatile
   817  06DF  150D               	bsf	13,2	;volatile
   818  06E0  3010               	movlw	16
   819  06E1  0023               	movlb	3	; select bank3
   820  06E2  009B               	movwf	27	;volatile
   821  06E3  3090               	movlw	144
   822  06E4  009D               	movwf	29	;volatile
   823  06E5  3024               	movlw	36
   824  06E6  009E               	movwf	30	;volatile
   825                           
   826                           ;main.c: 120: OSCCON = 0b01110000;
   827  06E7  3070               	movlw	112
   828  06E8  0021               	movlb	1	; select bank1
   829  06E9  0099               	movwf	25	;volatile
   830                           
   831                           ;main.c: 121: GIE = 0;
   832  06EA  138B               	bcf	11,7	;volatile
   833                           
   834                           ;main.c: 122: C1ON = 0;
   835  06EB  0022               	movlb	2	; select bank2
   836  06EC  1391               	bcf	17,7	;volatile
   837                           
   838                           ;main.c: 123: ANSELA = 0b00000000;
   839  06ED  0023               	movlb	3	; select bank3
   840  06EE  018C               	clrf	12	;volatile
   841                           
   842                           ;main.c: 124: TRISA = 0b00000000;
   843  06EF  0021               	movlb	1	; select bank1
   844  06F0  018C               	clrf	12	;volatile
   845                           
   846                           ;main.c: 125: ANSELB = 0b00000000;
   847  06F1  0023               	movlb	3	; select bank3
   848  06F2  018D               	clrf	13	;volatile
   849                           
   850                           ;main.c: 126: TRISB = 0b00000010;
   851  06F3  3002               	movlw	2
   852  06F4  0021               	movlb	1	; select bank1
   853  06F5  008D               	movwf	13	;volatile
   854                           
   855                           ;main.c: 127: TXCKSEL = 1;
   856  06F6  0022               	movlb	2	; select bank2
   857  06F7  141E               	bsf	30,0	;volatile
   858                           
   859                           ;main.c: 128: RXDTSEL = 0;
   860  06F8  139D               	bcf	29,7	;volatile
   861                           
   862                           ;main.c: 130: T2CON |= 0b00000001;
   863  06F9  0020               	movlb	0	; select bank0
   864  06FA  141C               	bsf	28,0	;volatile
   865  06FB  0008               	return
   866  06FC                     __end_of_init:	
   867                           
   868                           	psect	text2
   869  07BB                     __ptext2:	
   870 ;; *************** function _get_usart *****************
   871 ;; Defined at:
   872 ;;		line 201 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  i               2    6[COMMON] unsigned int 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      unsigned char 
   879 ;; Registers used:
   880 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   886 ;;      Params:         0       0       0       0       0       0
   887 ;;      Locals:         2       0       0       0       0       0
   888 ;;      Temps:          1       0       0       0       0       0
   889 ;;      Totals:         3       0       0       0       0       0
   890 ;;Total ram usage:        3 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    1
   893 ;; This function calls:
   894 ;;		_getch
   895 ;;		_inRxData
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           
   902                           ;psect for function _get_usart
   903  07BB                     _get_usart:	
   904                           
   905                           ;main.c: 222: unsigned int i=0;
   906                           
   907                           ;incstack = 0
   908                           ; Regs used in _get_usart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   909  07BB  01F6               	clrf	get_usart@i
   910  07BC  01F7               	clrf	get_usart@i+1
   911                           
   912                           ;main.c: 224: if(inRxData(0x80)==0x01)
   913  07BD  3080               	movlw	128
   914  07BE  3187  2720  3187   	fcall	_inRxData
   915  07C1  3A01               	xorlw	1
   916  07C2  1D03               	skipz
   917  07C3  2FF2               	goto	l939
   918                           
   919                           ;main.c: 225: {
   920                           ;main.c: 227: for(i=0;i<6;i++)
   921  07C4  01F6               	clrf	get_usart@i
   922  07C5  01F7               	clrf	get_usart@i+1
   923  07C6  3000               	movlw	0
   924  07C7  0277               	subwf	get_usart@i+1,w
   925  07C8  3006               	movlw	6
   926  07C9  1903               	skipnz
   927  07CA  0276               	subwf	get_usart@i,w
   928  07CB  1803               	btfsc	3,0
   929  07CC  2FE2               	goto	l933
   930  07CD                     l927:	
   931                           
   932                           ;main.c: 228: {
   933                           ;main.c: 229: data[i] = getch();
   934  07CD  3186  266B  3187   	fcall	_getch
   935  07D0  00F5               	movwf	??_get_usart
   936  07D1  0876               	movf	get_usart@i,w
   937  07D2  3E20               	addlw	(low (_data| 0))& (0+255)
   938  07D3  0086               	movwf	6
   939  07D4  0187               	clrf	7
   940  07D5  0875               	movf	??_get_usart,w
   941  07D6  0081               	movwf	1
   942  07D7  3001               	movlw	1
   943  07D8  07F6               	addwf	get_usart@i,f
   944  07D9  3000               	movlw	0
   945  07DA  3DF7               	addwfc	get_usart@i+1,f
   946  07DB  3000               	movlw	0
   947  07DC  0277               	subwf	get_usart@i+1,w
   948  07DD  3006               	movlw	6
   949  07DE  1903               	skipnz
   950  07DF  0276               	subwf	get_usart@i,w
   951  07E0  1C03               	skipc
   952  07E1  2FCD               	goto	l927
   953  07E2                     l933:	
   954                           
   955                           ;main.c: 230: }
   956                           ;main.c: 231: if(inRxData((data[0]+data[1]+data[2]+data[3]+data[4]+data[5])&0x7f)==0x01)
   957  07E2  0020               	movlb	0	; select bank0
   958  07E3  0821               	movf	_data+1,w
   959  07E4  0722               	addwf	_data+2,w
   960  07E5  0723               	addwf	_data+3,w
   961  07E6  0724               	addwf	_data+4,w
   962  07E7  0725               	addwf	_data+5,w
   963  07E8  0720               	addwf	_data,w
   964  07E9  397F               	andlw	127
   965  07EA  3187  2720  3187   	fcall	_inRxData
   966  07ED  3A01               	xorlw	1
   967  07EE  1D03               	skipz
   968  07EF  2FF2               	goto	l939
   969                           
   970                           ;main.c: 232: {
   971                           ;main.c: 233: return 0x01;
   972  07F0  3001               	movlw	1
   973  07F1  0008               	return
   974  07F2                     l939:	
   975                           ;main.c: 237: else
   976                           ;main.c: 238: {
   977                           
   978                           ;main.c: 234: }
   979                           ;main.c: 235: }
   980                           
   981                           
   982                           ;main.c: 240: }
   983                           ;main.c: 241: return 0x00;
   984  07F2  3000               	movlw	0
   985  07F3  0008               	return
   986  07F4                     __end_of_get_usart:	
   987                           
   988                           	psect	text3
   989  0720                     __ptext3:	
   990 ;; *************** function _inRxData *****************
   991 ;; Defined at:
   992 ;;		line 173 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;  rxData          1    wreg     unsigned char 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  rxData          1    0[COMMON] unsigned char 
   997 ;;  cnt2            2    3[COMMON] unsigned int 
   998 ;;  cnt1            2    1[COMMON] unsigned int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1008 ;;      Params:         0       0       0       0       0       0
  1009 ;;      Locals:         5       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0
  1011 ;;      Totals:         5       0       0       0       0       0
  1012 ;;Total ram usage:        5 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_get_usart
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _inRxData
  1023  0720                     _inRxData:	
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _inRxData: [wreg+status,2]
  1027                           ;inRxData@rxData stored from wreg
  1028  0720  00F0               	movwf	inRxData@rxData
  1029                           
  1030                           ;main.c: 175: unsigned int cnt1=0;
  1031  0721  01F1               	clrf	inRxData@cnt1
  1032  0722  01F2               	clrf	inRxData@cnt1+1
  1033                           
  1034                           ;main.c: 176: unsigned int cnt2=0;
  1035  0723  01F3               	clrf	inRxData@cnt2
  1036  0724  01F4               	clrf	inRxData@cnt2+1
  1037  0725                     l895:	
  1038                           ;main.c: 177: while(1)
  1039                           
  1040                           
  1041                           ;main.c: 178: {
  1042                           ;main.c: 179: if(OERR )
  1043  0725  0023               	movlb	3	; select bank3
  1044  0726  189D               	btfsc	29,1	;volatile
  1045                           
  1046                           ;main.c: 180: CREN=0;
  1047  0727  121D               	bcf	29,4	;volatile
  1048                           
  1049                           ;main.c: 181: CREN=1;
  1050  0728  161D               	bsf	29,4	;volatile
  1051  0729                     l129:	
  1052                           ;main.c: 182: while(!RCIF)
  1053                           
  1054  0729  0020               	movlb	0	; select bank0
  1055  072A  1A91               	btfsc	17,5	;volatile
  1056  072B  2F39               	goto	l903
  1057                           
  1058                           ;main.c: 183: {
  1059                           ;main.c: 184: cnt1++;
  1060  072C  3001               	movlw	1
  1061  072D  07F1               	addwf	inRxData@cnt1,f
  1062  072E  3000               	movlw	0
  1063  072F  3DF2               	addwfc	inRxData@cnt1+1,f
  1064                           
  1065                           ;main.c: 185: if(cnt1>=100)
  1066  0730  3000               	movlw	0
  1067  0731  0272               	subwf	inRxData@cnt1+1,w
  1068  0732  3064               	movlw	100
  1069  0733  1903               	skipnz
  1070  0734  0271               	subwf	inRxData@cnt1,w
  1071  0735  1C03               	skipc
  1072  0736  2F29               	goto	l129
  1073                           
  1074                           ;main.c: 186: {
  1075                           ;main.c: 187: cnt1=0;
  1076  0737  01F1               	clrf	inRxData@cnt1
  1077  0738  01F2               	clrf	inRxData@cnt1+1
  1078  0739                     l903:	
  1079                           ;main.c: 188: break;
  1080                           
  1081                           
  1082                           ;main.c: 189: }
  1083                           ;main.c: 190: }
  1084                           ;main.c: 191: if(RCREG==rxData)
  1085  0739  0023               	movlb	3	; select bank3
  1086  073A  0819               	movf	25,w	;volatile
  1087  073B  0670               	xorwf	inRxData@rxData,w
  1088  073C  1D03               	skipz
  1089  073D  2F40               	goto	l909
  1090                           
  1091                           ;main.c: 192: return 0x01;
  1092  073E  3001               	movlw	1
  1093  073F  0008               	return
  1094  0740                     l909:	
  1095                           
  1096                           ;main.c: 193: cnt2++;
  1097  0740  3001               	movlw	1
  1098  0741  07F3               	addwf	inRxData@cnt2,f
  1099  0742  3000               	movlw	0
  1100  0743  3DF4               	addwfc	inRxData@cnt2+1,f
  1101                           
  1102                           ;main.c: 194: if(cnt2>=10)
  1103  0744  3000               	movlw	0
  1104  0745  0274               	subwf	inRxData@cnt2+1,w
  1105  0746  300A               	movlw	10
  1106  0747  1903               	skipnz
  1107  0748  0273               	subwf	inRxData@cnt2,w
  1108  0749  1C03               	skipc
  1109  074A  2F25               	goto	l895
  1110                           
  1111                           ;main.c: 195: {
  1112                           ;main.c: 196: cnt2=0;
  1113  074B  01F3               	clrf	inRxData@cnt2
  1114  074C  01F4               	clrf	inRxData@cnt2+1
  1115                           
  1116                           ;main.c: 197: return 0x00;
  1117  074D  3000               	movlw	0
  1118  074E  0008               	return
  1119  074F                     __end_of_inRxData:	
  1120                           
  1121                           	psect	text4
  1122  066B                     __ptext4:	
  1123 ;; *************** function _getch *****************
  1124 ;; Defined at:
  1125 ;;		line 153 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  cnt             2    0[COMMON] unsigned int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      unsigned char 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1139 ;;      Params:         0       0       0       0       0       0
  1140 ;;      Locals:         2       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0
  1142 ;;      Totals:         2       0       0       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_get_usart
  1149 ;;		_getche
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _getch
  1155  066B                     _getch:	
  1156                           
  1157                           ;main.c: 154: unsigned int cnt=0;
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _getch: [wreg+status,2]
  1161  066B  01F0               	clrf	getch@cnt
  1162  066C  01F1               	clrf	getch@cnt+1
  1163  066D                     l117:	
  1164                           ;main.c: 155: while(!RCIF)
  1165                           
  1166  066D  0020               	movlb	0	; select bank0
  1167  066E  1A91               	btfsc	17,5	;volatile
  1168  066F  2E7B               	goto	l889
  1169                           
  1170                           ;main.c: 156: {
  1171                           ;main.c: 157: cnt++;
  1172  0670  3001               	movlw	1
  1173  0671  07F0               	addwf	getch@cnt,f
  1174  0672  3000               	movlw	0
  1175  0673  3DF1               	addwfc	getch@cnt+1,f
  1176                           
  1177                           ;main.c: 158: if(cnt>=1000)
  1178  0674  3003               	movlw	3
  1179  0675  0271               	subwf	getch@cnt+1,w
  1180  0676  30E8               	movlw	232
  1181  0677  1903               	skipnz
  1182  0678  0270               	subwf	getch@cnt,w
  1183  0679  1C03               	skipc
  1184  067A  2E6D               	goto	l117
  1185  067B                     l889:	
  1186                           ;main.c: 159: {
  1187                           ;main.c: 160: break;
  1188                           
  1189                           
  1190                           ;main.c: 161: }
  1191                           ;main.c: 162: }
  1192                           ;main.c: 163: return RCREG;
  1193  067B  0023               	movlb	3	; select bank3
  1194  067C  0819               	movf	25,w	;volatile
  1195  067D  0008               	return
  1196  067E                     __end_of_getch:	
  1197                           
  1198                           	psect	text5
  1199  0785                     __ptext5:	
  1200 ;; *************** function _forward *****************
  1201 ;; Defined at:
  1202 ;;		line 78 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1216 ;;      Params:         0       0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_SetPWM1
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _forward
  1232  0785                     _forward:	
  1233                           
  1234                           ;main.c: 79: if(data[4] < 0x64 && data[4] > 0x24 && data[5] == 0x00){
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _forward: [wreg+status,2+status,0+pclath+cstack]
  1238  0785  3064               	movlw	100
  1239  0786  0020               	movlb	0	; select bank0
  1240  0787  0224               	subwf	_data+4,w
  1241  0788  1803               	skipnc
  1242  0789  2F9B               	goto	l953
  1243  078A  3025               	movlw	37
  1244  078B  0224               	subwf	_data+4,w
  1245  078C  1C03               	skipc
  1246  078D  2F9B               	goto	l953
  1247  078E  0825               	movf	_data+5,w
  1248  078F  1D03               	btfss	3,2
  1249  0790  2F9B               	goto	l953
  1250                           
  1251                           ;main.c: 80: LATA1=0; LATA0=1; SetPWM1(512);
  1252  0791  0022               	movlb	2	; select bank2
  1253  0792  108C               	bcf	12,1	;volatile
  1254  0793  140C               	bsf	12,0	;volatile
  1255  0794  3000               	movlw	0
  1256  0795  00F0               	movwf	SetPWM1@dutycycle
  1257  0796  3002               	movlw	2
  1258  0797  00F1               	movwf	SetPWM1@dutycycle+1
  1259  0798  3186  26AC         	fcall	_SetPWM1
  1260                           
  1261                           ;main.c: 81: }
  1262  079A  0008               	return
  1263  079B                     l953:	
  1264                           
  1265                           ;main.c: 82: else if(data[4] <0x64 && data[4] > 0x24 && data[5] == 0x7f){
  1266  079B  3064               	movlw	100
  1267  079C  0020               	movlb	0	; select bank0
  1268  079D  0224               	subwf	_data+4,w
  1269  079E  1803               	skipnc
  1270  079F  2FB2               	goto	l86
  1271  07A0  3025               	movlw	37
  1272  07A1  0224               	subwf	_data+4,w
  1273  07A2  1C03               	skipc
  1274  07A3  2FB2               	goto	l86
  1275  07A4  307F               	movlw	127
  1276  07A5  0625               	xorwf	_data+5,w
  1277  07A6  1D03               	btfss	3,2
  1278  07A7  2FB2               	goto	l86
  1279                           
  1280                           ;main.c: 83: LATA1=1; LATA0=0; SetPWM1(512);
  1281  07A8  0022               	movlb	2	; select bank2
  1282  07A9  148C               	bsf	12,1	;volatile
  1283  07AA  100C               	bcf	12,0	;volatile
  1284  07AB  3000               	movlw	0
  1285  07AC  00F0               	movwf	SetPWM1@dutycycle
  1286  07AD  3002               	movlw	2
  1287  07AE  00F1               	movwf	SetPWM1@dutycycle+1
  1288  07AF  3186  26AC         	fcall	_SetPWM1
  1289                           
  1290                           ;main.c: 84: }
  1291  07B1  0008               	return
  1292  07B2                     l86:	
  1293                           
  1294                           ;main.c: 85: else{
  1295                           ;main.c: 86: LATA1=0; LATA0=0; SetPWM1(0);
  1296  07B2  0022               	movlb	2	; select bank2
  1297  07B3  108C               	bcf	12,1	;volatile
  1298  07B4  100C               	bcf	12,0	;volatile
  1299  07B5  3000               	movlw	0
  1300  07B6  00F0               	movwf	SetPWM1@dutycycle
  1301  07B7  00F1               	movwf	SetPWM1@dutycycle+1
  1302  07B8  3186  26AC         	fcall	_SetPWM1
  1303  07BA  0008               	return
  1304  07BB                     __end_of_forward:	
  1305                           
  1306                           	psect	text6
  1307  074F                     __ptext6:	
  1308 ;; *************** function _back *****************
  1309 ;; Defined at:
  1310 ;;		line 90 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1324 ;;      Params:         0       0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    1
  1331 ;; This function calls:
  1332 ;;		_SetPWM2
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _back
  1340  074F                     _back:	
  1341                           
  1342                           ;main.c: 91: if(data[2] < 0x64 && data[2] > 0x24 && data[3] == 0x00){
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _back: [wreg+status,2+status,0+pclath+cstack]
  1346  074F  3064               	movlw	100
  1347  0750  0020               	movlb	0	; select bank0
  1348  0751  0222               	subwf	_data+2,w
  1349  0752  1803               	skipnc
  1350  0753  2F65               	goto	l975
  1351  0754  3025               	movlw	37
  1352  0755  0222               	subwf	_data+2,w
  1353  0756  1C03               	skipc
  1354  0757  2F65               	goto	l975
  1355  0758  0823               	movf	_data+3,w
  1356  0759  1D03               	btfss	3,2
  1357  075A  2F65               	goto	l975
  1358                           
  1359                           ;main.c: 92: LATA7=0; LATA6=1; SetPWM2(512);
  1360  075B  0022               	movlb	2	; select bank2
  1361  075C  138C               	bcf	12,7	;volatile
  1362  075D  170C               	bsf	12,6	;volatile
  1363  075E  3000               	movlw	0
  1364  075F  00F0               	movwf	SetPWM2@dutycycle
  1365  0760  3002               	movlw	2
  1366  0761  00F1               	movwf	SetPWM2@dutycycle+1
  1367  0762  3186  26C4         	fcall	_SetPWM2
  1368                           
  1369                           ;main.c: 93: }
  1370  0764  0008               	return
  1371  0765                     l975:	
  1372                           
  1373                           ;main.c: 94: else if(data[2] <0x64 && data[2] > 0x24 && data[3] == 0x7f){
  1374  0765  3064               	movlw	100
  1375  0766  0020               	movlb	0	; select bank0
  1376  0767  0222               	subwf	_data+2,w
  1377  0768  1803               	skipnc
  1378  0769  2F7C               	goto	l93
  1379  076A  3025               	movlw	37
  1380  076B  0222               	subwf	_data+2,w
  1381  076C  1C03               	skipc
  1382  076D  2F7C               	goto	l93
  1383  076E  307F               	movlw	127
  1384  076F  0623               	xorwf	_data+3,w
  1385  0770  1D03               	btfss	3,2
  1386  0771  2F7C               	goto	l93
  1387                           
  1388                           ;main.c: 95: LATA7=1; LATA6=0; SetPWM2(512);
  1389  0772  0022               	movlb	2	; select bank2
  1390  0773  178C               	bsf	12,7	;volatile
  1391  0774  130C               	bcf	12,6	;volatile
  1392  0775  3000               	movlw	0
  1393  0776  00F0               	movwf	SetPWM2@dutycycle
  1394  0777  3002               	movlw	2
  1395  0778  00F1               	movwf	SetPWM2@dutycycle+1
  1396  0779  3186  26C4         	fcall	_SetPWM2
  1397                           
  1398                           ;main.c: 96: }
  1399  077B  0008               	return
  1400  077C                     l93:	
  1401                           
  1402                           ;main.c: 97: else{
  1403                           ;main.c: 98: LATA7=0; LATA6=0; SetPWM2(0);
  1404  077C  0022               	movlb	2	; select bank2
  1405  077D  138C               	bcf	12,7	;volatile
  1406  077E  130C               	bcf	12,6	;volatile
  1407  077F  3000               	movlw	0
  1408  0780  00F0               	movwf	SetPWM2@dutycycle
  1409  0781  00F1               	movwf	SetPWM2@dutycycle+1
  1410  0782  3186  26C4         	fcall	_SetPWM2
  1411  0784  0008               	return
  1412  0785                     __end_of_back:	
  1413                           
  1414                           	psect	text7
  1415  0695                     __ptext7:	
  1416 ;; *************** function _Rturn *****************
  1417 ;; Defined at:
  1418 ;;		line 102 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1432 ;;      Params:         0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    1
  1439 ;; This function calls:
  1440 ;;		_SetPWM1
  1441 ;;		_SetPWM2
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _Rturn
  1449  0695                     _Rturn:	
  1450                           
  1451                           ;main.c: 103: if((data[1]&0x40)!=0){
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _Rturn: [wreg+status,2+status,0+pclath+cstack]
  1455  0695  0020               	movlb	0	; select bank0
  1456  0696  1F21               	btfss	_data+1,6
  1457  0697  0008               	return
  1458                           
  1459                           ;main.c: 104: LATA1=1; LATA0=0; SetPWM1(512);
  1460  0698  0022               	movlb	2	; select bank2
  1461  0699  148C               	bsf	12,1	;volatile
  1462  069A  100C               	bcf	12,0	;volatile
  1463  069B  3000               	movlw	0
  1464  069C  00F0               	movwf	SetPWM1@dutycycle
  1465  069D  3002               	movlw	2
  1466  069E  00F1               	movwf	SetPWM1@dutycycle+1
  1467  069F  3186  26AC  3186   	fcall	_SetPWM1
  1468                           
  1469                           ;main.c: 105: LATA7=0; LATA6=1; SetPWM2(512);
  1470  06A2  0022               	movlb	2	; select bank2
  1471  06A3  138C               	bcf	12,7	;volatile
  1472  06A4  170C               	bsf	12,6	;volatile
  1473  06A5  3000               	movlw	0
  1474  06A6  00F0               	movwf	SetPWM2@dutycycle
  1475  06A7  3002               	movlw	2
  1476  06A8  00F1               	movwf	SetPWM2@dutycycle+1
  1477  06A9  3186  26C4         	fcall	_SetPWM2
  1478  06AB  0008               	return
  1479  06AC                     __end_of_Rturn:	
  1480                           
  1481                           	psect	text8
  1482  067E                     __ptext8:	
  1483 ;; *************** function _Lturn *****************
  1484 ;; Defined at:
  1485 ;;		line 109 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1499 ;;      Params:         0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    1
  1506 ;; This function calls:
  1507 ;;		_SetPWM1
  1508 ;;		_SetPWM2
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _Lturn
  1516  067E                     _Lturn:	
  1517                           
  1518                           ;main.c: 110: if((data[1]&0x20)!=0){
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _Lturn: [wreg+status,2+status,0+pclath+cstack]
  1522  067E  0020               	movlb	0	; select bank0
  1523  067F  1EA1               	btfss	_data+1,5
  1524  0680  0008               	return
  1525                           
  1526                           ;main.c: 111: LATA1=0; LATA0=1; SetPWM1(512);
  1527  0681  0022               	movlb	2	; select bank2
  1528  0682  108C               	bcf	12,1	;volatile
  1529  0683  140C               	bsf	12,0	;volatile
  1530  0684  3000               	movlw	0
  1531  0685  00F0               	movwf	SetPWM1@dutycycle
  1532  0686  3002               	movlw	2
  1533  0687  00F1               	movwf	SetPWM1@dutycycle+1
  1534  0688  3186  26AC  3186   	fcall	_SetPWM1
  1535                           
  1536                           ;main.c: 112: LATA7=1; LATA6=0; SetPWM2(512);
  1537  068B  0022               	movlb	2	; select bank2
  1538  068C  178C               	bsf	12,7	;volatile
  1539  068D  130C               	bcf	12,6	;volatile
  1540  068E  3000               	movlw	0
  1541  068F  00F0               	movwf	SetPWM2@dutycycle
  1542  0690  3002               	movlw	2
  1543  0691  00F1               	movwf	SetPWM2@dutycycle+1
  1544  0692  3186  26C4         	fcall	_SetPWM2
  1545  0694  0008               	return
  1546  0695                     __end_of_Lturn:	
  1547                           
  1548                           	psect	text9
  1549  06C4                     __ptext9:	
  1550 ;; *************** function _SetPWM2 *****************
  1551 ;; Defined at:
  1552 ;;		line 50 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\pwm.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  dutycycle       2    0[COMMON] unsigned int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1566 ;;      Params:         2       0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0       0
  1569 ;;      Totals:         4       0       0       0       0       0
  1570 ;;Total ram usage:        4 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_back
  1576 ;;		_Rturn
  1577 ;;		_Lturn
  1578 ;;		_init_pwm
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           
  1583                           ;psect for function _SetPWM2
  1584  06C4                     _SetPWM2:	
  1585                           
  1586                           ;pwm.c: 53: CCPR4L = dutycycle >> 2;
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _SetPWM2: [wreg+status,2+status,0]
  1590  06C4  0871               	movf	SetPWM2@dutycycle+1,w
  1591  06C5  00F3               	movwf	??_SetPWM2+1
  1592  06C6  0870               	movf	SetPWM2@dutycycle,w
  1593  06C7  00F2               	movwf	??_SetPWM2
  1594  06C8  36F3               	lsrf	??_SetPWM2+1,f
  1595  06C9  0CF2               	rrf	??_SetPWM2,f
  1596  06CA  36F3               	lsrf	??_SetPWM2+1,f
  1597  06CB  0CF2               	rrf	??_SetPWM2,f
  1598  06CC  0872               	movf	??_SetPWM2,w
  1599  06CD  0026               	movlb	6	; select bank6
  1600  06CE  0098               	movwf	24	;volatile
  1601                           
  1602                           ;pwm.c: 55: CCP4CON |= (dutycycle & 0x0003) << 4;
  1603  06CF  0870               	movf	SetPWM2@dutycycle,w
  1604  06D0  3903               	andlw	3
  1605  06D1  00F2               	movwf	??_SetPWM2
  1606  06D2  3003               	movlw	3
  1607  06D3                     u355:	
  1608  06D3  35F2               	lslf	??_SetPWM2,f
  1609  06D4  3EFF               	addlw	-1
  1610  06D5  1D03               	skipz
  1611  06D6  2ED3               	goto	u355
  1612  06D7  3572               	lslf	??_SetPWM2,w
  1613  06D8  00F3               	movwf	??_SetPWM2+1
  1614  06D9  0873               	movf	??_SetPWM2+1,w
  1615  06DA  049A               	iorwf	26,f	;volatile
  1616  06DB  0008               	return
  1617  06DC                     __end_of_SetPWM2:	
  1618                           
  1619                           	psect	text10
  1620  06AC                     __ptext10:	
  1621 ;; *************** function _SetPWM1 *****************
  1622 ;; Defined at:
  1623 ;;		line 43 in file "C:\Users\yuya\Desktop\ROBOCON\pic program\PIC_16F1827\1827_goliath\pwm.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  dutycycle       2    0[COMMON] unsigned int 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1637 ;;      Params:         2       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0
  1640 ;;      Totals:         4       0       0       0       0       0
  1641 ;;Total ram usage:        4 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_forward
  1647 ;;		_Rturn
  1648 ;;		_Lturn
  1649 ;;		_init_pwm
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _SetPWM1
  1655  06AC                     _SetPWM1:	
  1656                           
  1657                           ;pwm.c: 46: CCPR3L = dutycycle >> 2;
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _SetPWM1: [wreg+status,2+status,0]
  1661  06AC  0871               	movf	SetPWM1@dutycycle+1,w
  1662  06AD  00F3               	movwf	??_SetPWM1+1
  1663  06AE  0870               	movf	SetPWM1@dutycycle,w
  1664  06AF  00F2               	movwf	??_SetPWM1
  1665  06B0  36F3               	lsrf	??_SetPWM1+1,f
  1666  06B1  0CF2               	rrf	??_SetPWM1,f
  1667  06B2  36F3               	lsrf	??_SetPWM1+1,f
  1668  06B3  0CF2               	rrf	??_SetPWM1,f
  1669  06B4  0872               	movf	??_SetPWM1,w
  1670  06B5  0026               	movlb	6	; select bank6
  1671  06B6  0091               	movwf	17	;volatile
  1672                           
  1673                           ;pwm.c: 48: CCP3CON |= (dutycycle & 0x0003) << 4;
  1674  06B7  0870               	movf	SetPWM1@dutycycle,w
  1675  06B8  3903               	andlw	3
  1676  06B9  00F2               	movwf	??_SetPWM1
  1677  06BA  3003               	movlw	3
  1678  06BB                     u345:	
  1679  06BB  35F2               	lslf	??_SetPWM1,f
  1680  06BC  3EFF               	addlw	-1
  1681  06BD  1D03               	skipz
  1682  06BE  2EBB               	goto	u345
  1683  06BF  3572               	lslf	??_SetPWM1,w
  1684  06C0  00F3               	movwf	??_SetPWM1+1
  1685  06C1  0873               	movf	??_SetPWM1+1,w
  1686  06C2  0493               	iorwf	19,f	;volatile
  1687  06C3  0008               	return
  1688  06C4                     __end_of_SetPWM1:	
  1689  007E                     btemp	set	126	;btemp
  1690  007E                     wtemp	set	126
  1691  007E                     wtemp0	set	126
  1692  0080                     wtemp1	set	128
  1693  0082                     wtemp2	set	130
  1694  0084                     wtemp3	set	132
  1695  0086                     wtemp4	set	134
  1696  0088                     wtemp5	set	136
  1697  007F                     wtemp6	set	127
  1698  007E                     ttemp	set	126
  1699  007E                     ttemp0	set	126
  1700  0081                     ttemp1	set	129
  1701  0084                     ttemp2	set	132
  1702  0087                     ttemp3	set	135
  1703  007F                     ttemp4	set	127
  1704  007E                     ltemp	set	126
  1705  007E                     ltemp0	set	126
  1706  0082                     ltemp1	set	130
  1707  0086                     ltemp2	set	134
  1708  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      0       6
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_get_usart
    _get_usart->_inRxData
    _forward->_SetPWM1
    _back->_SetPWM2
    _Rturn->_SetPWM1
    _Rturn->_SetPWM2
    _Lturn->_SetPWM1
    _Lturn->_SetPWM2

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2363
                                              8 COMMON     2     2      0
                              _Lturn
                              _Rturn
                               _back
                            _forward
                          _get_usart
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_usart                                            3     3      0     165
                                              5 COMMON     3     3      0
                              _getch
                           _inRxData
 ---------------------------------------------------------------------------------
 (2) _inRxData                                             5     5      0      72
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _getch                                                2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0     362
                            _SetPWM1
 ---------------------------------------------------------------------------------
 (1) _back                                                 0     0      0     362
                            _SetPWM2
 ---------------------------------------------------------------------------------
 (1) _Rturn                                                0     0      0     724
                            _SetPWM1
                            _SetPWM2
 ---------------------------------------------------------------------------------
 (1) _Lturn                                                0     0      0     724
                            _SetPWM1
                            _SetPWM2
 ---------------------------------------------------------------------------------
 (2) _SetPWM2                                              4     2      2     362
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _SetPWM1                                              4     2      2     362
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lturn
     _SetPWM1
     _SetPWM2
   _Rturn
     _SetPWM1
     _SetPWM2
   _back
     _SetPWM2
   _forward
     _SetPWM1
   _get_usart
     _getch
     _inRxData
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      13      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun May 21 15:12:33 2017

                     l93 077C                       l86 07B2                      l117 066D  
                    l129 0729                      l903 0739                      l909 0740  
                    l933 07E2                      l927 07CD                      l953 079B  
                    l939 07F2                      l975 0765                      l895 0725  
                    l889 067B                      _GIE 005F                      _PR2 001B  
                    u345 06BB                      u355 06D3             __CFG_BORV$HI 0000  
           __CFG_LVP$OFF 0000                     l1011 070E                     l1013 0700  
                   _C1ON 088F                     _ADGO 04E9                     _ADON 04E8  
                   _CREN 0CEC                     _RCIF 008D                     _OERR 0CE9  
                   _TXIF 008C                     _back 074F                     _data 0020  
                   _main 06FC                     _init 06DC                     fsr1h 0007  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
                   ltemp 007E                     start 0002                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000          __end_of_SetPWM1 06C4  
        __end_of_SetPWM2 06DC             main@cntError 0078                    ?_back 0070  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  _T2CON 001C                    _LATA0 0860                    _LATA1 0861  
                  _LATA6 0866                    _LATA7 0867                    _RCREG 0199  
                  _RCSTA 019D                    _SPBRG 019B                    _TRISA 008C  
                  _TRISB 008D                    _TXREG 019A                    _TXSTA 019E  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000                    _Lturn 067E  
                  _Rturn 0695                    _getch 066B          __end_of_forward 07BB  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F           __CFG_MCLRE$OFF 0000  
        __initialization 07F4             __end_of_back 0785             __end_of_main 0720  
           __end_of_init 06FC                   ??_back 0074                   ??_main 0078  
                 ??_init 0070                   ?_Lturn 0070                   ?_Rturn 0070  
                 ?_getch 0070                   _ADCON0 009D                   _ADCON1 009E  
                 _ADRESH 009C                   _ADRESL 009B                   _CCPR3L 0311  
                 _CCPR4L 0318                   _ANSELA 018C                   _ANSELB 018D  
                 _INTCON 000B                   _OSCCON 0099                   _TRISB1 0469  
                 _TRISB2 046A                ??_SetPWM1 0072                ??_SetPWM2 0072  
       __end_of_inRxData 074F                   _addata 007A                ??_forward 0074  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_Lturn 0695  
          __end_of_Rturn 06AC            __end_of_getch 067E                  ??_Lturn 0074  
                ??_Rturn 0074                  ??_getch 0070       __size_of_get_usart 0039  
             __pbssBANK0 0020               __pmaintext 06FC                  _CCP3CON 0313  
                _CCP4CON 031A                ?_inRxData 0070                  _RXDTSEL 08EF  
                _TXCKSEL 08F0                  _SetPWM1 06AC                  _SetPWM2 06C4  
      __end_of_get_usart 07F4                  __ptext1 06DC                  __ptext2 07BB  
                __ptext3 0720                  __ptext4 066B                  __ptext5 0785  
                __ptext6 074F                  __ptext7 0695                  __ptext8 067E  
                __ptext9 06C4                  _contORE 007C                  _forward 0785  
             ??_inRxData 0070     end_of_initialization 07FD         __CFG_FOSC$INTOSC 0000  
             get_usart@i 0076      start_initialization 07F4              __pbssCOMMON 007A  
              ___latbits 0001        __size_of_inRxData 002F                 ?_SetPWM1 0070  
               ?_SetPWM2 0070         SetPWM1@dutycycle 0070         SetPWM2@dutycycle 0070  
              _get_usart 07BB                 ?_forward 0070           __size_of_Lturn 0017  
         __size_of_Rturn 0017           __size_of_getch 0013               ?_get_usart 0070  
       __size_of_SetPWM1 0018         __size_of_SetPWM2 0018           inRxData@rxData 0070  
       __size_of_forward 0036                 __ptext10 06AC                 _inRxData 0720  
          __size_of_back 0036            __size_of_main 0024            __size_of_init 0020  
               getch@cnt 0070              ??_get_usart 0075             inRxData@cnt1 0071  
           inRxData@cnt2 0073  
