

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Nov 03 11:09:36 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           	psect	idataCOMRAM
    23  000540                     __pidataCOMRAM:
    24                           	opt stack 0
    25                           
    26                           ;initializer for print_7seg@pattern
    27  000540  BE                 	db	190
    28  000541  90                 	db	144
    29  000542  EC                 	db	236
    30  000543  F8                 	db	248
    31  000544  D2                 	db	210
    32  000545  7A                 	db	122
    33  000546  7E                 	db	126
    34  000547  B2                 	db	178
    35  000548  FE                 	db	254
    36  000549  FA                 	db	250
    37                           
    38                           ;initializer for dinamic@dinamic_counter
    39  00054A  01                 	db	1
    40  0000                     _RPINR1	set	3809
    41  0000                     _RPINR2	set	3810
    42  0000                     _ANCON0	set	3912
    43  0000                     _ANCON1	set	3913
    44  0000                     _DSCONHbits	set	3917
    45  0000                     _DSCONLbits	set	3916
    46  0000                     _RTCCAL	set	3902
    47  0000                     _RTCCFG	set	3903
    48  0000                     _RTCCFGbits	set	3903
    49  0000                     _RTCVALH	set	3899
    50  0000                     _RTCVALL	set	3898
    51  0000                     _EECON2	set	4007
    52  0000                     _INTCON2bits	set	4081
    53  0000                     _INTCON3bits	set	4080
    54  0000                     _INTCONbits	set	4082
    55  0000                     _LATB	set	3978
    56  0000                     _OSCCONbits	set	4051
    57  0000                     _PIE1bits	set	3997
    58  0000                     _PIR1bits	set	3998
    59  0000                     _PORTAbits	set	3968
    60  0000                     _PORTCbits	set	3970
    61  0000                     _T1CON	set	4045
    62  0000                     _TMR1H	set	4047
    63  0000                     _TMR1L	set	4046
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISC	set	3988
    67  0000                     _LATA1	set	31817
    68  0000                     _LATA2	set	31818
    69  0000                     _LATA3	set	31819
    70  0000                     _LATC6	set	31838
    71  0000                     _LATC7	set	31839
    72                           
    73                           ; #config settings
    74  0000                     
    75                           	psect	cinit
    76  00050E                     __pcinit:
    77                           	opt stack 0
    78  00050E                     start_initialization:
    79                           	opt stack 0
    80  00050E                     __initialization:
    81                           	opt stack 0
    82                           
    83                           ; Clear objects allocated to COMRAM (4 bytes)
    84  00050E  6A2C               	clrf	(__pbssCOMRAM+3)& (0+255),c
    85  000510  6A2B               	clrf	(__pbssCOMRAM+2)& (0+255),c
    86  000512  6A2A               	clrf	(__pbssCOMRAM+1)& (0+255),c
    87  000514  6A29               	clrf	__pbssCOMRAM& (0+255),c
    88                           
    89                           ; Initialize objects allocated to COMRAM (11 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  000516  0E40               	movlw	low __pidataCOMRAM
    92  000518  6EF6               	movwf	tblptrl,c
    93  00051A  0E05               	movlw	high __pidataCOMRAM
    94  00051C  6EF7               	movwf	tblptrh,c
    95  00051E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  000520  6EF8               	movwf	tblptru,c
    97  000522  EE00  F01E         	lfsr	0,__pdataCOMRAM
    98  000526  EE10 F00B          	lfsr	1,11
    99  00052A                     copy_data0:
   100  00052A  0009               	tblrd		*+
   101  00052C  CFF5 FFEE          	movff	tablat,postinc0
   102  000530  50E5               	movf	postdec1,w,c
   103  000532  50E1               	movf	fsr1l,w,c
   104  000534  E1FA               	bnz	copy_data0
   105  000536                     end_of_initialization:
   106                           	opt stack 0
   107  000536                     __end_of__initialization:
   108                           	opt stack 0
   109  000536  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   110  000538  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   111  00053A  0100               	movlb	0
   112  00053C  EF31  F002         	goto	_main	;jump to C main() function
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           postinc0	equ	0xFEE
   118                           postdec1	equ	0xFE5
   119                           fsr1l	equ	0xFE1
   120                           
   121                           	psect	bssCOMRAM
   122  000029                     __pbssCOMRAM:
   123                           	opt stack 0
   124  000029                     dinamic@hou:
   125                           	opt stack 0
   126  000029                     	ds	1
   127  00002A                     dinamic@min:
   128                           	opt stack 0
   129  00002A                     	ds	1
   130  00002B                     dinamic@sec:
   131                           	opt stack 0
   132  00002B                     	ds	1
   133  00002C                     dinamic@wkd:
   134                           	opt stack 0
   135  00002C                     	ds	1
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           postdec1	equ	0xFE5
   142                           fsr1l	equ	0xFE1
   143                           
   144                           	psect	dataCOMRAM
   145  00001E                     __pdataCOMRAM:
   146                           	opt stack 0
   147  00001E                     print_7seg@pattern:
   148                           	opt stack 0
   149  00001E                     	ds	10
   150  000028                     dinamic@dinamic_counter:
   151                           	opt stack 0
   152  000028                     	ds	1
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           postdec1	equ	0xFE5
   159                           fsr1l	equ	0xFE1
   160                           
   161                           	psect	cstackCOMRAM
   162  000001                     __pcstackCOMRAM:
   163                           	opt stack 0
   164  000001                     ?___awdiv:
   165                           	opt stack 0
   166  000001                     ?___awmod:
   167                           	opt stack 0
   168  000001                     print_column@col:
   169                           	opt stack 0
   170  000001                     print_pattern@pat:
   171                           	opt stack 0
   172  000001                     ___awdiv@dividend:
   173                           	opt stack 0
   174  000001                     ___awmod@dividend:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     print_7seg@c:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x1
   183  000002                     	ds	1
   184  000003                     ??_print_7seg:
   185  000003                     ___awdiv@divisor:
   186                           	opt stack 0
   187  000003                     ___awmod@divisor:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x2
   191  000003                     	ds	2
   192  000005                     ___awdiv@counter:
   193                           	opt stack 0
   194  000005                     ___awmod@counter:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198  000005                     	ds	1
   199  000006                     ___awdiv@sign:
   200                           	opt stack 0
   201  000006                     ___awmod@sign:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x5
   205  000006                     	ds	1
   206  000007                     print_7seg@col:
   207                           	opt stack 0
   208  000007                     ___awdiv@quotient:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x6
   212  000007                     	ds	1
   213  000008                     print_7seg@pat:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x7
   217  000008                     	ds	1
   218  000009                     ??_dinamic:
   219                           
   220                           ; 1 bytes @ 0x8
   221  000009                     	ds	1
   222  00000A                     _dinamic$604:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x9
   226  00000A                     	ds	2
   227  00000C                     ??_ISR:
   228                           
   229                           ; 1 bytes @ 0xB
   230  00000C                     	ds	16
   231  00001C                     ISR@val:
   232                           	opt stack 0
   233                           
   234                           ; 1 bytes @ 0x1B
   235  00001C                     	ds	1
   236  00001D                     ISR@val_652:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x1C
   240  00001D                     	ds	1
   241  00001E                     tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           ; 1 bytes @ 0x1D
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 127 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  2  142[None  ] int 
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels required when called:    4
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text0
   283  000462                     __ptext0:
   284                           	opt stack 0
   285  000462                     _main:
   286                           	opt stack 27
   287                           
   288                           ;main.c: 128: OSCCONbits.SCS = 0;
   289                           
   290                           ;incstack = 0
   291  000462  0EFC               	movlw	-4
   292  000464  16D3               	andwf	4051,f,c	;volatile
   293                           
   294                           ;main.c: 129: DSCONLbits.RELEASE = 0;
   295  000466  010F               	movlb	15	; () banked
   296  000468  914C               	bcf	76,0,b	;volatile
   297                           
   298                           ;main.c: 130: TRISA = 0b01110001;
   299  00046A  0E71               	movlw	113
   300  00046C  6E92               	movwf	3986,c	;volatile
   301                           
   302                           ;main.c: 131: TRISB = 0b00000001;
   303  00046E  0E01               	movlw	1
   304  000470  6E93               	movwf	3987,c	;volatile
   305                           
   306                           ;main.c: 132: TRISC = 0b00111110;
   307  000472  0E3E               	movlw	62
   308  000474  6E94               	movwf	3988,c	;volatile
   309                           
   310                           ; BSR set to: 15
   311                           ;main.c: 133: ANCON0 = 0b11111111;
   312  000476  010F               	movlb	15	; () banked
   313  000478  6948               	setf	72,b	;volatile
   314                           
   315                           ;main.c: 134: ANCON1 = 0b00011111;
   316  00047A  0E1F               	movlw	31
   317  00047C  010F               	movlb	15	; () banked
   318  00047E  6F49               	movwf	73,b	;volatile
   319                           
   320                           ;main.c: 137: T1CON = 0b10001101;
   321  000480  0E8D               	movlw	141
   322  000482  6ECD               	movwf	4045,c	;volatile
   323                           
   324                           ; BSR set to: 15
   325                           ;main.c: 138: PIE1bits.TMR1IE = 1;
   326  000484  809D               	bsf	3997,0,c	;volatile
   327                           
   328                           ;main.c: 141: EECON2 = 0x55;
   329  000486  0E55               	movlw	85
   330  000488  6EA7               	movwf	4007,c	;volatile
   331                           
   332                           ;main.c: 142: EECON2 = 0xAA;
   333  00048A  0EAA               	movlw	170
   334  00048C  6EA7               	movwf	4007,c	;volatile
   335                           
   336                           ; BSR set to: 15
   337                           ;main.c: 143: RTCCFGbits.RTCWREN = 1;
   338  00048E  010F               	movlb	15	; () banked
   339  000490  8B3F               	bsf	63,5,b	;volatile
   340                           
   341                           ;main.c: 144: RTCCFG = 0b10100000;
   342  000492  0EA0               	movlw	160
   343  000494  010F               	movlb	15	; () banked
   344  000496  6F3F               	movwf	63,b	;volatile
   345                           
   346                           ;main.c: 145: RTCCAL = 0x00;
   347  000498  0E00               	movlw	0
   348  00049A  010F               	movlb	15	; () banked
   349  00049C  6F3E               	movwf	62,b	;volatile
   350                           
   351                           ; BSR set to: 15
   352                           ;main.c: 148: INTCON2bits.INTEDG0 = 0;
   353  00049E  9CF1               	bcf	intcon2,6,c	;volatile
   354                           
   355                           ; BSR set to: 15
   356                           ;main.c: 149: INTCONbits.INT0IF = 0;
   357  0004A0  92F2               	bcf	intcon,1,c	;volatile
   358                           
   359                           ; BSR set to: 15
   360                           ;main.c: 150: INTCONbits.INT0IE = 1;
   361  0004A2  88F2               	bsf	intcon,4,c	;volatile
   362                           
   363                           ;main.c: 153: RPINR1 = 2;
   364  0004A4  0E02               	movlw	2
   365  0004A6  010E               	movlb	14	; () banked
   366  0004A8  6FE1               	movwf	225,b	;volatile
   367                           
   368                           ; BSR set to: 14
   369                           ;main.c: 154: INTCON2bits.INTEDG1 = 0;
   370  0004AA  9AF1               	bcf	intcon2,5,c	;volatile
   371                           
   372                           ; BSR set to: 14
   373                           ;main.c: 155: INTCON3bits.INT1IF = 0;
   374  0004AC  90F0               	bcf	intcon3,0,c	;volatile
   375                           
   376                           ; BSR set to: 14
   377                           ;main.c: 156: INTCON3bits.INT1IE = 1;
   378  0004AE  86F0               	bsf	intcon3,3,c	;volatile
   379                           
   380                           ;main.c: 159: RPINR2 = 13;
   381  0004B0  0E0D               	movlw	13
   382  0004B2  010E               	movlb	14	; () banked
   383  0004B4  6FE2               	movwf	226,b	;volatile
   384                           
   385                           ; BSR set to: 14
   386                           ;main.c: 160: INTCON2bits.INTEDG2 = 0;
   387  0004B6  98F1               	bcf	intcon2,4,c	;volatile
   388                           
   389                           ; BSR set to: 14
   390                           ;main.c: 161: INTCON3bits.INT2IF = 0;
   391  0004B8  92F0               	bcf	intcon3,1,c	;volatile
   392                           
   393                           ; BSR set to: 14
   394                           ;main.c: 162: INTCON3bits.INT2IE = 1;
   395  0004BA  88F0               	bsf	intcon3,4,c	;volatile
   396                           
   397                           ; BSR set to: 14
   398                           ;main.c: 165: INTCONbits.PEIE = 1;
   399  0004BC  8CF2               	bsf	intcon,6,c	;volatile
   400                           
   401                           ; BSR set to: 14
   402                           ;main.c: 166: INTCONbits.GIE = 1;
   403  0004BE  8EF2               	bsf	intcon,7,c	;volatile
   404  0004C0                     l143:
   405  0004C0  0003               	sleep		;# 
   406                           
   407                           ;main.c: 170: __nop();
   408  0004C2  F000               	nop	
   409  0004C4  D7FD               	goto	l143
   410  0004C6                     __end_of_main:
   411                           	opt stack 0
   412                           tblptru	equ	0xFF8
   413                           tblptrh	equ	0xFF7
   414                           tblptrl	equ	0xFF6
   415                           tablat	equ	0xFF5
   416                           intcon	equ	0xFF2
   417                           intcon2	equ	0xFF1
   418                           intcon3	equ	0xFF0
   419                           postinc0	equ	0xFEE
   420                           postdec1	equ	0xFE5
   421                           fsr1l	equ	0xFE1
   422                           
   423 ;; *************** function _ISR *****************
   424 ;; Defined at:
   425 ;;		line 83 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  val             1   28[COMRAM] unsigned char 
   430 ;;  val             1   27[COMRAM] unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   442 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   443 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   444 ;;Total ram usage:       18 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		___awdiv
   449 ;;		___awmod
   450 ;;		_dinamic
   451 ;;		_print_7seg
   452 ;; This function is called by:
   453 ;;		Interrupt level 2
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	intcode
   458  000008                     __pintcode:
   459                           	opt stack 0
   460  000008                     _ISR:
   461                           	opt stack 27
   462                           
   463                           ;incstack = 0
   464  000008  822D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   465  00000A  CFFA F00E          	movff	pclath,??_ISR+2
   466  00000E  CFFB F00F          	movff	pclatu,??_ISR+3
   467  000012  CFE9 F010          	movff	fsr0l,??_ISR+4
   468  000016  CFEA F011          	movff	fsr0h,??_ISR+5
   469  00001A  CFE1 F012          	movff	fsr1l,??_ISR+6
   470  00001E  CFE2 F013          	movff	fsr1h,??_ISR+7
   471  000022  CFD9 F014          	movff	fsr2l,??_ISR+8
   472  000026  CFDA F015          	movff	fsr2h,??_ISR+9
   473  00002A  CFF3 F016          	movff	prodl,??_ISR+10
   474  00002E  CFF4 F017          	movff	prodh,??_ISR+11
   475  000032  CFF6 F018          	movff	tblptrl,??_ISR+12
   476  000036  CFF7 F019          	movff	tblptrh,??_ISR+13
   477  00003A  CFF8 F01A          	movff	tblptru,??_ISR+14
   478  00003E  CFF5 F01B          	movff	tablat,??_ISR+15
   479                           
   480                           ;main.c: 84: if (INTCONbits.INT0IE && INTCONbits.INT0IF) {
   481  000042  B8F2               	btfsc	intcon,4,c	;volatile
   482  000044  A2F2               	btfss	intcon,1,c	;volatile
   483  000046  D00A               	goto	i2l1156
   484                           
   485                           ;main.c: 85: INTCONbits.INT0IF = 0;
   486  000048  92F2               	bcf	intcon,1,c	;volatile
   487                           
   488                           ;main.c: 86: INTCONbits.GIE = 0;
   489  00004A  9EF2               	bcf	intcon,7,c	;volatile
   490                           
   491                           ;main.c: 87: print_7seg(-1, ':');
   492  00004C  0E3A               	movlw	58
   493  00004E  6E02               	movwf	print_7seg@c,c
   494  000050  0EFF               	movlw	255
   495  000052  EC66  F001         	call	_print_7seg
   496                           
   497                           ;main.c: 88: DSCONHbits.DSEN = 1;
   498  000056  010F               	movlb	15	; () banked
   499  000058  8F4D               	bsf	77,7,b	;volatile
   500  00005A  0003               	sleep		;# 
   501  00005C                     i2l1156:
   502                           
   503                           ;main.c: 90: }
   504                           ;main.c: 91: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF) {
   505  00005C  B6F0               	btfsc	intcon3,3,c	;volatile
   506  00005E  A0F0               	btfss	intcon3,0,c	;volatile
   507  000060  D052               	goto	i2l1178
   508                           
   509                           ;main.c: 92: INTCON3bits.INT1IF = 0;
   510  000062  90F0               	bcf	intcon3,0,c	;volatile
   511                           
   512                           ;main.c: 93: if (PORTAbits.RA5 == 0) {
   513  000064  BA80               	btfsc	3968,5,c	;volatile
   514  000066  D04F               	goto	i2l1178
   515                           
   516                           ;main.c: 94: print_7seg(-1, ' ');
   517  000068  0E20               	movlw	32
   518  00006A  6E02               	movwf	print_7seg@c,c
   519  00006C  0EFF               	movlw	255
   520  00006E  EC66  F001         	call	_print_7seg
   521                           
   522                           ;main.c: 95: RTCCFGbits.RTCPTR0 = 0;
   523  000072  010F               	movlb	15	; () banked
   524  000074  913F               	bcf	63,0,b	;volatile
   525                           
   526                           ; BSR set to: 15
   527                           ;main.c: 96: RTCCFGbits.RTCPTR1 = 0;
   528  000076  010F               	movlb	15	; () banked
   529  000078  933F               	bcf	63,1,b	;volatile
   530  00007A                     i2l131:
   531                           
   532                           ; BSR set to: 15
   533  00007A  010F               	movlb	15	; () banked
   534  00007C  B93F               	btfsc	63,4,b	;volatile
   535  00007E  D7FD               	goto	i2l131
   536                           
   537                           ; BSR set to: 15
   538                           ;main.c: 98: uint8_t val = RTCVALH;
   539  000080  CF3B F01C          	movff	3899,ISR@val	;volatile
   540                           
   541                           ; BSR set to: 15
   542                           ;main.c: 99: val = ((val >> 4)*10 + (val & 0x0F) + 1) % 60;
   543  000084  C01C  F00C         	movff	ISR@val,??_ISR
   544  000088  3A0C               	swapf	??_ISR,f,c
   545  00008A  0E0F               	movlw	15
   546  00008C  160C               	andwf	??_ISR,f,c
   547  00008E  500C               	movf	??_ISR,w,c
   548  000090  0D0A               	mullw	10
   549  000092  C01C  F00D         	movff	ISR@val,??_ISR+1
   550  000096  0E0F               	movlw	15
   551  000098  160D               	andwf	??_ISR+1,f,c
   552  00009A  500D               	movf	??_ISR+1,w,c
   553  00009C  26F3               	addwf	prodl,f,c
   554  00009E  0E00               	movlw	0
   555  0000A0  22F4               	addwfc	prodh,f,c
   556  0000A2  0E01               	movlw	1
   557  0000A4  24F3               	addwf	prodl,w,c
   558  0000A6  6E01               	movwf	___awmod@dividend,c
   559  0000A8  0E00               	movlw	0
   560  0000AA  20F4               	addwfc	prodh,w,c
   561  0000AC  6E02               	movwf	___awmod@dividend+1,c
   562  0000AE  0E00               	movlw	0
   563  0000B0  6E04               	movwf	___awmod@divisor+1,c
   564  0000B2  0E3C               	movlw	60
   565  0000B4  6E03               	movwf	___awmod@divisor,c
   566  0000B6  ECF9  F001         	call	___awmod	;wreg free
   567  0000BA  5001               	movf	?___awmod,w,c
   568  0000BC  6E1C               	movwf	ISR@val,c
   569                           
   570                           ;main.c: 100: RTCCFGbits.RTCPTR0 = 0;
   571  0000BE  010F               	movlb	15	; () banked
   572  0000C0  913F               	bcf	63,0,b	;volatile
   573                           
   574                           ; BSR set to: 15
   575                           ;main.c: 101: RTCCFGbits.RTCPTR1 = 0;
   576  0000C2  010F               	movlb	15	; () banked
   577  0000C4  933F               	bcf	63,1,b	;volatile
   578                           
   579                           ; BSR set to: 15
   580                           ;main.c: 102: RTCVALH = ((val / 10) << 4) + ((val % 10)&0x0F);
   581  0000C6  C01C  F001         	movff	ISR@val,___awmod@dividend
   582  0000CA  6A02               	clrf	___awmod@dividend+1,c
   583  0000CC  0E00               	movlw	0
   584  0000CE  6E04               	movwf	___awmod@divisor+1,c
   585  0000D0  0E0A               	movlw	10
   586  0000D2  6E03               	movwf	___awmod@divisor,c
   587  0000D4  ECF9  F001         	call	___awmod	;wreg free
   588  0000D8  C001  F00C         	movff	?___awmod,??_ISR
   589  0000DC  C002  F00D         	movff	?___awmod+1,??_ISR+1
   590  0000E0  0E0F               	movlw	15
   591  0000E2  160C               	andwf	??_ISR,f,c
   592  0000E4  C01C  F001         	movff	ISR@val,___awdiv@dividend
   593  0000E8  6A02               	clrf	___awdiv@dividend+1,c
   594  0000EA  0E00               	movlw	0
   595  0000EC  6E04               	movwf	___awdiv@divisor+1,c
   596  0000EE  0E0A               	movlw	10
   597  0000F0  6E03               	movwf	___awdiv@divisor,c
   598  0000F2  ECB7  F001         	call	___awdiv	;wreg free
   599  0000F6  3801               	swapf	?___awdiv,w,c
   600  0000F8  0BF0               	andlw	240
   601  0000FA  240C               	addwf	??_ISR,w,c
   602  0000FC  010F               	movlb	15	; () banked
   603  0000FE  6F3B               	movwf	59,b	;volatile
   604                           
   605                           ; BSR set to: 15
   606                           ;main.c: 103: RTCVALL = 0;
   607  000100  0E00               	movlw	0
   608  000102  010F               	movlb	15	; () banked
   609  000104  6F3A               	movwf	58,b	;volatile
   610  000106                     i2l1178:
   611                           
   612                           ;main.c: 104: }
   613                           ;main.c: 105: }
   614                           ;main.c: 106: if (INTCON3bits.INT2IE && INTCON3bits.INT2IF) {
   615  000106  B8F0               	btfsc	intcon3,4,c	;volatile
   616  000108  A2F0               	btfss	intcon3,1,c	;volatile
   617  00010A  D04F               	goto	i2l1198
   618                           
   619                           ;main.c: 107: INTCON3bits.INT2IF = 0;
   620  00010C  92F0               	bcf	intcon3,1,c	;volatile
   621                           
   622                           ;main.c: 108: if (PORTCbits.RC2 == 0) {
   623  00010E  B482               	btfsc	3970,2,c	;volatile
   624  000110  D04C               	goto	i2l1198
   625                           
   626                           ;main.c: 109: print_7seg(-1, ' ');
   627  000112  0E20               	movlw	32
   628  000114  6E02               	movwf	print_7seg@c,c
   629  000116  0EFF               	movlw	255
   630  000118  EC66  F001         	call	_print_7seg
   631                           
   632                           ;main.c: 110: RTCCFGbits.RTCPTR0 = 1;
   633  00011C  010F               	movlb	15	; () banked
   634  00011E  813F               	bsf	63,0,b	;volatile
   635                           
   636                           ; BSR set to: 15
   637                           ;main.c: 111: RTCCFGbits.RTCPTR1 = 0;
   638  000120  010F               	movlb	15	; () banked
   639  000122  933F               	bcf	63,1,b	;volatile
   640  000124                     i2l136:
   641                           
   642                           ; BSR set to: 15
   643  000124  010F               	movlb	15	; () banked
   644  000126  B93F               	btfsc	63,4,b	;volatile
   645  000128  D7FD               	goto	i2l136
   646                           
   647                           ; BSR set to: 15
   648                           ;main.c: 113: uint8_t val = RTCVALL;
   649  00012A  CF3A F01D          	movff	3898,ISR@val_652	;volatile
   650                           
   651                           ; BSR set to: 15
   652                           ;main.c: 114: val = ((val >> 4)*10 + (val & 0x0F) + 1) % 24;
   653  00012E  C01D  F00C         	movff	ISR@val_652,??_ISR
   654  000132  3A0C               	swapf	??_ISR,f,c
   655  000134  0E0F               	movlw	15
   656  000136  160C               	andwf	??_ISR,f,c
   657  000138  500C               	movf	??_ISR,w,c
   658  00013A  0D0A               	mullw	10
   659  00013C  C01D  F00D         	movff	ISR@val_652,??_ISR+1
   660  000140  0E0F               	movlw	15
   661  000142  160D               	andwf	??_ISR+1,f,c
   662  000144  500D               	movf	??_ISR+1,w,c
   663  000146  26F3               	addwf	prodl,f,c
   664  000148  0E00               	movlw	0
   665  00014A  22F4               	addwfc	prodh,f,c
   666  00014C  0E01               	movlw	1
   667  00014E  24F3               	addwf	prodl,w,c
   668  000150  6E01               	movwf	___awmod@dividend,c
   669  000152  0E00               	movlw	0
   670  000154  20F4               	addwfc	prodh,w,c
   671  000156  6E02               	movwf	___awmod@dividend+1,c
   672  000158  0E00               	movlw	0
   673  00015A  6E04               	movwf	___awmod@divisor+1,c
   674  00015C  0E18               	movlw	24
   675  00015E  6E03               	movwf	___awmod@divisor,c
   676  000160  ECF9  F001         	call	___awmod	;wreg free
   677  000164  5001               	movf	?___awmod,w,c
   678  000166  6E1D               	movwf	ISR@val_652,c
   679                           
   680                           ;main.c: 115: RTCCFGbits.RTCPTR0 = 1;
   681  000168  010F               	movlb	15	; () banked
   682  00016A  813F               	bsf	63,0,b	;volatile
   683                           
   684                           ; BSR set to: 15
   685                           ;main.c: 116: RTCCFGbits.RTCPTR1 = 0;
   686  00016C  010F               	movlb	15	; () banked
   687  00016E  933F               	bcf	63,1,b	;volatile
   688                           
   689                           ; BSR set to: 15
   690                           ;main.c: 117: RTCVALL = ((val / 10) << 4) + ((val % 10)&0x0F);
   691  000170  C01D  F001         	movff	ISR@val_652,___awmod@dividend
   692  000174  6A02               	clrf	___awmod@dividend+1,c
   693  000176  0E00               	movlw	0
   694  000178  6E04               	movwf	___awmod@divisor+1,c
   695  00017A  0E0A               	movlw	10
   696  00017C  6E03               	movwf	___awmod@divisor,c
   697  00017E  ECF9  F001         	call	___awmod	;wreg free
   698  000182  C001  F00C         	movff	?___awmod,??_ISR
   699  000186  C002  F00D         	movff	?___awmod+1,??_ISR+1
   700  00018A  0E0F               	movlw	15
   701  00018C  160C               	andwf	??_ISR,f,c
   702  00018E  C01D  F001         	movff	ISR@val_652,___awdiv@dividend
   703  000192  6A02               	clrf	___awdiv@dividend+1,c
   704  000194  0E00               	movlw	0
   705  000196  6E04               	movwf	___awdiv@divisor+1,c
   706  000198  0E0A               	movlw	10
   707  00019A  6E03               	movwf	___awdiv@divisor,c
   708  00019C  ECB7  F001         	call	___awdiv	;wreg free
   709  0001A0  3801               	swapf	?___awdiv,w,c
   710  0001A2  0BF0               	andlw	240
   711  0001A4  240C               	addwf	??_ISR,w,c
   712  0001A6  010F               	movlb	15	; () banked
   713  0001A8  6F3A               	movwf	58,b	;volatile
   714  0001AA                     i2l1198:
   715                           
   716                           ;main.c: 118: }
   717                           ;main.c: 119: }
   718                           ;main.c: 120: if (PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
   719  0001AA  B09D               	btfsc	3997,0,c	;volatile
   720  0001AC  A09E               	btfss	3998,0,c	;volatile
   721  0001AE  D004               	goto	i2l140
   722                           
   723                           ;main.c: 121: PIR1bits.TMR1IF = 0;
   724  0001B0  909E               	bcf	3998,0,c	;volatile
   725                           
   726                           ;main.c: 122: TMR1H = 0xFF;
   727  0001B2  68CF               	setf	4047,c	;volatile
   728                           
   729                           ;main.c: 123: dinamic();
   730  0001B4  ECFC  F000         	call	_dinamic	;wreg free
   731  0001B8                     i2l140:
   732  0001B8  C01B  FFF5         	movff	??_ISR+15,tablat
   733  0001BC  C01A  FFF8         	movff	??_ISR+14,tblptru
   734  0001C0  C019  FFF7         	movff	??_ISR+13,tblptrh
   735  0001C4  C018  FFF6         	movff	??_ISR+12,tblptrl
   736  0001C8  C017  FFF4         	movff	??_ISR+11,prodh
   737  0001CC  C016  FFF3         	movff	??_ISR+10,prodl
   738  0001D0  C015  FFDA         	movff	??_ISR+9,fsr2h
   739  0001D4  C014  FFD9         	movff	??_ISR+8,fsr2l
   740  0001D8  C013  FFE2         	movff	??_ISR+7,fsr1h
   741  0001DC  C012  FFE1         	movff	??_ISR+6,fsr1l
   742  0001E0  C011  FFEA         	movff	??_ISR+5,fsr0h
   743  0001E4  C010  FFE9         	movff	??_ISR+4,fsr0l
   744  0001E8  C00F  FFFB         	movff	??_ISR+3,pclatu
   745  0001EC  C00E  FFFA         	movff	??_ISR+2,pclath
   746  0001F0  922D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   747  0001F2  0011               	retfie		f
   748  0001F4                     __end_of_ISR:
   749                           	opt stack 0
   750                           pclatu	equ	0xFFB
   751                           pclath	equ	0xFFA
   752                           tblptru	equ	0xFF8
   753                           tblptrh	equ	0xFF7
   754                           tblptrl	equ	0xFF6
   755                           tablat	equ	0xFF5
   756                           prodh	equ	0xFF4
   757                           prodl	equ	0xFF3
   758                           intcon	equ	0xFF2
   759                           intcon2	equ	0xFF1
   760                           intcon3	equ	0xFF0
   761                           postinc0	equ	0xFEE
   762                           fsr0h	equ	0xFEA
   763                           fsr0l	equ	0xFE9
   764                           postdec1	equ	0xFE5
   765                           fsr1h	equ	0xFE2
   766                           fsr1l	equ	0xFE1
   767                           fsr2h	equ	0xFDA
   768                           fsr2l	equ	0xFD9
   769                           
   770 ;; *************** function _dinamic *****************
   771 ;; Defined at:
   772 ;;		line 43 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    2
   793 ;; This function calls:
   794 ;;		_print_7seg
   795 ;; This function is called by:
   796 ;;		_ISR
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text2
   801  0001F8                     __ptext2:
   802                           	opt stack 0
   803  0001F8                     _dinamic:
   804                           	opt stack 27
   805                           
   806                           ;main.c: 44: static uint8_t dinamic_counter = 1;
   807                           ;main.c: 45: static uint8_t sec, min, hou, wkd;
   808                           ;main.c: 46: switch (dinamic_counter) {
   809                           
   810                           ;incstack = 0
   811  0001F8  D056               	goto	i2l1062
   812  0001FA                     i2l1024:
   813                           
   814                           ;main.c: 48: print_7seg(4, '0' + (min & 0x0F));
   815  0001FA  502A               	movf	dinamic@min,w,c
   816  0001FC  0B0F               	andlw	15
   817  0001FE  0F30               	addlw	48
   818  000200  6E02               	movwf	print_7seg@c,c
   819  000202  0E04               	movlw	4
   820  000204  EC66  F001         	call	_print_7seg
   821  000208  D034               	goto	i2l1050
   822  00020A                     i2l1028:
   823                           
   824                           ;main.c: 52: print_7seg(3, '0' + (min >> 4));
   825  00020A  382A               	swapf	dinamic@min,w,c
   826  00020C  0B0F               	andlw	15
   827  00020E  0F30               	addlw	48
   828  000210  6E02               	movwf	print_7seg@c,c
   829  000212  0E03               	movlw	3
   830  000214  EC66  F001         	call	_print_7seg
   831  000218  D02C               	goto	i2l1050
   832  00021A                     i2l1032:
   833                           
   834                           ;main.c: 56: print_7seg(2, '0' + (hou & 0x0F));
   835  00021A  5029               	movf	dinamic@hou,w,c
   836  00021C  0B0F               	andlw	15
   837  00021E  0F30               	addlw	48
   838  000220  6E02               	movwf	print_7seg@c,c
   839  000222  0E02               	movlw	2
   840  000224  EC66  F001         	call	_print_7seg
   841  000228  D024               	goto	i2l1050
   842  00022A                     i2l1036:
   843                           
   844                           ;main.c: 60: if (hou & 0xF0) print_7seg(1, '0' + (hou >> 4));
   845  00022A  C029  F009         	movff	dinamic@hou,??_dinamic
   846  00022E  0EF0               	movlw	240
   847  000230  1609               	andwf	??_dinamic,f,c
   848  000232  B4D8               	btfsc	status,2,c
   849  000234  D008               	goto	i2l1040
   850  000236  3829               	swapf	dinamic@hou,w,c
   851  000238  0B0F               	andlw	15
   852  00023A  0F30               	addlw	48
   853  00023C  6E02               	movwf	print_7seg@c,c
   854  00023E  0E01               	movlw	1
   855  000240  EC66  F001         	call	_print_7seg
   856  000244  D016               	goto	i2l1050
   857  000246                     i2l1040:
   858                           
   859                           ;main.c: 61: else print_7seg(1, ' ');
   860  000246  0E20               	movlw	32
   861  000248  6E02               	movwf	print_7seg@c,c
   862  00024A  0E01               	movlw	1
   863  00024C  EC66  F001         	call	_print_7seg
   864  000250  D010               	goto	i2l1050
   865  000252                     i2l116:
   866                           
   867                           ;main.c: 65: print_7seg(5, RTCCFGbits.HALFSEC ? ' ' : ':');
   868  000252  010F               	movlb	15	; () banked
   869  000254  B73F               	btfsc	63,3,b	;volatile
   870  000256  D004               	goto	i2l1046
   871                           
   872                           ; BSR set to: 15
   873  000258  0E00               	movlw	0
   874  00025A  6E0B               	movwf	_dinamic$604+1,c
   875  00025C  0E3A               	movlw	58
   876  00025E  D003               	goto	L1
   877  000260                     i2l1046:
   878                           
   879                           ; BSR set to: 15
   880  000260  0E00               	movlw	0
   881  000262  6E0B               	movwf	_dinamic$604+1,c
   882  000264  0E20               	movlw	32
   883  000266                     L1:
   884  000266  6E0A               	movwf	_dinamic$604,c
   885                           
   886                           ; BSR set to: 15
   887                           
   888                           ; BSR set to: 15
   889  000268  C00A  F002         	movff	_dinamic$604,print_7seg@c
   890  00026C  0E05               	movlw	5
   891  00026E  EC66  F001         	call	_print_7seg
   892  000272                     i2l1050:
   893                           
   894                           ;main.c: 66: TMR1L += 0xF0;
   895  000272  0EF0               	movlw	240
   896  000274  26CE               	addwf	4046,f,c	;volatile
   897                           
   898                           ;main.c: 67: break;
   899  000276  D028               	goto	i2l1064
   900  000278                     i2l1052:
   901                           
   902                           ;main.c: 69: print_7seg(-1, ' ');
   903  000278  0E20               	movlw	32
   904  00027A  6E02               	movwf	print_7seg@c,c
   905  00027C  0EFF               	movlw	255
   906  00027E  EC66  F001         	call	_print_7seg
   907                           
   908                           ;main.c: 70: RTCCFGbits.RTCPTR0 = 1;
   909  000282  010F               	movlb	15	; () banked
   910  000284  813F               	bsf	63,0,b	;volatile
   911                           
   912                           ; BSR set to: 15
   913                           ;main.c: 71: RTCCFGbits.RTCPTR1 = 0;
   914  000286  010F               	movlb	15	; () banked
   915  000288  933F               	bcf	63,1,b	;volatile
   916  00028A                     i2l122:
   917                           
   918                           ; BSR set to: 15
   919  00028A  010F               	movlb	15	; () banked
   920  00028C  B93F               	btfsc	63,4,b	;volatile
   921  00028E  D7FD               	goto	i2l122
   922                           
   923                           ; BSR set to: 15
   924                           ;main.c: 73: hou = RTCVALL;
   925  000290  CF3A F029          	movff	3898,dinamic@hou	;volatile
   926                           
   927                           ;main.c: 74: wkd = RTCVALH;
   928  000294  CF3B F02C          	movff	3899,dinamic@wkd	;volatile
   929                           
   930                           ;main.c: 75: sec = RTCVALL;
   931  000298  CF3A F02B          	movff	3898,dinamic@sec	;volatile
   932                           
   933                           ;main.c: 76: min = RTCVALH;
   934  00029C  CF3B F02A          	movff	3899,dinamic@min	;volatile
   935                           
   936                           ; BSR set to: 15
   937                           ;main.c: 77: dinamic_counter = 0;
   938  0002A0  0E00               	movlw	0
   939  0002A2  6E28               	movwf	dinamic@dinamic_counter,c
   940                           
   941                           ; BSR set to: 15
   942                           ;main.c: 79: }
   943                           
   944                           ;main.c: 78: break;
   945  0002A4  D011               	goto	i2l1064
   946  0002A6                     i2l1062:
   947  0002A6  5028               	movf	dinamic@dinamic_counter,w,c
   948                           
   949                           ; Switch size 1, requested type "space"
   950                           ; Number of cases is 5, Range of values is 1 to 5
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte           16     9 (average)
   954                           ;	Chosen strategy is simple_byte
   955  0002A8  0A01               	xorlw	1	; case 1
   956  0002AA  B4D8               	btfsc	status,2,c
   957  0002AC  D7A6               	goto	i2l1024
   958  0002AE  0A03               	xorlw	3	; case 2
   959  0002B0  B4D8               	btfsc	status,2,c
   960  0002B2  D7AB               	goto	i2l1028
   961  0002B4  0A01               	xorlw	1	; case 3
   962  0002B6  B4D8               	btfsc	status,2,c
   963  0002B8  D7B0               	goto	i2l1032
   964  0002BA  0A07               	xorlw	7	; case 4
   965  0002BC  B4D8               	btfsc	status,2,c
   966  0002BE  D7B5               	goto	i2l1036
   967  0002C0  0A01               	xorlw	1	; case 5
   968  0002C2  B4D8               	btfsc	status,2,c
   969  0002C4  D7C6               	goto	i2l116
   970  0002C6  D7D8               	goto	i2l1052
   971  0002C8                     i2l1064:
   972                           
   973                           ;main.c: 80: dinamic_counter++;
   974  0002C8  2A28               	incf	dinamic@dinamic_counter,f,c
   975  0002CA  0012               	return		;funcret
   976  0002CC                     __end_of_dinamic:
   977                           	opt stack 0
   978                           pclatu	equ	0xFFB
   979                           pclath	equ	0xFFA
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           prodh	equ	0xFF4
   985                           prodl	equ	0xFF3
   986                           intcon	equ	0xFF2
   987                           intcon2	equ	0xFF1
   988                           intcon3	equ	0xFF0
   989                           postinc0	equ	0xFEE
   990                           fsr0h	equ	0xFEA
   991                           fsr0l	equ	0xFE9
   992                           postdec1	equ	0xFE5
   993                           fsr1h	equ	0xFE2
   994                           fsr1l	equ	0xFE1
   995                           fsr2h	equ	0xFDA
   996                           fsr2l	equ	0xFD9
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _print_7seg *****************
  1000 ;; Defined at:
  1001 ;;		line 21 in file "7seg.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;  col             1    wreg     unsigned char 
  1004 ;;  c               1    1[COMRAM] unsigned char 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  col             1    6[COMRAM] unsigned char 
  1007 ;;  pat             1    7[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1017 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;Total ram usage:        7 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    1
  1024 ;; This function calls:
  1025 ;;		_print_column
  1026 ;;		_print_pattern
  1027 ;; This function is called by:
  1028 ;;		_dinamic
  1029 ;;		_ISR
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text3
  1034  0002CC                     __ptext3:
  1035                           	opt stack 0
  1036  0002CC                     _print_7seg:
  1037                           	opt stack 28
  1038                           
  1039                           ;incstack = 0
  1040                           ;print_7seg@col stored from wreg
  1041  0002CC  6E07               	movwf	print_7seg@col,c
  1042                           
  1043                           ;7seg.c: 23: static uint8_t pattern[10] = {
  1044                           ;7seg.c: 24: 0b10111110,
  1045                           ;7seg.c: 25: 0b10010000,
  1046                           ;7seg.c: 26: 0b11101100,
  1047                           ;7seg.c: 27: 0b11111000,
  1048                           ;7seg.c: 28: 0b11010010,
  1049                           ;7seg.c: 29: 0b01111010,
  1050                           ;7seg.c: 30: 0b01111110,
  1051                           ;7seg.c: 31: 0b10110010,
  1052                           ;7seg.c: 32: 0b11111110,
  1053                           ;7seg.c: 33: 0b11111010,
  1054                           ;7seg.c: 34: };
  1055                           ;7seg.c: 35: uint8_t pat;
  1056                           ;7seg.c: 36: switch (c) {
  1057  0002CE  D01C               	goto	i2l1018
  1058  0002D0                     i2l1006:
  1059                           
  1060                           ;7seg.c: 38: pat = 0b00000000;
  1061  0002D0  0E00               	movlw	0
  1062  0002D2  D018               	goto	L5
  1063  0002D4                     i2l1008:
  1064                           
  1065                           ;7seg.c: 41: pat = 0b10100000;
  1066  0002D4  0EA0               	movlw	160
  1067  0002D6  D016               	goto	L5
  1068  0002D8                     i2l1010:
  1069                           
  1070                           ;7seg.c: 44: pat = 0b01000000;
  1071  0002D8  0E40               	movlw	64
  1072  0002DA  D014               	goto	L5
  1073  0002DC                     i2l1012:
  1074                           
  1075                           ;7seg.c: 47: case '1':
  1076                           ;7seg.c: 48: case '2':
  1077                           ;7seg.c: 49: case '3':
  1078                           ;7seg.c: 50: case '4':
  1079                           ;7seg.c: 51: case '5':
  1080                           ;7seg.c: 52: case '6':
  1081                           ;7seg.c: 53: case '7':
  1082                           ;7seg.c: 54: case '8':
  1083                           ;7seg.c: 55: case '9':
  1084                           ;7seg.c: 56: pat = pattern[c - '0'];
  1085  0002DC  0ED0               	movlw	208
  1086  0002DE  6E03               	movwf	??_print_7seg& (0+255),c
  1087  0002E0  0EFF               	movlw	255
  1088  0002E2  6E04               	movwf	(??_print_7seg+1)& (0+255),c
  1089  0002E4  5002               	movf	print_7seg@c,w,c
  1090  0002E6  6E05               	movwf	(??_print_7seg+2)& (0+255),c
  1091  0002E8  6A06               	clrf	(??_print_7seg+3)& (0+255),c
  1092  0002EA  5003               	movf	??_print_7seg,w,c
  1093  0002EC  2605               	addwf	??_print_7seg+2,f,c
  1094  0002EE  5004               	movf	??_print_7seg+1,w,c
  1095  0002F0  2206               	addwfc	??_print_7seg+3,f,c
  1096  0002F2  0E1E               	movlw	low print_7seg@pattern
  1097  0002F4  2405               	addwf	??_print_7seg+2,w,c
  1098  0002F6  6ED9               	movwf	fsr2l,c
  1099  0002F8  0E00               	movlw	high print_7seg@pattern
  1100  0002FA  2006               	addwfc	??_print_7seg+3,w,c
  1101  0002FC  6EDA               	movwf	fsr2h,c
  1102  0002FE  50DF               	movf	indf2,w,c
  1103  000300  D001               	goto	L5
  1104  000302                     i2l1014:
  1105                           
  1106                           ;7seg.c: 59: pat = 0b00000010;
  1107  000302  0E02               	movlw	2
  1108  000304                     L5:
  1109  000304  6E08               	movwf	print_7seg@pat,c
  1110                           
  1111                           ;7seg.c: 61: }
  1112                           
  1113                           ;7seg.c: 60: break;
  1114  000306  D029               	goto	i2l1020
  1115  000308                     i2l1018:
  1116  000308  5002               	movf	print_7seg@c,w,c
  1117                           
  1118                           ; Switch size 1, requested type "space"
  1119                           ; Number of cases is 13, Range of values is 32 to 58
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte           40    21 (average)
  1123                           ;	Chosen strategy is simple_byte
  1124  00030A  0A20               	xorlw	32	; case 32
  1125  00030C  B4D8               	btfsc	status,2,c
  1126  00030E  D7E0               	goto	i2l1006
  1127  000310  0A0D               	xorlw	13	; case 45
  1128  000312  B4D8               	btfsc	status,2,c
  1129  000314  D7E1               	goto	i2l1010
  1130  000316  0A1D               	xorlw	29	; case 48
  1131  000318  B4D8               	btfsc	status,2,c
  1132  00031A  D7E0               	goto	i2l1012
  1133  00031C  0A01               	xorlw	1	; case 49
  1134  00031E  B4D8               	btfsc	status,2,c
  1135  000320  D7DD               	goto	i2l1012
  1136  000322  0A03               	xorlw	3	; case 50
  1137  000324  B4D8               	btfsc	status,2,c
  1138  000326  D7DA               	goto	i2l1012
  1139  000328  0A01               	xorlw	1	; case 51
  1140  00032A  B4D8               	btfsc	status,2,c
  1141  00032C  D7D7               	goto	i2l1012
  1142  00032E  0A07               	xorlw	7	; case 52
  1143  000330  B4D8               	btfsc	status,2,c
  1144  000332  D7D4               	goto	i2l1012
  1145  000334  0A01               	xorlw	1	; case 53
  1146  000336  B4D8               	btfsc	status,2,c
  1147  000338  D7D1               	goto	i2l1012
  1148  00033A  0A03               	xorlw	3	; case 54
  1149  00033C  B4D8               	btfsc	status,2,c
  1150  00033E  D7CE               	goto	i2l1012
  1151  000340  0A01               	xorlw	1	; case 55
  1152  000342  B4D8               	btfsc	status,2,c
  1153  000344  D7CB               	goto	i2l1012
  1154  000346  0A0F               	xorlw	15	; case 56
  1155  000348  B4D8               	btfsc	status,2,c
  1156  00034A  D7C8               	goto	i2l1012
  1157  00034C  0A01               	xorlw	1	; case 57
  1158  00034E  B4D8               	btfsc	status,2,c
  1159  000350  D7C5               	goto	i2l1012
  1160  000352  0A03               	xorlw	3	; case 58
  1161  000354  B4D8               	btfsc	status,2,c
  1162  000356  D7BE               	goto	i2l1008
  1163  000358  D7D4               	goto	i2l1014
  1164  00035A                     i2l1020:
  1165                           
  1166                           ;7seg.c: 62: print_column(0);
  1167  00035A  0E00               	movlw	0
  1168  00035C  EC63  F002         	call	_print_column
  1169                           
  1170                           ;7seg.c: 63: print_pattern(pat);
  1171  000360  5008               	movf	print_7seg@pat,w,c
  1172  000362  ECA6  F002         	call	_print_pattern
  1173                           
  1174                           ;7seg.c: 64: print_column(col);
  1175  000366  5007               	movf	print_7seg@col,w,c
  1176  000368  EC63  F002         	call	_print_column
  1177  00036C  0012               	return		;funcret
  1178  00036E                     __end_of_print_7seg:
  1179                           	opt stack 0
  1180                           pclatu	equ	0xFFB
  1181                           pclath	equ	0xFFA
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           intcon	equ	0xFF2
  1189                           intcon2	equ	0xFF1
  1190                           intcon3	equ	0xFF0
  1191                           postinc0	equ	0xFEE
  1192                           fsr0h	equ	0xFEA
  1193                           fsr0l	equ	0xFE9
  1194                           postdec1	equ	0xFE5
  1195                           fsr1h	equ	0xFE2
  1196                           fsr1l	equ	0xFE1
  1197                           indf2	equ	0xFDF
  1198                           fsr2h	equ	0xFDA
  1199                           fsr2l	equ	0xFD9
  1200                           status	equ	0xFD8
  1201                           
  1202 ;; *************** function _print_pattern *****************
  1203 ;; Defined at:
  1204 ;;		line 17 in file "7seg.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  pat             1    wreg     unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  pat             1    0[COMRAM] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;Total ram usage:        1 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_print_7seg
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text4
  1232  00054C                     __ptext4:
  1233                           	opt stack 0
  1234  00054C                     _print_pattern:
  1235                           	opt stack 28
  1236                           
  1237                           ;incstack = 0
  1238                           ;print_pattern@pat stored from wreg
  1239  00054C  6E01               	movwf	print_pattern@pat,c
  1240                           
  1241                           ;7seg.c: 18: LATB = ~pat;
  1242  00054E  5001               	movf	print_pattern@pat,w,c
  1243  000550  0AFF               	xorlw	255
  1244  000552  6E8A               	movwf	3978,c	;volatile
  1245  000554  0012               	return		;funcret
  1246  000556                     __end_of_print_pattern:
  1247                           	opt stack 0
  1248                           pclatu	equ	0xFFB
  1249                           pclath	equ	0xFFA
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           prodh	equ	0xFF4
  1255                           prodl	equ	0xFF3
  1256                           intcon	equ	0xFF2
  1257                           intcon2	equ	0xFF1
  1258                           intcon3	equ	0xFF0
  1259                           postinc0	equ	0xFEE
  1260                           fsr0h	equ	0xFEA
  1261                           fsr0l	equ	0xFE9
  1262                           postdec1	equ	0xFE5
  1263                           fsr1h	equ	0xFE2
  1264                           fsr1l	equ	0xFE1
  1265                           indf2	equ	0xFDF
  1266                           fsr2h	equ	0xFDA
  1267                           fsr2l	equ	0xFD9
  1268                           status	equ	0xFD8
  1269                           
  1270 ;; *************** function _print_column *****************
  1271 ;; Defined at:
  1272 ;;		line 9 in file "7seg.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  col             1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  col             1    0[COMRAM] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1290 ;;Total ram usage:        1 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_print_7seg
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text5
  1300  0004C6                     __ptext5:
  1301                           	opt stack 0
  1302  0004C6                     _print_column:
  1303                           	opt stack 28
  1304                           
  1305                           ;incstack = 0
  1306                           ;print_column@col stored from wreg
  1307  0004C6  6E01               	movwf	print_column@col,c
  1308                           
  1309                           ;7seg.c: 10: LATA1 = (col == 1);
  1310  0004C8  0401               	decf	print_column@col,w,c
  1311  0004CA  A4D8               	btfss	status,2,c
  1312  0004CC  D002               	goto	i2u38_40
  1313  0004CE  8289               	bsf	3977,1,c	;volatile
  1314  0004D0  D001               	goto	i2l994
  1315  0004D2                     i2u38_40:
  1316  0004D2  9289               	bcf	3977,1,c	;volatile
  1317  0004D4                     i2l994:
  1318                           
  1319                           ;7seg.c: 11: LATA2 = (col == 2);
  1320  0004D4  0E02               	movlw	2
  1321  0004D6  1801               	xorwf	print_column@col,w,c
  1322  0004D8  A4D8               	btfss	status,2,c
  1323  0004DA  D002               	goto	i2u40_40
  1324  0004DC  8489               	bsf	3977,2,c	;volatile
  1325  0004DE  D001               	goto	i2l996
  1326  0004E0                     i2u40_40:
  1327  0004E0  9489               	bcf	3977,2,c	;volatile
  1328  0004E2                     i2l996:
  1329                           
  1330                           ;7seg.c: 12: LATC7 = (col == 3);
  1331  0004E2  0E03               	movlw	3
  1332  0004E4  1801               	xorwf	print_column@col,w,c
  1333  0004E6  A4D8               	btfss	status,2,c
  1334  0004E8  D002               	goto	i2u42_40
  1335  0004EA  8E8B               	bsf	3979,7,c	;volatile
  1336  0004EC  D001               	goto	i2l998
  1337  0004EE                     i2u42_40:
  1338  0004EE  9E8B               	bcf	3979,7,c	;volatile
  1339  0004F0                     i2l998:
  1340                           
  1341                           ;7seg.c: 13: LATC6 = (col == 4);
  1342  0004F0  0E04               	movlw	4
  1343  0004F2  1801               	xorwf	print_column@col,w,c
  1344  0004F4  A4D8               	btfss	status,2,c
  1345  0004F6  D002               	goto	i2u44_40
  1346  0004F8  8C8B               	bsf	3979,6,c	;volatile
  1347  0004FA  D001               	goto	i2l1000
  1348  0004FC                     i2u44_40:
  1349  0004FC  9C8B               	bcf	3979,6,c	;volatile
  1350  0004FE                     i2l1000:
  1351                           
  1352                           ;7seg.c: 14: LATA3 = (col == 5);
  1353  0004FE  0E05               	movlw	5
  1354  000500  1801               	xorwf	print_column@col,w,c
  1355  000502  A4D8               	btfss	status,2,c
  1356  000504  D002               	goto	i2u46_40
  1357  000506  8689               	bsf	3977,3,c	;volatile
  1358  000508  0012               	return	
  1359  00050A                     i2u46_40:
  1360  00050A  9689               	bcf	3977,3,c	;volatile
  1361  00050C  0012               	return		;funcret
  1362  00050E                     __end_of_print_column:
  1363                           	opt stack 0
  1364                           pclatu	equ	0xFFB
  1365                           pclath	equ	0xFFA
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           intcon	equ	0xFF2
  1373                           intcon2	equ	0xFF1
  1374                           intcon3	equ	0xFF0
  1375                           postinc0	equ	0xFEE
  1376                           fsr0h	equ	0xFEA
  1377                           fsr0l	equ	0xFE9
  1378                           postdec1	equ	0xFE5
  1379                           fsr1h	equ	0xFE2
  1380                           fsr1l	equ	0xFE1
  1381                           indf2	equ	0xFDF
  1382                           fsr2h	equ	0xFDA
  1383                           fsr2l	equ	0xFD9
  1384                           status	equ	0xFD8
  1385                           
  1386 ;; *************** function ___awmod *****************
  1387 ;; Defined at:
  1388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  dividend        2    0[COMRAM] int 
  1391 ;;  divisor         2    2[COMRAM] int 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  sign            1    5[COMRAM] unsigned char 
  1394 ;;  counter         1    4[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  2    0[COMRAM] int 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1404 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1408 ;;Total ram usage:        6 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_ISR
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text6
  1418  0003F2                     __ptext6:
  1419                           	opt stack 0
  1420  0003F2                     ___awmod:
  1421                           	opt stack 29
  1422                           
  1423                           ;incstack = 0
  1424  0003F2  0E00               	movlw	0
  1425  0003F4  6E06               	movwf	___awmod@sign,c
  1426  0003F6  AE02               	btfss	___awmod@dividend+1,7,c
  1427  0003F8  D006               	goto	i2l1118
  1428  0003FA  6C01               	negf	___awmod@dividend,c
  1429  0003FC  1E02               	comf	___awmod@dividend+1,f,c
  1430  0003FE  B0D8               	btfsc	status,0,c
  1431  000400  2A02               	incf	___awmod@dividend+1,f,c
  1432  000402  0E01               	movlw	1
  1433  000404  6E06               	movwf	___awmod@sign,c
  1434  000406                     i2l1118:
  1435  000406  AE04               	btfss	___awmod@divisor+1,7,c
  1436  000408  D004               	goto	i2l1122
  1437  00040A  6C03               	negf	___awmod@divisor,c
  1438  00040C  1E04               	comf	___awmod@divisor+1,f,c
  1439  00040E  B0D8               	btfsc	status,0,c
  1440  000410  2A04               	incf	___awmod@divisor+1,f,c
  1441  000412                     i2l1122:
  1442  000412  5003               	movf	___awmod@divisor,w,c
  1443  000414  1004               	iorwf	___awmod@divisor+1,w,c
  1444  000416  B4D8               	btfsc	status,2,c
  1445  000418  D018               	goto	i2l1138
  1446  00041A  0E01               	movlw	1
  1447  00041C  6E05               	movwf	___awmod@counter,c
  1448  00041E  D004               	goto	i2l1128
  1449  000420                     i2l1126:
  1450  000420  90D8               	bcf	status,0,c
  1451  000422  3603               	rlcf	___awmod@divisor,f,c
  1452  000424  3604               	rlcf	___awmod@divisor+1,f,c
  1453  000426  2A05               	incf	___awmod@counter,f,c
  1454  000428                     i2l1128:
  1455  000428  AE04               	btfss	___awmod@divisor+1,7,c
  1456  00042A  D7FA               	goto	i2l1126
  1457  00042C                     i2l1130:
  1458  00042C  5003               	movf	___awmod@divisor,w,c
  1459  00042E  5C01               	subwf	___awmod@dividend,w,c
  1460  000430  5004               	movf	___awmod@divisor+1,w,c
  1461  000432  5802               	subwfb	___awmod@dividend+1,w,c
  1462  000434  A0D8               	btfss	status,0,c
  1463  000436  D004               	goto	i2l1134
  1464  000438  5003               	movf	___awmod@divisor,w,c
  1465  00043A  5E01               	subwf	___awmod@dividend,f,c
  1466  00043C  5004               	movf	___awmod@divisor+1,w,c
  1467  00043E  5A02               	subwfb	___awmod@dividend+1,f,c
  1468  000440                     i2l1134:
  1469  000440  90D8               	bcf	status,0,c
  1470  000442  3204               	rrcf	___awmod@divisor+1,f,c
  1471  000444  3203               	rrcf	___awmod@divisor,f,c
  1472  000446  2E05               	decfsz	___awmod@counter,f,c
  1473  000448  D7F1               	goto	i2l1130
  1474  00044A                     i2l1138:
  1475  00044A  5006               	movf	___awmod@sign,w,c
  1476  00044C  B4D8               	btfsc	status,2,c
  1477  00044E  D004               	goto	i2l1142
  1478  000450  6C01               	negf	___awmod@dividend,c
  1479  000452  1E02               	comf	___awmod@dividend+1,f,c
  1480  000454  B0D8               	btfsc	status,0,c
  1481  000456  2A02               	incf	___awmod@dividend+1,f,c
  1482  000458                     i2l1142:
  1483  000458  C001  F001         	movff	___awmod@dividend,?___awmod
  1484  00045C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1485  000460  0012               	return	
  1486  000462                     __end_of___awmod:
  1487                           	opt stack 0
  1488                           pclatu	equ	0xFFB
  1489                           pclath	equ	0xFFA
  1490                           tblptru	equ	0xFF8
  1491                           tblptrh	equ	0xFF7
  1492                           tblptrl	equ	0xFF6
  1493                           tablat	equ	0xFF5
  1494                           prodh	equ	0xFF4
  1495                           prodl	equ	0xFF3
  1496                           intcon	equ	0xFF2
  1497                           intcon2	equ	0xFF1
  1498                           intcon3	equ	0xFF0
  1499                           postinc0	equ	0xFEE
  1500                           fsr0h	equ	0xFEA
  1501                           fsr0l	equ	0xFE9
  1502                           postdec1	equ	0xFE5
  1503                           fsr1h	equ	0xFE2
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function ___awdiv *****************
  1511 ;; Defined at:
  1512 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  dividend        2    0[COMRAM] int 
  1515 ;;  divisor         2    2[COMRAM] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  quotient        2    6[COMRAM] int 
  1518 ;;  sign            1    5[COMRAM] unsigned char 
  1519 ;;  counter         1    4[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2    0[COMRAM] int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;Total ram usage:        8 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_ISR
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text7
  1543  00036E                     __ptext7:
  1544                           	opt stack 0
  1545  00036E                     ___awdiv:
  1546                           	opt stack 29
  1547                           
  1548                           ;incstack = 0
  1549  00036E  0E00               	movlw	0
  1550  000370  6E06               	movwf	___awdiv@sign,c
  1551  000372  AE04               	btfss	___awdiv@divisor+1,7,c
  1552  000374  D006               	goto	i2l1074
  1553  000376  6C03               	negf	___awdiv@divisor,c
  1554  000378  1E04               	comf	___awdiv@divisor+1,f,c
  1555  00037A  B0D8               	btfsc	status,0,c
  1556  00037C  2A04               	incf	___awdiv@divisor+1,f,c
  1557  00037E  0E01               	movlw	1
  1558  000380  6E06               	movwf	___awdiv@sign,c
  1559  000382                     i2l1074:
  1560  000382  AE02               	btfss	___awdiv@dividend+1,7,c
  1561  000384  D006               	goto	i2l1080
  1562  000386  6C01               	negf	___awdiv@dividend,c
  1563  000388  1E02               	comf	___awdiv@dividend+1,f,c
  1564  00038A  B0D8               	btfsc	status,0,c
  1565  00038C  2A02               	incf	___awdiv@dividend+1,f,c
  1566  00038E  0E01               	movlw	1
  1567  000390  1A06               	xorwf	___awdiv@sign,f,c
  1568  000392                     i2l1080:
  1569  000392  0E00               	movlw	0
  1570  000394  6E08               	movwf	___awdiv@quotient+1,c
  1571  000396  0E00               	movlw	0
  1572  000398  6E07               	movwf	___awdiv@quotient,c
  1573  00039A  5003               	movf	___awdiv@divisor,w,c
  1574  00039C  1004               	iorwf	___awdiv@divisor+1,w,c
  1575  00039E  B4D8               	btfsc	status,2,c
  1576  0003A0  D01C               	goto	i2l1102
  1577  0003A2  0E01               	movlw	1
  1578  0003A4  6E05               	movwf	___awdiv@counter,c
  1579  0003A6  D004               	goto	i2l1088
  1580  0003A8                     i2l1086:
  1581  0003A8  90D8               	bcf	status,0,c
  1582  0003AA  3603               	rlcf	___awdiv@divisor,f,c
  1583  0003AC  3604               	rlcf	___awdiv@divisor+1,f,c
  1584  0003AE  2A05               	incf	___awdiv@counter,f,c
  1585  0003B0                     i2l1088:
  1586  0003B0  AE04               	btfss	___awdiv@divisor+1,7,c
  1587  0003B2  D7FA               	goto	i2l1086
  1588  0003B4                     i2l1090:
  1589  0003B4  90D8               	bcf	status,0,c
  1590  0003B6  3607               	rlcf	___awdiv@quotient,f,c
  1591  0003B8  3608               	rlcf	___awdiv@quotient+1,f,c
  1592  0003BA  5003               	movf	___awdiv@divisor,w,c
  1593  0003BC  5C01               	subwf	___awdiv@dividend,w,c
  1594  0003BE  5004               	movf	___awdiv@divisor+1,w,c
  1595  0003C0  5802               	subwfb	___awdiv@dividend+1,w,c
  1596  0003C2  A0D8               	btfss	status,0,c
  1597  0003C4  D005               	goto	i2l1098
  1598  0003C6  5003               	movf	___awdiv@divisor,w,c
  1599  0003C8  5E01               	subwf	___awdiv@dividend,f,c
  1600  0003CA  5004               	movf	___awdiv@divisor+1,w,c
  1601  0003CC  5A02               	subwfb	___awdiv@dividend+1,f,c
  1602  0003CE  8007               	bsf	___awdiv@quotient,0,c
  1603  0003D0                     i2l1098:
  1604  0003D0  90D8               	bcf	status,0,c
  1605  0003D2  3204               	rrcf	___awdiv@divisor+1,f,c
  1606  0003D4  3203               	rrcf	___awdiv@divisor,f,c
  1607  0003D6  2E05               	decfsz	___awdiv@counter,f,c
  1608  0003D8  D7ED               	goto	i2l1090
  1609  0003DA                     i2l1102:
  1610  0003DA  5006               	movf	___awdiv@sign,w,c
  1611  0003DC  B4D8               	btfsc	status,2,c
  1612  0003DE  D004               	goto	i2l1106
  1613  0003E0  6C07               	negf	___awdiv@quotient,c
  1614  0003E2  1E08               	comf	___awdiv@quotient+1,f,c
  1615  0003E4  B0D8               	btfsc	status,0,c
  1616  0003E6  2A08               	incf	___awdiv@quotient+1,f,c
  1617  0003E8                     i2l1106:
  1618  0003E8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1619  0003EC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1620  0003F0  0012               	return	
  1621  0003F2                     __end_of___awdiv:
  1622                           	opt stack 0
  1623  0000                     pclatu	equ	0xFFB
  1624                           pclath	equ	0xFFA
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           intcon	equ	0xFF2
  1632                           intcon2	equ	0xFF1
  1633                           intcon3	equ	0xFF0
  1634                           postinc0	equ	0xFEE
  1635                           fsr0h	equ	0xFEA
  1636                           fsr0l	equ	0xFE9
  1637                           postdec1	equ	0xFE5
  1638                           fsr1h	equ	0xFE2
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           pclatu	equ	0xFFB
  1645                           pclath	equ	0xFFA
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           intcon	equ	0xFF2
  1653                           intcon2	equ	0xFF1
  1654                           intcon3	equ	0xFF0
  1655                           postinc0	equ	0xFEE
  1656                           fsr0h	equ	0xFEA
  1657                           fsr0l	equ	0xFE9
  1658                           postdec1	equ	0xFE5
  1659                           fsr1h	equ	0xFE2
  1660                           fsr1l	equ	0xFE1
  1661                           indf2	equ	0xFDF
  1662                           fsr2h	equ	0xFDA
  1663                           fsr2l	equ	0xFD9
  1664                           status	equ	0xFD8
  1665                           
  1666                           	psect	rparam
  1667  0000                     pclatu	equ	0xFFB
  1668                           pclath	equ	0xFFA
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           intcon	equ	0xFF2
  1676                           intcon2	equ	0xFF1
  1677                           intcon3	equ	0xFF0
  1678                           postinc0	equ	0xFEE
  1679                           fsr0h	equ	0xFEA
  1680                           fsr0l	equ	0xFE9
  1681                           postdec1	equ	0xFE5
  1682                           fsr1h	equ	0xFE2
  1683                           fsr1l	equ	0xFE1
  1684                           indf2	equ	0xFDF
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689                           	psect	temp
  1690  00002D                     btemp:
  1691                           	opt stack 0
  1692  00002D                     	ds	1
  1693  0000                     int$flags	set	btemp
  1694                           pclatu	equ	0xFFB
  1695                           pclath	equ	0xFFA
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           prodh	equ	0xFF4
  1701                           prodl	equ	0xFF3
  1702                           intcon	equ	0xFF2
  1703                           intcon2	equ	0xFF1
  1704                           intcon3	equ	0xFF0
  1705                           postinc0	equ	0xFEE
  1706                           fsr0h	equ	0xFEA
  1707                           fsr0l	equ	0xFE9
  1708                           postdec1	equ	0xFE5
  1709                           fsr1h	equ	0xFE2
  1710                           fsr1l	equ	0xFE1
  1711                           indf2	equ	0xFDF
  1712                           fsr2h	equ	0xFDA
  1713                           fsr2l	equ	0xFD9
  1714                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_dinamic
    _dinamic->_print_7seg
    _print_7seg->_print_column
    _print_7seg->_print_pattern

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 18    18      0    2626
                                             11 COMRAM    18    18      0
                            ___awdiv
                            ___awmod
                            _dinamic
                         _print_7seg
 ---------------------------------------------------------------------------------
 (2) _dinamic                                              3     3      0     679
                                              8 COMRAM     3     3      0
                         _print_7seg
 ---------------------------------------------------------------------------------
 (2) _print_7seg                                           7     6      1     655
                                              1 COMRAM     7     6      1
                       _print_column
                      _print_pattern
 ---------------------------------------------------------------------------------
 (3) _print_pattern                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _print_column                                         1     1      0     110
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     640
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     472
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awdiv
   ___awmod
   _dinamic
     _print_7seg
       _print_column
       _print_pattern
   _print_7seg
     _print_column
     _print_pattern

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      2C       1       46.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C       6        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Nov 03 11:09:36 2017

           ___awdiv@sign 0006             __CFG_CP0$OFF 000000                      l143 04C0  
                    _ISR 0008            print_7seg@col 0007            print_7seg@pat 0008  
           ___awmod@sign 0006                     ?_ISR 0001       __CFG_WPFP$PAGE_127 000000  
                   _LATB 000F8A                     _main 0462                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 002D   __CFG_DSWDTOSC$T1OSCREF 000000                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 01F4  
          __CFG_IESO$OFF 000000             ___param_bank 000010                    ??_ISR 000C  
          __CFG_PLLDIV$2 000000                    ?_main 0001          __end_of___awdiv 03F2  
        __end_of___awmod 0462          ___awdiv@divisor 0003                    _T1CON 000FCD  
                  _LATA1 007C49                    _LATA2 007C4A                    _LATA3 007C4B  
                  _LATC6 007C5E                    _LATC7 007C5F                    i2l122 028A  
                  i2l131 007A                    i2l116 0252                    i2l140 01B8  
                  i2l136 0124          ___awdiv@counter 0005                    i2l994 04D4  
                  i2l996 04E2                    i2l998 04F0                    _TMR1H 000FCF  
                  _TMR1L 000FCE                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94          __end_of_dinamic 02CC           __CFG_FCMEN$OFF 000000  
                  tablat 000FF5                    status 000FD8          ??_print_pattern 0001  
        __initialization 050E             __end_of_main 04C6                   ??_main 001E  
          __activetblptr 000003                   ISR@val 001C         print_pattern@pat 0001  
                 _EECON2 000FA7                   _ANCON0 000F48                   _ANCON1 000F49  
       ___awdiv@dividend 0001                   i2l1000 04FE                   i2l1010 02D8  
                 i2l1012 02DC                   i2l1020 035A                   i2l1102 03DA  
                 i2l1014 0302                   i2l1006 02D0                   i2l1008 02D4  
                 i2l1040 0246                   i2l1032 021A                   i2l1024 01FA  
                 i2l1106 03E8                   i2l1130 042C                   i2l1122 0412  
                 i2l1018 0308                   i2l1050 0272                   i2l1052 0278  
                 i2l1036 022A                   i2l1028 020A                   i2l1142 0458  
                 i2l1134 0440                   i2l1126 0420                   i2l1118 0406  
                 i2l1046 0260                   i2l1062 02A6                   i2l1080 0392  
                 i2l1128 0428                   i2l1064 02C8                   i2l1090 03B4  
                 i2l1074 0382                   i2l1138 044A                   i2l1156 005C  
                 i2l1086 03A8                   i2l1088 03B0                   i2l1098 03D0  
                 i2l1178 0106                   i2l1198 01AA           __CFG_WDTEN$OFF 000000  
                 _RTCCAL 000F3E                   _RTCCFG 000F3F                   _RPINR1 000EE1  
                 _RPINR2 000EE2           __CFG_WPCFG$OFF 000000           __CFG_WPDIS$OFF 000000  
         __CFG_XINST$OFF 000000                ??___awdiv 0005                ??___awmod 0005  
        __CFG_CLKOEC$OFF 000000         ___awdiv@quotient 0007          ___awmod@divisor 0003  
              ??_dinamic 0009          ___awmod@counter 0005             __pdataCOMRAM 001E  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __CFG_LS48MHZ$SYS48X8 000000               __accesstop 0060  __end_of__initialization 0536  
          ___rparam_used 000001     __CFG_WPEND$PAGE_WPFP 000000           __pcstackCOMRAM 0001  
        __CFG_DSWDTPS$G2 000000          __CFG_OSC$INTOSC 000000                  i2u40_40 04E0  
                i2u42_40 04EE                  i2u44_40 04FC          __CFG_WDTPS$1024 000000  
                i2u46_40 050A                  i2u38_40 04D2                  _RTCVALH 000F3B  
                _RTCVALL 000F3A                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 036E                  ___awmod 03F2          __CFG_STVREN$OFF 000000  
                __pcinit 050E                  __ramtop 0F00                  _dinamic 01F8  
                __ptext0 0462                  __ptext2 01F8                  __ptext3 02CC  
                __ptext4 054C                  __ptext5 04C6                  __ptext6 03F2  
                __ptext7 036E             __size_of_ISR 01EC         ___awmod@dividend 0001  
 dinamic@dinamic_counter 0028     end_of_initialization 0536        print_7seg@pattern 001E  
  __end_of_print_pattern 0556                  postdec1 000FE5               dinamic@hou 0029  
             dinamic@min 002A               dinamic@sec 002B               dinamic@wkd 002C  
                postinc0 000FEE               _print_7seg 02CC                _PORTAbits 000F80  
              _PORTCbits 000F82         __CFG_DSBOREN$OFF 000000            ?_print_column 0001  
       __CFG_CPUDIV$OSC1 000000              print_7seg@c 0002        __CFG_SOSCSEL$HIGH 000000  
        print_column@col 0001         __CFG_IOL1WAY$OFF 000000      __CFG_MSSP7B_EN$MSK7 000000  
          __pidataCOMRAM 0540         __CFG_DSWDTEN$OFF 000000           ??_print_column 0001  
    start_initialization 050E              __end_of_ISR 01F4        __CFG_ADCSEL$BIT12 000000  
            ?_print_7seg 0002              __pbssCOMRAM 0029               ISR@val_652 001D  
              __pintcode 0008                 ?___awdiv 0001                 ?___awmod 0001  
            _dinamic$604 000A                 ?_dinamic 0001     __CFG_RTCOSC$T1OSCREF 000000  
    __size_of_print_7seg 00A2                 _PIE1bits 000F9D     __end_of_print_column 050E  
               _PIR1bits 000F9E        __CFG_CFGPLLEN$OFF 000000              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 052A                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of_dinamic 00D4   __size_of_print_pattern 000A               _DSCONHbits 000F4D  
             _DSCONLbits 000F4C            __size_of_main 0064                 int$flags 002D  
           ??_print_7seg 0003               _INTCONbits 000FF2                 intlevel2 0000  
  __size_of_print_column 0048       __end_of_print_7seg 036E               _OSCCONbits 000FD3  
          _print_pattern 054C               _RTCCFGbits 000F3F             _print_column 04C6  
         ?_print_pattern 0001  
