// Version 1.37
// Generated 11/03/2016 GMT

/*
 * Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
 * All rights reserved.
 * 
 * This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *     1. Redistributions of source code must retain the above copyright notice, this list of
 *        conditions and the following disclaimer.
 * 
 *     2. Redistributions in binary form must reproduce the above copyright notice, this list
 *        of conditions and the following disclaimer in the documentation and/or other
 *        materials provided with the distribution.
 * 
 *     3. Microchip's name may not be used to endorse or promote products derived from this
 *        software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *  */

#ifndef _PIC18F27J53_H_
#define _PIC18F27J53_H_

/*
 * C Header file for the Microchip PIC Microcontroller
 * PIC18F27J53
 *  */
#ifndef __XC8
#warning Header file pic18f27j53.h included directly. Use #include <xc.h> instead.
#endif

/*
 * Register Definitions
 *  */

// Register: ADCTRIG
extern volatile unsigned char           ADCTRIG             @ 0xEB8;
#ifndef _LIB_BUILD
asm("ADCTRIG equ 0EB8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRIGSEL                :2;
    };
    struct {
        unsigned SRC0                   :1;
        unsigned SRC1                   :1;
    };
    struct {
        unsigned TRIGSEL0               :1;
        unsigned TRIGSEL1               :1;
    };
    struct {
        unsigned SRC                    :2;
    };
} ADCTRIGbits_t;
extern volatile ADCTRIGbits_t ADCTRIGbits @ 0xEB8;
// bitfield macros
#define _ADCTRIG_TRIGSEL_POSN                               0x0
#define _ADCTRIG_TRIGSEL_POSITION                           0x0
#define _ADCTRIG_TRIGSEL_SIZE                               0x2
#define _ADCTRIG_TRIGSEL_LENGTH                             0x2
#define _ADCTRIG_TRIGSEL_MASK                               0x3
#define _ADCTRIG_SRC0_POSN                                  0x0
#define _ADCTRIG_SRC0_POSITION                              0x0
#define _ADCTRIG_SRC0_SIZE                                  0x1
#define _ADCTRIG_SRC0_LENGTH                                0x1
#define _ADCTRIG_SRC0_MASK                                  0x1
#define _ADCTRIG_SRC1_POSN                                  0x1
#define _ADCTRIG_SRC1_POSITION                              0x1
#define _ADCTRIG_SRC1_SIZE                                  0x1
#define _ADCTRIG_SRC1_LENGTH                                0x1
#define _ADCTRIG_SRC1_MASK                                  0x2
#define _ADCTRIG_TRIGSEL0_POSN                              0x0
#define _ADCTRIG_TRIGSEL0_POSITION                          0x0
#define _ADCTRIG_TRIGSEL0_SIZE                              0x1
#define _ADCTRIG_TRIGSEL0_LENGTH                            0x1
#define _ADCTRIG_TRIGSEL0_MASK                              0x1
#define _ADCTRIG_TRIGSEL1_POSN                              0x1
#define _ADCTRIG_TRIGSEL1_POSITION                          0x1
#define _ADCTRIG_TRIGSEL1_SIZE                              0x1
#define _ADCTRIG_TRIGSEL1_LENGTH                            0x1
#define _ADCTRIG_TRIGSEL1_MASK                              0x2
#define _ADCTRIG_SRC_POSN                                   0x0
#define _ADCTRIG_SRC_POSITION                               0x0
#define _ADCTRIG_SRC_SIZE                                   0x2
#define _ADCTRIG_SRC_LENGTH                                 0x2
#define _ADCTRIG_SRC_MASK                                   0x3

// Register: PMDIS0
extern volatile unsigned char           PMDIS0              @ 0xEB9;
#ifndef _LIB_BUILD
asm("PMDIS0 equ 0EB9h");
#endif
// aliases
extern volatile unsigned char           PD0                 @ 0xEB9;
#ifndef _LIB_BUILD
asm("PD0 equ 0EB9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCMD                  :1;
        unsigned SPI1MD                 :1;
        unsigned SPI2MD                 :1;
        unsigned UART1MD                :1;
        unsigned UART2MD                :1;
        unsigned ECCP1MD                :1;
        unsigned ECCP2MD                :1;
        unsigned ECCP3MD                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDMSSP1               :1;
        unsigned PMDMSSP2               :1;
        unsigned PMDUART1               :1;
        unsigned PMDUART2               :1;
        unsigned PMDECCP1               :1;
        unsigned PMDECCP2               :1;
        unsigned PMDECCP3               :1;
    };
    struct {
        unsigned PMDADC                 :1;
        unsigned PMDMSSP                :2;
        unsigned PMDUART                :2;
        unsigned PMDECCP                :3;
    };
    struct {
        unsigned                        :1;
        unsigned SPIMD                  :2;
        unsigned UARTMD                 :2;
        unsigned ECCPMD                 :3;
    };
} PMDIS0bits_t;
extern volatile PMDIS0bits_t PMDIS0bits @ 0xEB9;
// bitfield macros
#define _PMDIS0_ADCMD_POSN                                  0x0
#define _PMDIS0_ADCMD_POSITION                              0x0
#define _PMDIS0_ADCMD_SIZE                                  0x1
#define _PMDIS0_ADCMD_LENGTH                                0x1
#define _PMDIS0_ADCMD_MASK                                  0x1
#define _PMDIS0_SPI1MD_POSN                                 0x1
#define _PMDIS0_SPI1MD_POSITION                             0x1
#define _PMDIS0_SPI1MD_SIZE                                 0x1
#define _PMDIS0_SPI1MD_LENGTH                               0x1
#define _PMDIS0_SPI1MD_MASK                                 0x2
#define _PMDIS0_SPI2MD_POSN                                 0x2
#define _PMDIS0_SPI2MD_POSITION                             0x2
#define _PMDIS0_SPI2MD_SIZE                                 0x1
#define _PMDIS0_SPI2MD_LENGTH                               0x1
#define _PMDIS0_SPI2MD_MASK                                 0x4
#define _PMDIS0_UART1MD_POSN                                0x3
#define _PMDIS0_UART1MD_POSITION                            0x3
#define _PMDIS0_UART1MD_SIZE                                0x1
#define _PMDIS0_UART1MD_LENGTH                              0x1
#define _PMDIS0_UART1MD_MASK                                0x8
#define _PMDIS0_UART2MD_POSN                                0x4
#define _PMDIS0_UART2MD_POSITION                            0x4
#define _PMDIS0_UART2MD_SIZE                                0x1
#define _PMDIS0_UART2MD_LENGTH                              0x1
#define _PMDIS0_UART2MD_MASK                                0x10
#define _PMDIS0_ECCP1MD_POSN                                0x5
#define _PMDIS0_ECCP1MD_POSITION                            0x5
#define _PMDIS0_ECCP1MD_SIZE                                0x1
#define _PMDIS0_ECCP1MD_LENGTH                              0x1
#define _PMDIS0_ECCP1MD_MASK                                0x20
#define _PMDIS0_ECCP2MD_POSN                                0x6
#define _PMDIS0_ECCP2MD_POSITION                            0x6
#define _PMDIS0_ECCP2MD_SIZE                                0x1
#define _PMDIS0_ECCP2MD_LENGTH                              0x1
#define _PMDIS0_ECCP2MD_MASK                                0x40
#define _PMDIS0_ECCP3MD_POSN                                0x7
#define _PMDIS0_ECCP3MD_POSITION                            0x7
#define _PMDIS0_ECCP3MD_SIZE                                0x1
#define _PMDIS0_ECCP3MD_LENGTH                              0x1
#define _PMDIS0_ECCP3MD_MASK                                0x80
#define _PMDIS0_PMDMSSP1_POSN                               0x1
#define _PMDIS0_PMDMSSP1_POSITION                           0x1
#define _PMDIS0_PMDMSSP1_SIZE                               0x1
#define _PMDIS0_PMDMSSP1_LENGTH                             0x1
#define _PMDIS0_PMDMSSP1_MASK                               0x2
#define _PMDIS0_PMDMSSP2_POSN                               0x2
#define _PMDIS0_PMDMSSP2_POSITION                           0x2
#define _PMDIS0_PMDMSSP2_SIZE                               0x1
#define _PMDIS0_PMDMSSP2_LENGTH                             0x1
#define _PMDIS0_PMDMSSP2_MASK                               0x4
#define _PMDIS0_PMDUART1_POSN                               0x3
#define _PMDIS0_PMDUART1_POSITION                           0x3
#define _PMDIS0_PMDUART1_SIZE                               0x1
#define _PMDIS0_PMDUART1_LENGTH                             0x1
#define _PMDIS0_PMDUART1_MASK                               0x8
#define _PMDIS0_PMDUART2_POSN                               0x4
#define _PMDIS0_PMDUART2_POSITION                           0x4
#define _PMDIS0_PMDUART2_SIZE                               0x1
#define _PMDIS0_PMDUART2_LENGTH                             0x1
#define _PMDIS0_PMDUART2_MASK                               0x10
#define _PMDIS0_PMDECCP1_POSN                               0x5
#define _PMDIS0_PMDECCP1_POSITION                           0x5
#define _PMDIS0_PMDECCP1_SIZE                               0x1
#define _PMDIS0_PMDECCP1_LENGTH                             0x1
#define _PMDIS0_PMDECCP1_MASK                               0x20
#define _PMDIS0_PMDECCP2_POSN                               0x6
#define _PMDIS0_PMDECCP2_POSITION                           0x6
#define _PMDIS0_PMDECCP2_SIZE                               0x1
#define _PMDIS0_PMDECCP2_LENGTH                             0x1
#define _PMDIS0_PMDECCP2_MASK                               0x40
#define _PMDIS0_PMDECCP3_POSN                               0x7
#define _PMDIS0_PMDECCP3_POSITION                           0x7
#define _PMDIS0_PMDECCP3_SIZE                               0x1
#define _PMDIS0_PMDECCP3_LENGTH                             0x1
#define _PMDIS0_PMDECCP3_MASK                               0x80
#define _PMDIS0_PMDADC_POSN                                 0x0
#define _PMDIS0_PMDADC_POSITION                             0x0
#define _PMDIS0_PMDADC_SIZE                                 0x1
#define _PMDIS0_PMDADC_LENGTH                               0x1
#define _PMDIS0_PMDADC_MASK                                 0x1
#define _PMDIS0_PMDMSSP_POSN                                0x1
#define _PMDIS0_PMDMSSP_POSITION                            0x1
#define _PMDIS0_PMDMSSP_SIZE                                0x2
#define _PMDIS0_PMDMSSP_LENGTH                              0x2
#define _PMDIS0_PMDMSSP_MASK                                0x6
#define _PMDIS0_PMDUART_POSN                                0x3
#define _PMDIS0_PMDUART_POSITION                            0x3
#define _PMDIS0_PMDUART_SIZE                                0x2
#define _PMDIS0_PMDUART_LENGTH                              0x2
#define _PMDIS0_PMDUART_MASK                                0x18
#define _PMDIS0_PMDECCP_POSN                                0x5
#define _PMDIS0_PMDECCP_POSITION                            0x5
#define _PMDIS0_PMDECCP_SIZE                                0x3
#define _PMDIS0_PMDECCP_LENGTH                              0x3
#define _PMDIS0_PMDECCP_MASK                                0xE0
#define _PMDIS0_SPIMD_POSN                                  0x1
#define _PMDIS0_SPIMD_POSITION                              0x1
#define _PMDIS0_SPIMD_SIZE                                  0x2
#define _PMDIS0_SPIMD_LENGTH                                0x2
#define _PMDIS0_SPIMD_MASK                                  0x6
#define _PMDIS0_UARTMD_POSN                                 0x3
#define _PMDIS0_UARTMD_POSITION                             0x3
#define _PMDIS0_UARTMD_SIZE                                 0x2
#define _PMDIS0_UARTMD_LENGTH                               0x2
#define _PMDIS0_UARTMD_MASK                                 0x18
#define _PMDIS0_ECCPMD_POSN                                 0x5
#define _PMDIS0_ECCPMD_POSITION                             0x5
#define _PMDIS0_ECCPMD_SIZE                                 0x3
#define _PMDIS0_ECCPMD_LENGTH                               0x3
#define _PMDIS0_ECCPMD_MASK                                 0xE0
// alias bitfield definitions
typedef union {
    struct {
        unsigned ADCMD                  :1;
        unsigned SPI1MD                 :1;
        unsigned SPI2MD                 :1;
        unsigned UART1MD                :1;
        unsigned UART2MD                :1;
        unsigned ECCP1MD                :1;
        unsigned ECCP2MD                :1;
        unsigned ECCP3MD                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDMSSP1               :1;
        unsigned PMDMSSP2               :1;
        unsigned PMDUART1               :1;
        unsigned PMDUART2               :1;
        unsigned PMDECCP1               :1;
        unsigned PMDECCP2               :1;
        unsigned PMDECCP3               :1;
    };
    struct {
        unsigned PMDADC                 :1;
        unsigned PMDMSSP                :2;
        unsigned PMDUART                :2;
        unsigned PMDECCP                :3;
    };
    struct {
        unsigned                        :1;
        unsigned SPIMD                  :2;
        unsigned UARTMD                 :2;
        unsigned ECCPMD                 :3;
    };
} PD0bits_t;
extern volatile PD0bits_t PD0bits @ 0xEB9;
// bitfield macros
#define _PD0_ADCMD_POSN                                     0x0
#define _PD0_ADCMD_POSITION                                 0x0
#define _PD0_ADCMD_SIZE                                     0x1
#define _PD0_ADCMD_LENGTH                                   0x1
#define _PD0_ADCMD_MASK                                     0x1
#define _PD0_SPI1MD_POSN                                    0x1
#define _PD0_SPI1MD_POSITION                                0x1
#define _PD0_SPI1MD_SIZE                                    0x1
#define _PD0_SPI1MD_LENGTH                                  0x1
#define _PD0_SPI1MD_MASK                                    0x2
#define _PD0_SPI2MD_POSN                                    0x2
#define _PD0_SPI2MD_POSITION                                0x2
#define _PD0_SPI2MD_SIZE                                    0x1
#define _PD0_SPI2MD_LENGTH                                  0x1
#define _PD0_SPI2MD_MASK                                    0x4
#define _PD0_UART1MD_POSN                                   0x3
#define _PD0_UART1MD_POSITION                               0x3
#define _PD0_UART1MD_SIZE                                   0x1
#define _PD0_UART1MD_LENGTH                                 0x1
#define _PD0_UART1MD_MASK                                   0x8
#define _PD0_UART2MD_POSN                                   0x4
#define _PD0_UART2MD_POSITION                               0x4
#define _PD0_UART2MD_SIZE                                   0x1
#define _PD0_UART2MD_LENGTH                                 0x1
#define _PD0_UART2MD_MASK                                   0x10
#define _PD0_ECCP1MD_POSN                                   0x5
#define _PD0_ECCP1MD_POSITION                               0x5
#define _PD0_ECCP1MD_SIZE                                   0x1
#define _PD0_ECCP1MD_LENGTH                                 0x1
#define _PD0_ECCP1MD_MASK                                   0x20
#define _PD0_ECCP2MD_POSN                                   0x6
#define _PD0_ECCP2MD_POSITION                               0x6
#define _PD0_ECCP2MD_SIZE                                   0x1
#define _PD0_ECCP2MD_LENGTH                                 0x1
#define _PD0_ECCP2MD_MASK                                   0x40
#define _PD0_ECCP3MD_POSN                                   0x7
#define _PD0_ECCP3MD_POSITION                               0x7
#define _PD0_ECCP3MD_SIZE                                   0x1
#define _PD0_ECCP3MD_LENGTH                                 0x1
#define _PD0_ECCP3MD_MASK                                   0x80
#define _PD0_PMDMSSP1_POSN                                  0x1
#define _PD0_PMDMSSP1_POSITION                              0x1
#define _PD0_PMDMSSP1_SIZE                                  0x1
#define _PD0_PMDMSSP1_LENGTH                                0x1
#define _PD0_PMDMSSP1_MASK                                  0x2
#define _PD0_PMDMSSP2_POSN                                  0x2
#define _PD0_PMDMSSP2_POSITION                              0x2
#define _PD0_PMDMSSP2_SIZE                                  0x1
#define _PD0_PMDMSSP2_LENGTH                                0x1
#define _PD0_PMDMSSP2_MASK                                  0x4
#define _PD0_PMDUART1_POSN                                  0x3
#define _PD0_PMDUART1_POSITION                              0x3
#define _PD0_PMDUART1_SIZE                                  0x1
#define _PD0_PMDUART1_LENGTH                                0x1
#define _PD0_PMDUART1_MASK                                  0x8
#define _PD0_PMDUART2_POSN                                  0x4
#define _PD0_PMDUART2_POSITION                              0x4
#define _PD0_PMDUART2_SIZE                                  0x1
#define _PD0_PMDUART2_LENGTH                                0x1
#define _PD0_PMDUART2_MASK                                  0x10
#define _PD0_PMDECCP1_POSN                                  0x5
#define _PD0_PMDECCP1_POSITION                              0x5
#define _PD0_PMDECCP1_SIZE                                  0x1
#define _PD0_PMDECCP1_LENGTH                                0x1
#define _PD0_PMDECCP1_MASK                                  0x20
#define _PD0_PMDECCP2_POSN                                  0x6
#define _PD0_PMDECCP2_POSITION                              0x6
#define _PD0_PMDECCP2_SIZE                                  0x1
#define _PD0_PMDECCP2_LENGTH                                0x1
#define _PD0_PMDECCP2_MASK                                  0x40
#define _PD0_PMDECCP3_POSN                                  0x7
#define _PD0_PMDECCP3_POSITION                              0x7
#define _PD0_PMDECCP3_SIZE                                  0x1
#define _PD0_PMDECCP3_LENGTH                                0x1
#define _PD0_PMDECCP3_MASK                                  0x80
#define _PD0_PMDADC_POSN                                    0x0
#define _PD0_PMDADC_POSITION                                0x0
#define _PD0_PMDADC_SIZE                                    0x1
#define _PD0_PMDADC_LENGTH                                  0x1
#define _PD0_PMDADC_MASK                                    0x1
#define _PD0_PMDMSSP_POSN                                   0x1
#define _PD0_PMDMSSP_POSITION                               0x1
#define _PD0_PMDMSSP_SIZE                                   0x2
#define _PD0_PMDMSSP_LENGTH                                 0x2
#define _PD0_PMDMSSP_MASK                                   0x6
#define _PD0_PMDUART_POSN                                   0x3
#define _PD0_PMDUART_POSITION                               0x3
#define _PD0_PMDUART_SIZE                                   0x2
#define _PD0_PMDUART_LENGTH                                 0x2
#define _PD0_PMDUART_MASK                                   0x18
#define _PD0_PMDECCP_POSN                                   0x5
#define _PD0_PMDECCP_POSITION                               0x5
#define _PD0_PMDECCP_SIZE                                   0x3
#define _PD0_PMDECCP_LENGTH                                 0x3
#define _PD0_PMDECCP_MASK                                   0xE0
#define _PD0_SPIMD_POSN                                     0x1
#define _PD0_SPIMD_POSITION                                 0x1
#define _PD0_SPIMD_SIZE                                     0x2
#define _PD0_SPIMD_LENGTH                                   0x2
#define _PD0_SPIMD_MASK                                     0x6
#define _PD0_UARTMD_POSN                                    0x3
#define _PD0_UARTMD_POSITION                                0x3
#define _PD0_UARTMD_SIZE                                    0x2
#define _PD0_UARTMD_LENGTH                                  0x2
#define _PD0_UARTMD_MASK                                    0x18
#define _PD0_ECCPMD_POSN                                    0x5
#define _PD0_ECCPMD_POSITION                                0x5
#define _PD0_ECCPMD_SIZE                                    0x3
#define _PD0_ECCPMD_LENGTH                                  0x3
#define _PD0_ECCPMD_MASK                                    0xE0

// Register: PMDIS1
extern volatile unsigned char           PMDIS1              @ 0xEBA;
#ifndef _LIB_BUILD
asm("PMDIS1 equ 0EBAh");
#endif
// aliases
extern volatile unsigned char           PD1                 @ 0xEBA;
#ifndef _LIB_BUILD
asm("PD1 equ 0EBAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR1MD                 :1;
        unsigned TMR2MD                 :1;
        unsigned TMR3MD                 :1;
        unsigned TMR4MD                 :1;
        unsigned RTCCMD                 :1;
        unsigned CTMUMD                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDTMR1                :1;
        unsigned PMDTMR2                :1;
        unsigned PMDTMR3                :1;
        unsigned PMDTMR4                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDTMR                 :4;
        unsigned PMDRTCC                :1;
        unsigned PMDCTMU                :1;
    };
    struct {
        unsigned                        :1;
        unsigned TMRMD                  :4;
    };
} PMDIS1bits_t;
extern volatile PMDIS1bits_t PMDIS1bits @ 0xEBA;
// bitfield macros
#define _PMDIS1_TMR1MD_POSN                                 0x1
#define _PMDIS1_TMR1MD_POSITION                             0x1
#define _PMDIS1_TMR1MD_SIZE                                 0x1
#define _PMDIS1_TMR1MD_LENGTH                               0x1
#define _PMDIS1_TMR1MD_MASK                                 0x2
#define _PMDIS1_TMR2MD_POSN                                 0x2
#define _PMDIS1_TMR2MD_POSITION                             0x2
#define _PMDIS1_TMR2MD_SIZE                                 0x1
#define _PMDIS1_TMR2MD_LENGTH                               0x1
#define _PMDIS1_TMR2MD_MASK                                 0x4
#define _PMDIS1_TMR3MD_POSN                                 0x3
#define _PMDIS1_TMR3MD_POSITION                             0x3
#define _PMDIS1_TMR3MD_SIZE                                 0x1
#define _PMDIS1_TMR3MD_LENGTH                               0x1
#define _PMDIS1_TMR3MD_MASK                                 0x8
#define _PMDIS1_TMR4MD_POSN                                 0x4
#define _PMDIS1_TMR4MD_POSITION                             0x4
#define _PMDIS1_TMR4MD_SIZE                                 0x1
#define _PMDIS1_TMR4MD_LENGTH                               0x1
#define _PMDIS1_TMR4MD_MASK                                 0x10
#define _PMDIS1_RTCCMD_POSN                                 0x5
#define _PMDIS1_RTCCMD_POSITION                             0x5
#define _PMDIS1_RTCCMD_SIZE                                 0x1
#define _PMDIS1_RTCCMD_LENGTH                               0x1
#define _PMDIS1_RTCCMD_MASK                                 0x20
#define _PMDIS1_CTMUMD_POSN                                 0x6
#define _PMDIS1_CTMUMD_POSITION                             0x6
#define _PMDIS1_CTMUMD_SIZE                                 0x1
#define _PMDIS1_CTMUMD_LENGTH                               0x1
#define _PMDIS1_CTMUMD_MASK                                 0x40
#define _PMDIS1_PMDTMR1_POSN                                0x1
#define _PMDIS1_PMDTMR1_POSITION                            0x1
#define _PMDIS1_PMDTMR1_SIZE                                0x1
#define _PMDIS1_PMDTMR1_LENGTH                              0x1
#define _PMDIS1_PMDTMR1_MASK                                0x2
#define _PMDIS1_PMDTMR2_POSN                                0x2
#define _PMDIS1_PMDTMR2_POSITION                            0x2
#define _PMDIS1_PMDTMR2_SIZE                                0x1
#define _PMDIS1_PMDTMR2_LENGTH                              0x1
#define _PMDIS1_PMDTMR2_MASK                                0x4
#define _PMDIS1_PMDTMR3_POSN                                0x3
#define _PMDIS1_PMDTMR3_POSITION                            0x3
#define _PMDIS1_PMDTMR3_SIZE                                0x1
#define _PMDIS1_PMDTMR3_LENGTH                              0x1
#define _PMDIS1_PMDTMR3_MASK                                0x8
#define _PMDIS1_PMDTMR4_POSN                                0x4
#define _PMDIS1_PMDTMR4_POSITION                            0x4
#define _PMDIS1_PMDTMR4_SIZE                                0x1
#define _PMDIS1_PMDTMR4_LENGTH                              0x1
#define _PMDIS1_PMDTMR4_MASK                                0x10
#define _PMDIS1_PMDTMR_POSN                                 0x1
#define _PMDIS1_PMDTMR_POSITION                             0x1
#define _PMDIS1_PMDTMR_SIZE                                 0x4
#define _PMDIS1_PMDTMR_LENGTH                               0x4
#define _PMDIS1_PMDTMR_MASK                                 0x1E
#define _PMDIS1_PMDRTCC_POSN                                0x5
#define _PMDIS1_PMDRTCC_POSITION                            0x5
#define _PMDIS1_PMDRTCC_SIZE                                0x1
#define _PMDIS1_PMDRTCC_LENGTH                              0x1
#define _PMDIS1_PMDRTCC_MASK                                0x20
#define _PMDIS1_PMDCTMU_POSN                                0x6
#define _PMDIS1_PMDCTMU_POSITION                            0x6
#define _PMDIS1_PMDCTMU_SIZE                                0x1
#define _PMDIS1_PMDCTMU_LENGTH                              0x1
#define _PMDIS1_PMDCTMU_MASK                                0x40
#define _PMDIS1_TMRMD_POSN                                  0x1
#define _PMDIS1_TMRMD_POSITION                              0x1
#define _PMDIS1_TMRMD_SIZE                                  0x4
#define _PMDIS1_TMRMD_LENGTH                                0x4
#define _PMDIS1_TMRMD_MASK                                  0x1E
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned TMR1MD                 :1;
        unsigned TMR2MD                 :1;
        unsigned TMR3MD                 :1;
        unsigned TMR4MD                 :1;
        unsigned RTCCMD                 :1;
        unsigned CTMUMD                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDTMR1                :1;
        unsigned PMDTMR2                :1;
        unsigned PMDTMR3                :1;
        unsigned PMDTMR4                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDTMR                 :4;
        unsigned PMDRTCC                :1;
        unsigned PMDCTMU                :1;
    };
    struct {
        unsigned                        :1;
        unsigned TMRMD                  :4;
    };
} PD1bits_t;
extern volatile PD1bits_t PD1bits @ 0xEBA;
// bitfield macros
#define _PD1_TMR1MD_POSN                                    0x1
#define _PD1_TMR1MD_POSITION                                0x1
#define _PD1_TMR1MD_SIZE                                    0x1
#define _PD1_TMR1MD_LENGTH                                  0x1
#define _PD1_TMR1MD_MASK                                    0x2
#define _PD1_TMR2MD_POSN                                    0x2
#define _PD1_TMR2MD_POSITION                                0x2
#define _PD1_TMR2MD_SIZE                                    0x1
#define _PD1_TMR2MD_LENGTH                                  0x1
#define _PD1_TMR2MD_MASK                                    0x4
#define _PD1_TMR3MD_POSN                                    0x3
#define _PD1_TMR3MD_POSITION                                0x3
#define _PD1_TMR3MD_SIZE                                    0x1
#define _PD1_TMR3MD_LENGTH                                  0x1
#define _PD1_TMR3MD_MASK                                    0x8
#define _PD1_TMR4MD_POSN                                    0x4
#define _PD1_TMR4MD_POSITION                                0x4
#define _PD1_TMR4MD_SIZE                                    0x1
#define _PD1_TMR4MD_LENGTH                                  0x1
#define _PD1_TMR4MD_MASK                                    0x10
#define _PD1_RTCCMD_POSN                                    0x5
#define _PD1_RTCCMD_POSITION                                0x5
#define _PD1_RTCCMD_SIZE                                    0x1
#define _PD1_RTCCMD_LENGTH                                  0x1
#define _PD1_RTCCMD_MASK                                    0x20
#define _PD1_CTMUMD_POSN                                    0x6
#define _PD1_CTMUMD_POSITION                                0x6
#define _PD1_CTMUMD_SIZE                                    0x1
#define _PD1_CTMUMD_LENGTH                                  0x1
#define _PD1_CTMUMD_MASK                                    0x40
#define _PD1_PMDTMR1_POSN                                   0x1
#define _PD1_PMDTMR1_POSITION                               0x1
#define _PD1_PMDTMR1_SIZE                                   0x1
#define _PD1_PMDTMR1_LENGTH                                 0x1
#define _PD1_PMDTMR1_MASK                                   0x2
#define _PD1_PMDTMR2_POSN                                   0x2
#define _PD1_PMDTMR2_POSITION                               0x2
#define _PD1_PMDTMR2_SIZE                                   0x1
#define _PD1_PMDTMR2_LENGTH                                 0x1
#define _PD1_PMDTMR2_MASK                                   0x4
#define _PD1_PMDTMR3_POSN                                   0x3
#define _PD1_PMDTMR3_POSITION                               0x3
#define _PD1_PMDTMR3_SIZE                                   0x1
#define _PD1_PMDTMR3_LENGTH                                 0x1
#define _PD1_PMDTMR3_MASK                                   0x8
#define _PD1_PMDTMR4_POSN                                   0x4
#define _PD1_PMDTMR4_POSITION                               0x4
#define _PD1_PMDTMR4_SIZE                                   0x1
#define _PD1_PMDTMR4_LENGTH                                 0x1
#define _PD1_PMDTMR4_MASK                                   0x10
#define _PD1_PMDTMR_POSN                                    0x1
#define _PD1_PMDTMR_POSITION                                0x1
#define _PD1_PMDTMR_SIZE                                    0x4
#define _PD1_PMDTMR_LENGTH                                  0x4
#define _PD1_PMDTMR_MASK                                    0x1E
#define _PD1_PMDRTCC_POSN                                   0x5
#define _PD1_PMDRTCC_POSITION                               0x5
#define _PD1_PMDRTCC_SIZE                                   0x1
#define _PD1_PMDRTCC_LENGTH                                 0x1
#define _PD1_PMDRTCC_MASK                                   0x20
#define _PD1_PMDCTMU_POSN                                   0x6
#define _PD1_PMDCTMU_POSITION                               0x6
#define _PD1_PMDCTMU_SIZE                                   0x1
#define _PD1_PMDCTMU_LENGTH                                 0x1
#define _PD1_PMDCTMU_MASK                                   0x40
#define _PD1_TMRMD_POSN                                     0x1
#define _PD1_TMRMD_POSITION                                 0x1
#define _PD1_TMRMD_SIZE                                     0x4
#define _PD1_TMRMD_LENGTH                                   0x4
#define _PD1_TMRMD_MASK                                     0x1E

// Register: PMDIS2
extern volatile unsigned char           PMDIS2              @ 0xEBB;
#ifndef _LIB_BUILD
asm("PMDIS2 equ 0EBBh");
#endif
// aliases
extern volatile unsigned char           PD2                 @ 0xEBB;
#ifndef _LIB_BUILD
asm("PD2 equ 0EBBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CMP1MD                 :1;
        unsigned CMP2MD                 :1;
        unsigned CMP3MD                 :1;
        unsigned TMR5MD                 :1;
        unsigned TMR6MD                 :1;
        unsigned                        :1;
        unsigned TMR8MD                 :1;
    };
    struct {
        unsigned PMDCMP1                :1;
        unsigned PMDCMP2                :1;
        unsigned PMDCMP3                :1;
    };
    struct {
        unsigned PMDCMP                 :3;
        unsigned PMDTMR5                :1;
        unsigned PMDTMR6                :1;
        unsigned                        :1;
        unsigned PMDTMR8                :1;
    };
    struct {
        unsigned CMPMD                  :3;
    };
} PMDIS2bits_t;
extern volatile PMDIS2bits_t PMDIS2bits @ 0xEBB;
// bitfield macros
#define _PMDIS2_CMP1MD_POSN                                 0x0
#define _PMDIS2_CMP1MD_POSITION                             0x0
#define _PMDIS2_CMP1MD_SIZE                                 0x1
#define _PMDIS2_CMP1MD_LENGTH                               0x1
#define _PMDIS2_CMP1MD_MASK                                 0x1
#define _PMDIS2_CMP2MD_POSN                                 0x1
#define _PMDIS2_CMP2MD_POSITION                             0x1
#define _PMDIS2_CMP2MD_SIZE                                 0x1
#define _PMDIS2_CMP2MD_LENGTH                               0x1
#define _PMDIS2_CMP2MD_MASK                                 0x2
#define _PMDIS2_CMP3MD_POSN                                 0x2
#define _PMDIS2_CMP3MD_POSITION                             0x2
#define _PMDIS2_CMP3MD_SIZE                                 0x1
#define _PMDIS2_CMP3MD_LENGTH                               0x1
#define _PMDIS2_CMP3MD_MASK                                 0x4
#define _PMDIS2_TMR5MD_POSN                                 0x3
#define _PMDIS2_TMR5MD_POSITION                             0x3
#define _PMDIS2_TMR5MD_SIZE                                 0x1
#define _PMDIS2_TMR5MD_LENGTH                               0x1
#define _PMDIS2_TMR5MD_MASK                                 0x8
#define _PMDIS2_TMR6MD_POSN                                 0x4
#define _PMDIS2_TMR6MD_POSITION                             0x4
#define _PMDIS2_TMR6MD_SIZE                                 0x1
#define _PMDIS2_TMR6MD_LENGTH                               0x1
#define _PMDIS2_TMR6MD_MASK                                 0x10
#define _PMDIS2_TMR8MD_POSN                                 0x6
#define _PMDIS2_TMR8MD_POSITION                             0x6
#define _PMDIS2_TMR8MD_SIZE                                 0x1
#define _PMDIS2_TMR8MD_LENGTH                               0x1
#define _PMDIS2_TMR8MD_MASK                                 0x40
#define _PMDIS2_PMDCMP1_POSN                                0x0
#define _PMDIS2_PMDCMP1_POSITION                            0x0
#define _PMDIS2_PMDCMP1_SIZE                                0x1
#define _PMDIS2_PMDCMP1_LENGTH                              0x1
#define _PMDIS2_PMDCMP1_MASK                                0x1
#define _PMDIS2_PMDCMP2_POSN                                0x1
#define _PMDIS2_PMDCMP2_POSITION                            0x1
#define _PMDIS2_PMDCMP2_SIZE                                0x1
#define _PMDIS2_PMDCMP2_LENGTH                              0x1
#define _PMDIS2_PMDCMP2_MASK                                0x2
#define _PMDIS2_PMDCMP3_POSN                                0x2
#define _PMDIS2_PMDCMP3_POSITION                            0x2
#define _PMDIS2_PMDCMP3_SIZE                                0x1
#define _PMDIS2_PMDCMP3_LENGTH                              0x1
#define _PMDIS2_PMDCMP3_MASK                                0x4
#define _PMDIS2_PMDCMP_POSN                                 0x0
#define _PMDIS2_PMDCMP_POSITION                             0x0
#define _PMDIS2_PMDCMP_SIZE                                 0x3
#define _PMDIS2_PMDCMP_LENGTH                               0x3
#define _PMDIS2_PMDCMP_MASK                                 0x7
#define _PMDIS2_PMDTMR5_POSN                                0x3
#define _PMDIS2_PMDTMR5_POSITION                            0x3
#define _PMDIS2_PMDTMR5_SIZE                                0x1
#define _PMDIS2_PMDTMR5_LENGTH                              0x1
#define _PMDIS2_PMDTMR5_MASK                                0x8
#define _PMDIS2_PMDTMR6_POSN                                0x4
#define _PMDIS2_PMDTMR6_POSITION                            0x4
#define _PMDIS2_PMDTMR6_SIZE                                0x1
#define _PMDIS2_PMDTMR6_LENGTH                              0x1
#define _PMDIS2_PMDTMR6_MASK                                0x10
#define _PMDIS2_PMDTMR8_POSN                                0x6
#define _PMDIS2_PMDTMR8_POSITION                            0x6
#define _PMDIS2_PMDTMR8_SIZE                                0x1
#define _PMDIS2_PMDTMR8_LENGTH                              0x1
#define _PMDIS2_PMDTMR8_MASK                                0x40
#define _PMDIS2_CMPMD_POSN                                  0x0
#define _PMDIS2_CMPMD_POSITION                              0x0
#define _PMDIS2_CMPMD_SIZE                                  0x3
#define _PMDIS2_CMPMD_LENGTH                                0x3
#define _PMDIS2_CMPMD_MASK                                  0x7
// alias bitfield definitions
typedef union {
    struct {
        unsigned CMP1MD                 :1;
        unsigned CMP2MD                 :1;
        unsigned CMP3MD                 :1;
        unsigned TMR5MD                 :1;
        unsigned TMR6MD                 :1;
        unsigned                        :1;
        unsigned TMR8MD                 :1;
    };
    struct {
        unsigned PMDCMP1                :1;
        unsigned PMDCMP2                :1;
        unsigned PMDCMP3                :1;
    };
    struct {
        unsigned PMDCMP                 :3;
        unsigned PMDTMR5                :1;
        unsigned PMDTMR6                :1;
        unsigned                        :1;
        unsigned PMDTMR8                :1;
    };
    struct {
        unsigned CMPMD                  :3;
    };
} PD2bits_t;
extern volatile PD2bits_t PD2bits @ 0xEBB;
// bitfield macros
#define _PD2_CMP1MD_POSN                                    0x0
#define _PD2_CMP1MD_POSITION                                0x0
#define _PD2_CMP1MD_SIZE                                    0x1
#define _PD2_CMP1MD_LENGTH                                  0x1
#define _PD2_CMP1MD_MASK                                    0x1
#define _PD2_CMP2MD_POSN                                    0x1
#define _PD2_CMP2MD_POSITION                                0x1
#define _PD2_CMP2MD_SIZE                                    0x1
#define _PD2_CMP2MD_LENGTH                                  0x1
#define _PD2_CMP2MD_MASK                                    0x2
#define _PD2_CMP3MD_POSN                                    0x2
#define _PD2_CMP3MD_POSITION                                0x2
#define _PD2_CMP3MD_SIZE                                    0x1
#define _PD2_CMP3MD_LENGTH                                  0x1
#define _PD2_CMP3MD_MASK                                    0x4
#define _PD2_TMR5MD_POSN                                    0x3
#define _PD2_TMR5MD_POSITION                                0x3
#define _PD2_TMR5MD_SIZE                                    0x1
#define _PD2_TMR5MD_LENGTH                                  0x1
#define _PD2_TMR5MD_MASK                                    0x8
#define _PD2_TMR6MD_POSN                                    0x4
#define _PD2_TMR6MD_POSITION                                0x4
#define _PD2_TMR6MD_SIZE                                    0x1
#define _PD2_TMR6MD_LENGTH                                  0x1
#define _PD2_TMR6MD_MASK                                    0x10
#define _PD2_TMR8MD_POSN                                    0x6
#define _PD2_TMR8MD_POSITION                                0x6
#define _PD2_TMR8MD_SIZE                                    0x1
#define _PD2_TMR8MD_LENGTH                                  0x1
#define _PD2_TMR8MD_MASK                                    0x40
#define _PD2_PMDCMP1_POSN                                   0x0
#define _PD2_PMDCMP1_POSITION                               0x0
#define _PD2_PMDCMP1_SIZE                                   0x1
#define _PD2_PMDCMP1_LENGTH                                 0x1
#define _PD2_PMDCMP1_MASK                                   0x1
#define _PD2_PMDCMP2_POSN                                   0x1
#define _PD2_PMDCMP2_POSITION                               0x1
#define _PD2_PMDCMP2_SIZE                                   0x1
#define _PD2_PMDCMP2_LENGTH                                 0x1
#define _PD2_PMDCMP2_MASK                                   0x2
#define _PD2_PMDCMP3_POSN                                   0x2
#define _PD2_PMDCMP3_POSITION                               0x2
#define _PD2_PMDCMP3_SIZE                                   0x1
#define _PD2_PMDCMP3_LENGTH                                 0x1
#define _PD2_PMDCMP3_MASK                                   0x4
#define _PD2_PMDCMP_POSN                                    0x0
#define _PD2_PMDCMP_POSITION                                0x0
#define _PD2_PMDCMP_SIZE                                    0x3
#define _PD2_PMDCMP_LENGTH                                  0x3
#define _PD2_PMDCMP_MASK                                    0x7
#define _PD2_PMDTMR5_POSN                                   0x3
#define _PD2_PMDTMR5_POSITION                               0x3
#define _PD2_PMDTMR5_SIZE                                   0x1
#define _PD2_PMDTMR5_LENGTH                                 0x1
#define _PD2_PMDTMR5_MASK                                   0x8
#define _PD2_PMDTMR6_POSN                                   0x4
#define _PD2_PMDTMR6_POSITION                               0x4
#define _PD2_PMDTMR6_SIZE                                   0x1
#define _PD2_PMDTMR6_LENGTH                                 0x1
#define _PD2_PMDTMR6_MASK                                   0x10
#define _PD2_PMDTMR8_POSN                                   0x6
#define _PD2_PMDTMR8_POSITION                               0x6
#define _PD2_PMDTMR8_SIZE                                   0x1
#define _PD2_PMDTMR8_LENGTH                                 0x1
#define _PD2_PMDTMR8_MASK                                   0x40
#define _PD2_CMPMD_POSN                                     0x0
#define _PD2_CMPMD_POSITION                                 0x0
#define _PD2_CMPMD_SIZE                                     0x3
#define _PD2_CMPMD_LENGTH                                   0x3
#define _PD2_CMPMD_MASK                                     0x7

// Register: PMDIS3
extern volatile unsigned char           PMDIS3              @ 0xEBC;
#ifndef _LIB_BUILD
asm("PMDIS3 equ 0EBCh");
#endif
// aliases
extern volatile unsigned char           PD3                 @ 0xEBC;
#ifndef _LIB_BUILD
asm("PD3 equ 0EBCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned CCP4MD                 :1;
        unsigned CCP5MD                 :1;
        unsigned CCP6MD                 :1;
        unsigned CCP7MD                 :1;
        unsigned CCP8MD                 :1;
        unsigned CCP9MD                 :1;
        unsigned CCP10MD                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDCCP4                :1;
        unsigned PMDCCP5                :1;
        unsigned PMDCCP6                :1;
        unsigned PMDCCP7                :1;
        unsigned PMDCCP8                :1;
        unsigned PMDCCP9                :1;
        unsigned PMDCCP10               :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDCCP                 :7;
    };
    struct {
        unsigned                        :1;
        unsigned CCPMD                  :7;
    };
} PMDIS3bits_t;
extern volatile PMDIS3bits_t PMDIS3bits @ 0xEBC;
// bitfield macros
#define _PMDIS3_CCP4MD_POSN                                 0x1
#define _PMDIS3_CCP4MD_POSITION                             0x1
#define _PMDIS3_CCP4MD_SIZE                                 0x1
#define _PMDIS3_CCP4MD_LENGTH                               0x1
#define _PMDIS3_CCP4MD_MASK                                 0x2
#define _PMDIS3_CCP5MD_POSN                                 0x2
#define _PMDIS3_CCP5MD_POSITION                             0x2
#define _PMDIS3_CCP5MD_SIZE                                 0x1
#define _PMDIS3_CCP5MD_LENGTH                               0x1
#define _PMDIS3_CCP5MD_MASK                                 0x4
#define _PMDIS3_CCP6MD_POSN                                 0x3
#define _PMDIS3_CCP6MD_POSITION                             0x3
#define _PMDIS3_CCP6MD_SIZE                                 0x1
#define _PMDIS3_CCP6MD_LENGTH                               0x1
#define _PMDIS3_CCP6MD_MASK                                 0x8
#define _PMDIS3_CCP7MD_POSN                                 0x4
#define _PMDIS3_CCP7MD_POSITION                             0x4
#define _PMDIS3_CCP7MD_SIZE                                 0x1
#define _PMDIS3_CCP7MD_LENGTH                               0x1
#define _PMDIS3_CCP7MD_MASK                                 0x10
#define _PMDIS3_CCP8MD_POSN                                 0x5
#define _PMDIS3_CCP8MD_POSITION                             0x5
#define _PMDIS3_CCP8MD_SIZE                                 0x1
#define _PMDIS3_CCP8MD_LENGTH                               0x1
#define _PMDIS3_CCP8MD_MASK                                 0x20
#define _PMDIS3_CCP9MD_POSN                                 0x6
#define _PMDIS3_CCP9MD_POSITION                             0x6
#define _PMDIS3_CCP9MD_SIZE                                 0x1
#define _PMDIS3_CCP9MD_LENGTH                               0x1
#define _PMDIS3_CCP9MD_MASK                                 0x40
#define _PMDIS3_CCP10MD_POSN                                0x7
#define _PMDIS3_CCP10MD_POSITION                            0x7
#define _PMDIS3_CCP10MD_SIZE                                0x1
#define _PMDIS3_CCP10MD_LENGTH                              0x1
#define _PMDIS3_CCP10MD_MASK                                0x80
#define _PMDIS3_PMDCCP4_POSN                                0x1
#define _PMDIS3_PMDCCP4_POSITION                            0x1
#define _PMDIS3_PMDCCP4_SIZE                                0x1
#define _PMDIS3_PMDCCP4_LENGTH                              0x1
#define _PMDIS3_PMDCCP4_MASK                                0x2
#define _PMDIS3_PMDCCP5_POSN                                0x2
#define _PMDIS3_PMDCCP5_POSITION                            0x2
#define _PMDIS3_PMDCCP5_SIZE                                0x1
#define _PMDIS3_PMDCCP5_LENGTH                              0x1
#define _PMDIS3_PMDCCP5_MASK                                0x4
#define _PMDIS3_PMDCCP6_POSN                                0x3
#define _PMDIS3_PMDCCP6_POSITION                            0x3
#define _PMDIS3_PMDCCP6_SIZE                                0x1
#define _PMDIS3_PMDCCP6_LENGTH                              0x1
#define _PMDIS3_PMDCCP6_MASK                                0x8
#define _PMDIS3_PMDCCP7_POSN                                0x4
#define _PMDIS3_PMDCCP7_POSITION                            0x4
#define _PMDIS3_PMDCCP7_SIZE                                0x1
#define _PMDIS3_PMDCCP7_LENGTH                              0x1
#define _PMDIS3_PMDCCP7_MASK                                0x10
#define _PMDIS3_PMDCCP8_POSN                                0x5
#define _PMDIS3_PMDCCP8_POSITION                            0x5
#define _PMDIS3_PMDCCP8_SIZE                                0x1
#define _PMDIS3_PMDCCP8_LENGTH                              0x1
#define _PMDIS3_PMDCCP8_MASK                                0x20
#define _PMDIS3_PMDCCP9_POSN                                0x6
#define _PMDIS3_PMDCCP9_POSITION                            0x6
#define _PMDIS3_PMDCCP9_SIZE                                0x1
#define _PMDIS3_PMDCCP9_LENGTH                              0x1
#define _PMDIS3_PMDCCP9_MASK                                0x40
#define _PMDIS3_PMDCCP10_POSN                               0x7
#define _PMDIS3_PMDCCP10_POSITION                           0x7
#define _PMDIS3_PMDCCP10_SIZE                               0x1
#define _PMDIS3_PMDCCP10_LENGTH                             0x1
#define _PMDIS3_PMDCCP10_MASK                               0x80
#define _PMDIS3_PMDCCP_POSN                                 0x1
#define _PMDIS3_PMDCCP_POSITION                             0x1
#define _PMDIS3_PMDCCP_SIZE                                 0x7
#define _PMDIS3_PMDCCP_LENGTH                               0x7
#define _PMDIS3_PMDCCP_MASK                                 0xFE
#define _PMDIS3_CCPMD_POSN                                  0x1
#define _PMDIS3_CCPMD_POSITION                              0x1
#define _PMDIS3_CCPMD_SIZE                                  0x7
#define _PMDIS3_CCPMD_LENGTH                                0x7
#define _PMDIS3_CCPMD_MASK                                  0xFE
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned CCP4MD                 :1;
        unsigned CCP5MD                 :1;
        unsigned CCP6MD                 :1;
        unsigned CCP7MD                 :1;
        unsigned CCP8MD                 :1;
        unsigned CCP9MD                 :1;
        unsigned CCP10MD                :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDCCP4                :1;
        unsigned PMDCCP5                :1;
        unsigned PMDCCP6                :1;
        unsigned PMDCCP7                :1;
        unsigned PMDCCP8                :1;
        unsigned PMDCCP9                :1;
        unsigned PMDCCP10               :1;
    };
    struct {
        unsigned                        :1;
        unsigned PMDCCP                 :7;
    };
    struct {
        unsigned                        :1;
        unsigned CCPMD                  :7;
    };
} PD3bits_t;
extern volatile PD3bits_t PD3bits @ 0xEBC;
// bitfield macros
#define _PD3_CCP4MD_POSN                                    0x1
#define _PD3_CCP4MD_POSITION                                0x1
#define _PD3_CCP4MD_SIZE                                    0x1
#define _PD3_CCP4MD_LENGTH                                  0x1
#define _PD3_CCP4MD_MASK                                    0x2
#define _PD3_CCP5MD_POSN                                    0x2
#define _PD3_CCP5MD_POSITION                                0x2
#define _PD3_CCP5MD_SIZE                                    0x1
#define _PD3_CCP5MD_LENGTH                                  0x1
#define _PD3_CCP5MD_MASK                                    0x4
#define _PD3_CCP6MD_POSN                                    0x3
#define _PD3_CCP6MD_POSITION                                0x3
#define _PD3_CCP6MD_SIZE                                    0x1
#define _PD3_CCP6MD_LENGTH                                  0x1
#define _PD3_CCP6MD_MASK                                    0x8
#define _PD3_CCP7MD_POSN                                    0x4
#define _PD3_CCP7MD_POSITION                                0x4
#define _PD3_CCP7MD_SIZE                                    0x1
#define _PD3_CCP7MD_LENGTH                                  0x1
#define _PD3_CCP7MD_MASK                                    0x10
#define _PD3_CCP8MD_POSN                                    0x5
#define _PD3_CCP8MD_POSITION                                0x5
#define _PD3_CCP8MD_SIZE                                    0x1
#define _PD3_CCP8MD_LENGTH                                  0x1
#define _PD3_CCP8MD_MASK                                    0x20
#define _PD3_CCP9MD_POSN                                    0x6
#define _PD3_CCP9MD_POSITION                                0x6
#define _PD3_CCP9MD_SIZE                                    0x1
#define _PD3_CCP9MD_LENGTH                                  0x1
#define _PD3_CCP9MD_MASK                                    0x40
#define _PD3_CCP10MD_POSN                                   0x7
#define _PD3_CCP10MD_POSITION                               0x7
#define _PD3_CCP10MD_SIZE                                   0x1
#define _PD3_CCP10MD_LENGTH                                 0x1
#define _PD3_CCP10MD_MASK                                   0x80
#define _PD3_PMDCCP4_POSN                                   0x1
#define _PD3_PMDCCP4_POSITION                               0x1
#define _PD3_PMDCCP4_SIZE                                   0x1
#define _PD3_PMDCCP4_LENGTH                                 0x1
#define _PD3_PMDCCP4_MASK                                   0x2
#define _PD3_PMDCCP5_POSN                                   0x2
#define _PD3_PMDCCP5_POSITION                               0x2
#define _PD3_PMDCCP5_SIZE                                   0x1
#define _PD3_PMDCCP5_LENGTH                                 0x1
#define _PD3_PMDCCP5_MASK                                   0x4
#define _PD3_PMDCCP6_POSN                                   0x3
#define _PD3_PMDCCP6_POSITION                               0x3
#define _PD3_PMDCCP6_SIZE                                   0x1
#define _PD3_PMDCCP6_LENGTH                                 0x1
#define _PD3_PMDCCP6_MASK                                   0x8
#define _PD3_PMDCCP7_POSN                                   0x4
#define _PD3_PMDCCP7_POSITION                               0x4
#define _PD3_PMDCCP7_SIZE                                   0x1
#define _PD3_PMDCCP7_LENGTH                                 0x1
#define _PD3_PMDCCP7_MASK                                   0x10
#define _PD3_PMDCCP8_POSN                                   0x5
#define _PD3_PMDCCP8_POSITION                               0x5
#define _PD3_PMDCCP8_SIZE                                   0x1
#define _PD3_PMDCCP8_LENGTH                                 0x1
#define _PD3_PMDCCP8_MASK                                   0x20
#define _PD3_PMDCCP9_POSN                                   0x6
#define _PD3_PMDCCP9_POSITION                               0x6
#define _PD3_PMDCCP9_SIZE                                   0x1
#define _PD3_PMDCCP9_LENGTH                                 0x1
#define _PD3_PMDCCP9_MASK                                   0x40
#define _PD3_PMDCCP10_POSN                                  0x7
#define _PD3_PMDCCP10_POSITION                              0x7
#define _PD3_PMDCCP10_SIZE                                  0x1
#define _PD3_PMDCCP10_LENGTH                                0x1
#define _PD3_PMDCCP10_MASK                                  0x80
#define _PD3_PMDCCP_POSN                                    0x1
#define _PD3_PMDCCP_POSITION                                0x1
#define _PD3_PMDCCP_SIZE                                    0x7
#define _PD3_PMDCCP_LENGTH                                  0x7
#define _PD3_PMDCCP_MASK                                    0xFE
#define _PD3_CCPMD_POSN                                     0x1
#define _PD3_CCPMD_POSITION                                 0x1
#define _PD3_CCPMD_SIZE                                     0x7
#define _PD3_CCPMD_LENGTH                                   0x7
#define _PD3_CCPMD_MASK                                     0xFE

// Register: PPSCON
extern volatile unsigned char           PPSCON              @ 0xEBF;
#ifndef _LIB_BUILD
asm("PPSCON equ 0EBFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IOLOCK                 :1;
    };
} PPSCONbits_t;
extern volatile PPSCONbits_t PPSCONbits @ 0xEBF;
// bitfield macros
#define _PPSCON_IOLOCK_POSN                                 0x0
#define _PPSCON_IOLOCK_POSITION                             0x0
#define _PPSCON_IOLOCK_SIZE                                 0x1
#define _PPSCON_IOLOCK_LENGTH                               0x1
#define _PPSCON_IOLOCK_MASK                                 0x1

// Register: RPOR0
extern volatile unsigned char           RPOR0               @ 0xEC0;
#ifndef _LIB_BUILD
asm("RPOR0 equ 0EC0h");
#endif

// Register: RPOR1
extern volatile unsigned char           RPOR1               @ 0xEC1;
#ifndef _LIB_BUILD
asm("RPOR1 equ 0EC1h");
#endif

// Register: RPOR2
extern volatile unsigned char           RPOR2               @ 0xEC2;
#ifndef _LIB_BUILD
asm("RPOR2 equ 0EC2h");
#endif

// Register: RPOR3
extern volatile unsigned char           RPOR3               @ 0xEC3;
#ifndef _LIB_BUILD
asm("RPOR3 equ 0EC3h");
#endif

// Register: RPOR4
extern volatile unsigned char           RPOR4               @ 0xEC4;
#ifndef _LIB_BUILD
asm("RPOR4 equ 0EC4h");
#endif

// Register: RPOR5
extern volatile unsigned char           RPOR5               @ 0xEC5;
#ifndef _LIB_BUILD
asm("RPOR5 equ 0EC5h");
#endif

// Register: RPOR6
extern volatile unsigned char           RPOR6               @ 0xEC6;
#ifndef _LIB_BUILD
asm("RPOR6 equ 0EC6h");
#endif

// Register: RPOR7
extern volatile unsigned char           RPOR7               @ 0xEC7;
#ifndef _LIB_BUILD
asm("RPOR7 equ 0EC7h");
#endif

// Register: RPOR8
extern volatile unsigned char           RPOR8               @ 0xEC8;
#ifndef _LIB_BUILD
asm("RPOR8 equ 0EC8h");
#endif

// Register: RPOR9
extern volatile unsigned char           RPOR9               @ 0xEC9;
#ifndef _LIB_BUILD
asm("RPOR9 equ 0EC9h");
#endif

// Register: RPOR10
extern volatile unsigned char           RPOR10              @ 0xECA;
#ifndef _LIB_BUILD
asm("RPOR10 equ 0ECAh");
#endif

// Register: RPOR11
extern volatile unsigned char           RPOR11              @ 0xECB;
#ifndef _LIB_BUILD
asm("RPOR11 equ 0ECBh");
#endif

// Register: RPOR12
extern volatile unsigned char           RPOR12              @ 0xECC;
#ifndef _LIB_BUILD
asm("RPOR12 equ 0ECCh");
#endif

// Register: RPOR13
extern volatile unsigned char           RPOR13              @ 0xECD;
#ifndef _LIB_BUILD
asm("RPOR13 equ 0ECDh");
#endif

// Register: RPOR17
extern volatile unsigned char           RPOR17              @ 0xED1;
#ifndef _LIB_BUILD
asm("RPOR17 equ 0ED1h");
#endif

// Register: RPOR18
extern volatile unsigned char           RPOR18              @ 0xED2;
#ifndef _LIB_BUILD
asm("RPOR18 equ 0ED2h");
#endif

// Register: RPINR1
extern volatile unsigned char           RPINR1              @ 0xEE1;
#ifndef _LIB_BUILD
asm("RPINR1 equ 0EE1h");
#endif

// Register: RPINR2
extern volatile unsigned char           RPINR2              @ 0xEE2;
#ifndef _LIB_BUILD
asm("RPINR2 equ 0EE2h");
#endif

// Register: RPINR3
extern volatile unsigned char           RPINR3              @ 0xEE3;
#ifndef _LIB_BUILD
asm("RPINR3 equ 0EE3h");
#endif

// Register: RPINR4
extern volatile unsigned char           RPINR4              @ 0xEE4;
#ifndef _LIB_BUILD
asm("RPINR4 equ 0EE4h");
#endif

// Register: RPINR6
extern volatile unsigned char           RPINR6              @ 0xEE6;
#ifndef _LIB_BUILD
asm("RPINR6 equ 0EE6h");
#endif

// Register: RPINR15
extern volatile unsigned char           RPINR15             @ 0xEE7;
#ifndef _LIB_BUILD
asm("RPINR15 equ 0EE7h");
#endif

// Register: RPINR7
extern volatile unsigned char           RPINR7              @ 0xEE8;
#ifndef _LIB_BUILD
asm("RPINR7 equ 0EE8h");
#endif

// Register: RPINR8
extern volatile unsigned char           RPINR8              @ 0xEE9;
#ifndef _LIB_BUILD
asm("RPINR8 equ 0EE9h");
#endif

// Register: RPINR9
extern volatile unsigned char           RPINR9              @ 0xEEA;
#ifndef _LIB_BUILD
asm("RPINR9 equ 0EEAh");
#endif

// Register: RPINR12
extern volatile unsigned char           RPINR12             @ 0xEF2;
#ifndef _LIB_BUILD
asm("RPINR12 equ 0EF2h");
#endif

// Register: RPINR13
extern volatile unsigned char           RPINR13             @ 0xEF3;
#ifndef _LIB_BUILD
asm("RPINR13 equ 0EF3h");
#endif

// Register: RPINR14
extern volatile unsigned char           RPINR14             @ 0xEF4;
#ifndef _LIB_BUILD
asm("RPINR14 equ 0EF4h");
#endif

// Register: RPINR16
extern volatile unsigned char           RPINR16             @ 0xEF7;
#ifndef _LIB_BUILD
asm("RPINR16 equ 0EF7h");
#endif

// Register: RPINR17
extern volatile unsigned char           RPINR17             @ 0xEF8;
#ifndef _LIB_BUILD
asm("RPINR17 equ 0EF8h");
#endif

// Register: RPINR21
extern volatile unsigned char           RPINR21             @ 0xEFC;
#ifndef _LIB_BUILD
asm("RPINR21 equ 0EFCh");
#endif

// Register: RPINR22
extern volatile unsigned char           RPINR22             @ 0xEFD;
#ifndef _LIB_BUILD
asm("RPINR22 equ 0EFDh");
#endif

// Register: RPINR23
extern volatile unsigned char           RPINR23             @ 0xEFE;
#ifndef _LIB_BUILD
asm("RPINR23 equ 0EFEh");
#endif

// Register: RPINR24
extern volatile unsigned char           RPINR24             @ 0xEFF;
#ifndef _LIB_BUILD
asm("RPINR24 equ 0EFFh");
#endif

// Register: CCP10CON
extern volatile unsigned char           CCP10CON            @ 0xF00;
#ifndef _LIB_BUILD
asm("CCP10CON equ 0F00h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP10M                 :4;
        unsigned DC10B                  :2;
    };
    struct {
        unsigned CCP10M0                :1;
        unsigned CCP10M1                :1;
        unsigned CCP10M2                :1;
        unsigned CCP10M3                :1;
        unsigned DC10B0                 :1;
        unsigned DC10B1                 :1;
    };
} CCP10CONbits_t;
extern volatile CCP10CONbits_t CCP10CONbits @ 0xF00;
// bitfield macros
#define _CCP10CON_CCP10M_POSN                               0x0
#define _CCP10CON_CCP10M_POSITION                           0x0
#define _CCP10CON_CCP10M_SIZE                               0x4
#define _CCP10CON_CCP10M_LENGTH                             0x4
#define _CCP10CON_CCP10M_MASK                               0xF
#define _CCP10CON_DC10B_POSN                                0x4
#define _CCP10CON_DC10B_POSITION                            0x4
#define _CCP10CON_DC10B_SIZE                                0x2
#define _CCP10CON_DC10B_LENGTH                              0x2
#define _CCP10CON_DC10B_MASK                                0x30
#define _CCP10CON_CCP10M0_POSN                              0x0
#define _CCP10CON_CCP10M0_POSITION                          0x0
#define _CCP10CON_CCP10M0_SIZE                              0x1
#define _CCP10CON_CCP10M0_LENGTH                            0x1
#define _CCP10CON_CCP10M0_MASK                              0x1
#define _CCP10CON_CCP10M1_POSN                              0x1
#define _CCP10CON_CCP10M1_POSITION                          0x1
#define _CCP10CON_CCP10M1_SIZE                              0x1
#define _CCP10CON_CCP10M1_LENGTH                            0x1
#define _CCP10CON_CCP10M1_MASK                              0x2
#define _CCP10CON_CCP10M2_POSN                              0x2
#define _CCP10CON_CCP10M2_POSITION                          0x2
#define _CCP10CON_CCP10M2_SIZE                              0x1
#define _CCP10CON_CCP10M2_LENGTH                            0x1
#define _CCP10CON_CCP10M2_MASK                              0x4
#define _CCP10CON_CCP10M3_POSN                              0x3
#define _CCP10CON_CCP10M3_POSITION                          0x3
#define _CCP10CON_CCP10M3_SIZE                              0x1
#define _CCP10CON_CCP10M3_LENGTH                            0x1
#define _CCP10CON_CCP10M3_MASK                              0x8
#define _CCP10CON_DC10B0_POSN                               0x4
#define _CCP10CON_DC10B0_POSITION                           0x4
#define _CCP10CON_DC10B0_SIZE                               0x1
#define _CCP10CON_DC10B0_LENGTH                             0x1
#define _CCP10CON_DC10B0_MASK                               0x10
#define _CCP10CON_DC10B1_POSN                               0x5
#define _CCP10CON_DC10B1_POSITION                           0x5
#define _CCP10CON_DC10B1_SIZE                               0x1
#define _CCP10CON_DC10B1_LENGTH                             0x1
#define _CCP10CON_DC10B1_MASK                               0x20

// Register: CCPR10L
extern volatile unsigned char           CCPR10L             @ 0xF01;
#ifndef _LIB_BUILD
asm("CCPR10L equ 0F01h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR10L                :8;
    };
} CCPR10Lbits_t;
extern volatile CCPR10Lbits_t CCPR10Lbits @ 0xF01;
// bitfield macros
#define _CCPR10L_CCPR10L_POSN                               0x0
#define _CCPR10L_CCPR10L_POSITION                           0x0
#define _CCPR10L_CCPR10L_SIZE                               0x8
#define _CCPR10L_CCPR10L_LENGTH                             0x8
#define _CCPR10L_CCPR10L_MASK                               0xFF

// Register: CCPR10H
extern volatile unsigned char           CCPR10H             @ 0xF02;
#ifndef _LIB_BUILD
asm("CCPR10H equ 0F02h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR10H                :8;
    };
} CCPR10Hbits_t;
extern volatile CCPR10Hbits_t CCPR10Hbits @ 0xF02;
// bitfield macros
#define _CCPR10H_CCPR10H_POSN                               0x0
#define _CCPR10H_CCPR10H_POSITION                           0x0
#define _CCPR10H_CCPR10H_SIZE                               0x8
#define _CCPR10H_CCPR10H_LENGTH                             0x8
#define _CCPR10H_CCPR10H_MASK                               0xFF

// Register: CCP9CON
extern volatile unsigned char           CCP9CON             @ 0xF03;
#ifndef _LIB_BUILD
asm("CCP9CON equ 0F03h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP9M                  :4;
        unsigned DC9B                   :2;
    };
    struct {
        unsigned CCP9M0                 :1;
        unsigned CCP9M1                 :1;
        unsigned CCP9M2                 :1;
        unsigned CCP9M3                 :1;
        unsigned DC9B0                  :1;
        unsigned DC9B1                  :1;
    };
} CCP9CONbits_t;
extern volatile CCP9CONbits_t CCP9CONbits @ 0xF03;
// bitfield macros
#define _CCP9CON_CCP9M_POSN                                 0x0
#define _CCP9CON_CCP9M_POSITION                             0x0
#define _CCP9CON_CCP9M_SIZE                                 0x4
#define _CCP9CON_CCP9M_LENGTH                               0x4
#define _CCP9CON_CCP9M_MASK                                 0xF
#define _CCP9CON_DC9B_POSN                                  0x4
#define _CCP9CON_DC9B_POSITION                              0x4
#define _CCP9CON_DC9B_SIZE                                  0x2
#define _CCP9CON_DC9B_LENGTH                                0x2
#define _CCP9CON_DC9B_MASK                                  0x30
#define _CCP9CON_CCP9M0_POSN                                0x0
#define _CCP9CON_CCP9M0_POSITION                            0x0
#define _CCP9CON_CCP9M0_SIZE                                0x1
#define _CCP9CON_CCP9M0_LENGTH                              0x1
#define _CCP9CON_CCP9M0_MASK                                0x1
#define _CCP9CON_CCP9M1_POSN                                0x1
#define _CCP9CON_CCP9M1_POSITION                            0x1
#define _CCP9CON_CCP9M1_SIZE                                0x1
#define _CCP9CON_CCP9M1_LENGTH                              0x1
#define _CCP9CON_CCP9M1_MASK                                0x2
#define _CCP9CON_CCP9M2_POSN                                0x2
#define _CCP9CON_CCP9M2_POSITION                            0x2
#define _CCP9CON_CCP9M2_SIZE                                0x1
#define _CCP9CON_CCP9M2_LENGTH                              0x1
#define _CCP9CON_CCP9M2_MASK                                0x4
#define _CCP9CON_CCP9M3_POSN                                0x3
#define _CCP9CON_CCP9M3_POSITION                            0x3
#define _CCP9CON_CCP9M3_SIZE                                0x1
#define _CCP9CON_CCP9M3_LENGTH                              0x1
#define _CCP9CON_CCP9M3_MASK                                0x8
#define _CCP9CON_DC9B0_POSN                                 0x4
#define _CCP9CON_DC9B0_POSITION                             0x4
#define _CCP9CON_DC9B0_SIZE                                 0x1
#define _CCP9CON_DC9B0_LENGTH                               0x1
#define _CCP9CON_DC9B0_MASK                                 0x10
#define _CCP9CON_DC9B1_POSN                                 0x5
#define _CCP9CON_DC9B1_POSITION                             0x5
#define _CCP9CON_DC9B1_SIZE                                 0x1
#define _CCP9CON_DC9B1_LENGTH                               0x1
#define _CCP9CON_DC9B1_MASK                                 0x20

// Register: CCPR9L
extern volatile unsigned char           CCPR9L              @ 0xF04;
#ifndef _LIB_BUILD
asm("CCPR9L equ 0F04h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR9L                 :8;
    };
} CCPR9Lbits_t;
extern volatile CCPR9Lbits_t CCPR9Lbits @ 0xF04;
// bitfield macros
#define _CCPR9L_CCPR9L_POSN                                 0x0
#define _CCPR9L_CCPR9L_POSITION                             0x0
#define _CCPR9L_CCPR9L_SIZE                                 0x8
#define _CCPR9L_CCPR9L_LENGTH                               0x8
#define _CCPR9L_CCPR9L_MASK                                 0xFF

// Register: CCPR9H
extern volatile unsigned char           CCPR9H              @ 0xF05;
#ifndef _LIB_BUILD
asm("CCPR9H equ 0F05h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR9H                 :8;
    };
} CCPR9Hbits_t;
extern volatile CCPR9Hbits_t CCPR9Hbits @ 0xF05;
// bitfield macros
#define _CCPR9H_CCPR9H_POSN                                 0x0
#define _CCPR9H_CCPR9H_POSITION                             0x0
#define _CCPR9H_CCPR9H_SIZE                                 0x8
#define _CCPR9H_CCPR9H_LENGTH                               0x8
#define _CCPR9H_CCPR9H_MASK                                 0xFF

// Register: CCP8CON
extern volatile unsigned char           CCP8CON             @ 0xF06;
#ifndef _LIB_BUILD
asm("CCP8CON equ 0F06h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP8M                  :4;
        unsigned DC8B                   :2;
    };
    struct {
        unsigned CCP8M0                 :1;
        unsigned CCP8M1                 :1;
        unsigned CCP8M2                 :1;
        unsigned CCP8M3                 :1;
        unsigned DC8B0                  :1;
        unsigned DC8B1                  :1;
    };
} CCP8CONbits_t;
extern volatile CCP8CONbits_t CCP8CONbits @ 0xF06;
// bitfield macros
#define _CCP8CON_CCP8M_POSN                                 0x0
#define _CCP8CON_CCP8M_POSITION                             0x0
#define _CCP8CON_CCP8M_SIZE                                 0x4
#define _CCP8CON_CCP8M_LENGTH                               0x4
#define _CCP8CON_CCP8M_MASK                                 0xF
#define _CCP8CON_DC8B_POSN                                  0x4
#define _CCP8CON_DC8B_POSITION                              0x4
#define _CCP8CON_DC8B_SIZE                                  0x2
#define _CCP8CON_DC8B_LENGTH                                0x2
#define _CCP8CON_DC8B_MASK                                  0x30
#define _CCP8CON_CCP8M0_POSN                                0x0
#define _CCP8CON_CCP8M0_POSITION                            0x0
#define _CCP8CON_CCP8M0_SIZE                                0x1
#define _CCP8CON_CCP8M0_LENGTH                              0x1
#define _CCP8CON_CCP8M0_MASK                                0x1
#define _CCP8CON_CCP8M1_POSN                                0x1
#define _CCP8CON_CCP8M1_POSITION                            0x1
#define _CCP8CON_CCP8M1_SIZE                                0x1
#define _CCP8CON_CCP8M1_LENGTH                              0x1
#define _CCP8CON_CCP8M1_MASK                                0x2
#define _CCP8CON_CCP8M2_POSN                                0x2
#define _CCP8CON_CCP8M2_POSITION                            0x2
#define _CCP8CON_CCP8M2_SIZE                                0x1
#define _CCP8CON_CCP8M2_LENGTH                              0x1
#define _CCP8CON_CCP8M2_MASK                                0x4
#define _CCP8CON_CCP8M3_POSN                                0x3
#define _CCP8CON_CCP8M3_POSITION                            0x3
#define _CCP8CON_CCP8M3_SIZE                                0x1
#define _CCP8CON_CCP8M3_LENGTH                              0x1
#define _CCP8CON_CCP8M3_MASK                                0x8
#define _CCP8CON_DC8B0_POSN                                 0x4
#define _CCP8CON_DC8B0_POSITION                             0x4
#define _CCP8CON_DC8B0_SIZE                                 0x1
#define _CCP8CON_DC8B0_LENGTH                               0x1
#define _CCP8CON_DC8B0_MASK                                 0x10
#define _CCP8CON_DC8B1_POSN                                 0x5
#define _CCP8CON_DC8B1_POSITION                             0x5
#define _CCP8CON_DC8B1_SIZE                                 0x1
#define _CCP8CON_DC8B1_LENGTH                               0x1
#define _CCP8CON_DC8B1_MASK                                 0x20

// Register: CCPR8L
extern volatile unsigned char           CCPR8L              @ 0xF07;
#ifndef _LIB_BUILD
asm("CCPR8L equ 0F07h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR8L                 :8;
    };
} CCPR8Lbits_t;
extern volatile CCPR8Lbits_t CCPR8Lbits @ 0xF07;
// bitfield macros
#define _CCPR8L_CCPR8L_POSN                                 0x0
#define _CCPR8L_CCPR8L_POSITION                             0x0
#define _CCPR8L_CCPR8L_SIZE                                 0x8
#define _CCPR8L_CCPR8L_LENGTH                               0x8
#define _CCPR8L_CCPR8L_MASK                                 0xFF

// Register: CCPR8H
extern volatile unsigned char           CCPR8H              @ 0xF08;
#ifndef _LIB_BUILD
asm("CCPR8H equ 0F08h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR8H                 :8;
    };
} CCPR8Hbits_t;
extern volatile CCPR8Hbits_t CCPR8Hbits @ 0xF08;
// bitfield macros
#define _CCPR8H_CCPR8H_POSN                                 0x0
#define _CCPR8H_CCPR8H_POSITION                             0x0
#define _CCPR8H_CCPR8H_SIZE                                 0x8
#define _CCPR8H_CCPR8H_LENGTH                               0x8
#define _CCPR8H_CCPR8H_MASK                                 0xFF

// Register: CCP7CON
extern volatile unsigned char           CCP7CON             @ 0xF09;
#ifndef _LIB_BUILD
asm("CCP7CON equ 0F09h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP7M                  :4;
        unsigned DC7B                   :2;
    };
    struct {
        unsigned CCP7M0                 :1;
        unsigned CCP7M1                 :1;
        unsigned CCP7M2                 :1;
        unsigned CCP7M3                 :1;
        unsigned DC7B0                  :1;
        unsigned DC7B1                  :1;
    };
} CCP7CONbits_t;
extern volatile CCP7CONbits_t CCP7CONbits @ 0xF09;
// bitfield macros
#define _CCP7CON_CCP7M_POSN                                 0x0
#define _CCP7CON_CCP7M_POSITION                             0x0
#define _CCP7CON_CCP7M_SIZE                                 0x4
#define _CCP7CON_CCP7M_LENGTH                               0x4
#define _CCP7CON_CCP7M_MASK                                 0xF
#define _CCP7CON_DC7B_POSN                                  0x4
#define _CCP7CON_DC7B_POSITION                              0x4
#define _CCP7CON_DC7B_SIZE                                  0x2
#define _CCP7CON_DC7B_LENGTH                                0x2
#define _CCP7CON_DC7B_MASK                                  0x30
#define _CCP7CON_CCP7M0_POSN                                0x0
#define _CCP7CON_CCP7M0_POSITION                            0x0
#define _CCP7CON_CCP7M0_SIZE                                0x1
#define _CCP7CON_CCP7M0_LENGTH                              0x1
#define _CCP7CON_CCP7M0_MASK                                0x1
#define _CCP7CON_CCP7M1_POSN                                0x1
#define _CCP7CON_CCP7M1_POSITION                            0x1
#define _CCP7CON_CCP7M1_SIZE                                0x1
#define _CCP7CON_CCP7M1_LENGTH                              0x1
#define _CCP7CON_CCP7M1_MASK                                0x2
#define _CCP7CON_CCP7M2_POSN                                0x2
#define _CCP7CON_CCP7M2_POSITION                            0x2
#define _CCP7CON_CCP7M2_SIZE                                0x1
#define _CCP7CON_CCP7M2_LENGTH                              0x1
#define _CCP7CON_CCP7M2_MASK                                0x4
#define _CCP7CON_CCP7M3_POSN                                0x3
#define _CCP7CON_CCP7M3_POSITION                            0x3
#define _CCP7CON_CCP7M3_SIZE                                0x1
#define _CCP7CON_CCP7M3_LENGTH                              0x1
#define _CCP7CON_CCP7M3_MASK                                0x8
#define _CCP7CON_DC7B0_POSN                                 0x4
#define _CCP7CON_DC7B0_POSITION                             0x4
#define _CCP7CON_DC7B0_SIZE                                 0x1
#define _CCP7CON_DC7B0_LENGTH                               0x1
#define _CCP7CON_DC7B0_MASK                                 0x10
#define _CCP7CON_DC7B1_POSN                                 0x5
#define _CCP7CON_DC7B1_POSITION                             0x5
#define _CCP7CON_DC7B1_SIZE                                 0x1
#define _CCP7CON_DC7B1_LENGTH                               0x1
#define _CCP7CON_DC7B1_MASK                                 0x20

// Register: CCPR7L
extern volatile unsigned char           CCPR7L              @ 0xF0A;
#ifndef _LIB_BUILD
asm("CCPR7L equ 0F0Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR7L                 :8;
    };
} CCPR7Lbits_t;
extern volatile CCPR7Lbits_t CCPR7Lbits @ 0xF0A;
// bitfield macros
#define _CCPR7L_CCPR7L_POSN                                 0x0
#define _CCPR7L_CCPR7L_POSITION                             0x0
#define _CCPR7L_CCPR7L_SIZE                                 0x8
#define _CCPR7L_CCPR7L_LENGTH                               0x8
#define _CCPR7L_CCPR7L_MASK                                 0xFF

// Register: CCPR7H
extern volatile unsigned char           CCPR7H              @ 0xF0B;
#ifndef _LIB_BUILD
asm("CCPR7H equ 0F0Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR7H                 :8;
    };
} CCPR7Hbits_t;
extern volatile CCPR7Hbits_t CCPR7Hbits @ 0xF0B;
// bitfield macros
#define _CCPR7H_CCPR7H_POSN                                 0x0
#define _CCPR7H_CCPR7H_POSITION                             0x0
#define _CCPR7H_CCPR7H_SIZE                                 0x8
#define _CCPR7H_CCPR7H_LENGTH                               0x8
#define _CCPR7H_CCPR7H_MASK                                 0xFF

// Register: CCP6CON
extern volatile unsigned char           CCP6CON             @ 0xF0C;
#ifndef _LIB_BUILD
asm("CCP6CON equ 0F0Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP6M                  :4;
        unsigned DC6B                   :2;
    };
    struct {
        unsigned CCP6M0                 :1;
        unsigned CCP6M1                 :1;
        unsigned CCP6M2                 :1;
        unsigned CCP6M3                 :1;
        unsigned DC6B0                  :1;
        unsigned DC6B1                  :1;
    };
} CCP6CONbits_t;
extern volatile CCP6CONbits_t CCP6CONbits @ 0xF0C;
// bitfield macros
#define _CCP6CON_CCP6M_POSN                                 0x0
#define _CCP6CON_CCP6M_POSITION                             0x0
#define _CCP6CON_CCP6M_SIZE                                 0x4
#define _CCP6CON_CCP6M_LENGTH                               0x4
#define _CCP6CON_CCP6M_MASK                                 0xF
#define _CCP6CON_DC6B_POSN                                  0x4
#define _CCP6CON_DC6B_POSITION                              0x4
#define _CCP6CON_DC6B_SIZE                                  0x2
#define _CCP6CON_DC6B_LENGTH                                0x2
#define _CCP6CON_DC6B_MASK                                  0x30
#define _CCP6CON_CCP6M0_POSN                                0x0
#define _CCP6CON_CCP6M0_POSITION                            0x0
#define _CCP6CON_CCP6M0_SIZE                                0x1
#define _CCP6CON_CCP6M0_LENGTH                              0x1
#define _CCP6CON_CCP6M0_MASK                                0x1
#define _CCP6CON_CCP6M1_POSN                                0x1
#define _CCP6CON_CCP6M1_POSITION                            0x1
#define _CCP6CON_CCP6M1_SIZE                                0x1
#define _CCP6CON_CCP6M1_LENGTH                              0x1
#define _CCP6CON_CCP6M1_MASK                                0x2
#define _CCP6CON_CCP6M2_POSN                                0x2
#define _CCP6CON_CCP6M2_POSITION                            0x2
#define _CCP6CON_CCP6M2_SIZE                                0x1
#define _CCP6CON_CCP6M2_LENGTH                              0x1
#define _CCP6CON_CCP6M2_MASK                                0x4
#define _CCP6CON_CCP6M3_POSN                                0x3
#define _CCP6CON_CCP6M3_POSITION                            0x3
#define _CCP6CON_CCP6M3_SIZE                                0x1
#define _CCP6CON_CCP6M3_LENGTH                              0x1
#define _CCP6CON_CCP6M3_MASK                                0x8
#define _CCP6CON_DC6B0_POSN                                 0x4
#define _CCP6CON_DC6B0_POSITION                             0x4
#define _CCP6CON_DC6B0_SIZE                                 0x1
#define _CCP6CON_DC6B0_LENGTH                               0x1
#define _CCP6CON_DC6B0_MASK                                 0x10
#define _CCP6CON_DC6B1_POSN                                 0x5
#define _CCP6CON_DC6B1_POSITION                             0x5
#define _CCP6CON_DC6B1_SIZE                                 0x1
#define _CCP6CON_DC6B1_LENGTH                               0x1
#define _CCP6CON_DC6B1_MASK                                 0x20

// Register: CCPR6L
extern volatile unsigned char           CCPR6L              @ 0xF0D;
#ifndef _LIB_BUILD
asm("CCPR6L equ 0F0Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR6L                 :8;
    };
} CCPR6Lbits_t;
extern volatile CCPR6Lbits_t CCPR6Lbits @ 0xF0D;
// bitfield macros
#define _CCPR6L_CCPR6L_POSN                                 0x0
#define _CCPR6L_CCPR6L_POSITION                             0x0
#define _CCPR6L_CCPR6L_SIZE                                 0x8
#define _CCPR6L_CCPR6L_LENGTH                               0x8
#define _CCPR6L_CCPR6L_MASK                                 0xFF

// Register: CCPR6H
extern volatile unsigned char           CCPR6H              @ 0xF0E;
#ifndef _LIB_BUILD
asm("CCPR6H equ 0F0Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR6H                 :8;
    };
} CCPR6Hbits_t;
extern volatile CCPR6Hbits_t CCPR6Hbits @ 0xF0E;
// bitfield macros
#define _CCPR6H_CCPR6H_POSN                                 0x0
#define _CCPR6H_CCPR6H_POSITION                             0x0
#define _CCPR6H_CCPR6H_SIZE                                 0x8
#define _CCPR6H_CCPR6H_LENGTH                               0x8
#define _CCPR6H_CCPR6H_MASK                                 0xFF

// Register: CCP5CON
extern volatile unsigned char           CCP5CON             @ 0xF0F;
#ifndef _LIB_BUILD
asm("CCP5CON equ 0F0Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP5M                  :4;
        unsigned DC5B                   :2;
    };
    struct {
        unsigned CCP5M0                 :1;
        unsigned CCP5M1                 :1;
        unsigned CCP5M2                 :1;
        unsigned CCP5M3                 :1;
        unsigned DC5B0                  :1;
        unsigned DC5B1                  :1;
    };
} CCP5CONbits_t;
extern volatile CCP5CONbits_t CCP5CONbits @ 0xF0F;
// bitfield macros
#define _CCP5CON_CCP5M_POSN                                 0x0
#define _CCP5CON_CCP5M_POSITION                             0x0
#define _CCP5CON_CCP5M_SIZE                                 0x4
#define _CCP5CON_CCP5M_LENGTH                               0x4
#define _CCP5CON_CCP5M_MASK                                 0xF
#define _CCP5CON_DC5B_POSN                                  0x4
#define _CCP5CON_DC5B_POSITION                              0x4
#define _CCP5CON_DC5B_SIZE                                  0x2
#define _CCP5CON_DC5B_LENGTH                                0x2
#define _CCP5CON_DC5B_MASK                                  0x30
#define _CCP5CON_CCP5M0_POSN                                0x0
#define _CCP5CON_CCP5M0_POSITION                            0x0
#define _CCP5CON_CCP5M0_SIZE                                0x1
#define _CCP5CON_CCP5M0_LENGTH                              0x1
#define _CCP5CON_CCP5M0_MASK                                0x1
#define _CCP5CON_CCP5M1_POSN                                0x1
#define _CCP5CON_CCP5M1_POSITION                            0x1
#define _CCP5CON_CCP5M1_SIZE                                0x1
#define _CCP5CON_CCP5M1_LENGTH                              0x1
#define _CCP5CON_CCP5M1_MASK                                0x2
#define _CCP5CON_CCP5M2_POSN                                0x2
#define _CCP5CON_CCP5M2_POSITION                            0x2
#define _CCP5CON_CCP5M2_SIZE                                0x1
#define _CCP5CON_CCP5M2_LENGTH                              0x1
#define _CCP5CON_CCP5M2_MASK                                0x4
#define _CCP5CON_CCP5M3_POSN                                0x3
#define _CCP5CON_CCP5M3_POSITION                            0x3
#define _CCP5CON_CCP5M3_SIZE                                0x1
#define _CCP5CON_CCP5M3_LENGTH                              0x1
#define _CCP5CON_CCP5M3_MASK                                0x8
#define _CCP5CON_DC5B0_POSN                                 0x4
#define _CCP5CON_DC5B0_POSITION                             0x4
#define _CCP5CON_DC5B0_SIZE                                 0x1
#define _CCP5CON_DC5B0_LENGTH                               0x1
#define _CCP5CON_DC5B0_MASK                                 0x10
#define _CCP5CON_DC5B1_POSN                                 0x5
#define _CCP5CON_DC5B1_POSITION                             0x5
#define _CCP5CON_DC5B1_SIZE                                 0x1
#define _CCP5CON_DC5B1_LENGTH                               0x1
#define _CCP5CON_DC5B1_MASK                                 0x20

// Register: CCPR5L
extern volatile unsigned char           CCPR5L              @ 0xF10;
#ifndef _LIB_BUILD
asm("CCPR5L equ 0F10h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR5L                 :8;
    };
} CCPR5Lbits_t;
extern volatile CCPR5Lbits_t CCPR5Lbits @ 0xF10;
// bitfield macros
#define _CCPR5L_CCPR5L_POSN                                 0x0
#define _CCPR5L_CCPR5L_POSITION                             0x0
#define _CCPR5L_CCPR5L_SIZE                                 0x8
#define _CCPR5L_CCPR5L_LENGTH                               0x8
#define _CCPR5L_CCPR5L_MASK                                 0xFF

// Register: CCPR5H
extern volatile unsigned char           CCPR5H              @ 0xF11;
#ifndef _LIB_BUILD
asm("CCPR5H equ 0F11h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR5H                 :8;
    };
} CCPR5Hbits_t;
extern volatile CCPR5Hbits_t CCPR5Hbits @ 0xF11;
// bitfield macros
#define _CCPR5H_CCPR5H_POSN                                 0x0
#define _CCPR5H_CCPR5H_POSITION                             0x0
#define _CCPR5H_CCPR5H_SIZE                                 0x8
#define _CCPR5H_CCPR5H_LENGTH                               0x8
#define _CCPR5H_CCPR5H_MASK                                 0xFF

// Register: CCP4CON
extern volatile unsigned char           CCP4CON             @ 0xF12;
#ifndef _LIB_BUILD
asm("CCP4CON equ 0F12h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP4M                  :4;
        unsigned DC4B                   :2;
    };
    struct {
        unsigned CCP4M0                 :1;
        unsigned CCP4M1                 :1;
        unsigned CCP4M2                 :1;
        unsigned CCP4M3                 :1;
        unsigned DC4B0                  :1;
        unsigned DC4B1                  :1;
    };
} CCP4CONbits_t;
extern volatile CCP4CONbits_t CCP4CONbits @ 0xF12;
// bitfield macros
#define _CCP4CON_CCP4M_POSN                                 0x0
#define _CCP4CON_CCP4M_POSITION                             0x0
#define _CCP4CON_CCP4M_SIZE                                 0x4
#define _CCP4CON_CCP4M_LENGTH                               0x4
#define _CCP4CON_CCP4M_MASK                                 0xF
#define _CCP4CON_DC4B_POSN                                  0x4
#define _CCP4CON_DC4B_POSITION                              0x4
#define _CCP4CON_DC4B_SIZE                                  0x2
#define _CCP4CON_DC4B_LENGTH                                0x2
#define _CCP4CON_DC4B_MASK                                  0x30
#define _CCP4CON_CCP4M0_POSN                                0x0
#define _CCP4CON_CCP4M0_POSITION                            0x0
#define _CCP4CON_CCP4M0_SIZE                                0x1
#define _CCP4CON_CCP4M0_LENGTH                              0x1
#define _CCP4CON_CCP4M0_MASK                                0x1
#define _CCP4CON_CCP4M1_POSN                                0x1
#define _CCP4CON_CCP4M1_POSITION                            0x1
#define _CCP4CON_CCP4M1_SIZE                                0x1
#define _CCP4CON_CCP4M1_LENGTH                              0x1
#define _CCP4CON_CCP4M1_MASK                                0x2
#define _CCP4CON_CCP4M2_POSN                                0x2
#define _CCP4CON_CCP4M2_POSITION                            0x2
#define _CCP4CON_CCP4M2_SIZE                                0x1
#define _CCP4CON_CCP4M2_LENGTH                              0x1
#define _CCP4CON_CCP4M2_MASK                                0x4
#define _CCP4CON_CCP4M3_POSN                                0x3
#define _CCP4CON_CCP4M3_POSITION                            0x3
#define _CCP4CON_CCP4M3_SIZE                                0x1
#define _CCP4CON_CCP4M3_LENGTH                              0x1
#define _CCP4CON_CCP4M3_MASK                                0x8
#define _CCP4CON_DC4B0_POSN                                 0x4
#define _CCP4CON_DC4B0_POSITION                             0x4
#define _CCP4CON_DC4B0_SIZE                                 0x1
#define _CCP4CON_DC4B0_LENGTH                               0x1
#define _CCP4CON_DC4B0_MASK                                 0x10
#define _CCP4CON_DC4B1_POSN                                 0x5
#define _CCP4CON_DC4B1_POSITION                             0x5
#define _CCP4CON_DC4B1_SIZE                                 0x1
#define _CCP4CON_DC4B1_LENGTH                               0x1
#define _CCP4CON_DC4B1_MASK                                 0x20

// Register: CCPR4L
extern volatile unsigned char           CCPR4L              @ 0xF13;
#ifndef _LIB_BUILD
asm("CCPR4L equ 0F13h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4L                 :8;
    };
} CCPR4Lbits_t;
extern volatile CCPR4Lbits_t CCPR4Lbits @ 0xF13;
// bitfield macros
#define _CCPR4L_CCPR4L_POSN                                 0x0
#define _CCPR4L_CCPR4L_POSITION                             0x0
#define _CCPR4L_CCPR4L_SIZE                                 0x8
#define _CCPR4L_CCPR4L_LENGTH                               0x8
#define _CCPR4L_CCPR4L_MASK                                 0xFF

// Register: CCPR4H
extern volatile unsigned char           CCPR4H              @ 0xF14;
#ifndef _LIB_BUILD
asm("CCPR4H equ 0F14h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR4H                 :8;
    };
} CCPR4Hbits_t;
extern volatile CCPR4Hbits_t CCPR4Hbits @ 0xF14;
// bitfield macros
#define _CCPR4H_CCPR4H_POSN                                 0x0
#define _CCPR4H_CCPR4H_POSITION                             0x0
#define _CCPR4H_CCPR4H_SIZE                                 0x8
#define _CCPR4H_CCPR4H_LENGTH                               0x8
#define _CCPR4H_CCPR4H_MASK                                 0xFF

// Register: CCP3CON
extern volatile unsigned char           CCP3CON             @ 0xF15;
#ifndef _LIB_BUILD
asm("CCP3CON equ 0F15h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3M                  :4;
        unsigned DC3B                   :2;
        unsigned P3M                    :2;
    };
    struct {
        unsigned CCP3M0                 :1;
        unsigned CCP3M1                 :1;
        unsigned CCP3M2                 :1;
        unsigned CCP3M3                 :1;
        unsigned DC3B0                  :1;
        unsigned DC3B1                  :1;
        unsigned P3M0                   :1;
        unsigned P3M1                   :1;
    };
} CCP3CONbits_t;
extern volatile CCP3CONbits_t CCP3CONbits @ 0xF15;
// bitfield macros
#define _CCP3CON_CCP3M_POSN                                 0x0
#define _CCP3CON_CCP3M_POSITION                             0x0
#define _CCP3CON_CCP3M_SIZE                                 0x4
#define _CCP3CON_CCP3M_LENGTH                               0x4
#define _CCP3CON_CCP3M_MASK                                 0xF
#define _CCP3CON_DC3B_POSN                                  0x4
#define _CCP3CON_DC3B_POSITION                              0x4
#define _CCP3CON_DC3B_SIZE                                  0x2
#define _CCP3CON_DC3B_LENGTH                                0x2
#define _CCP3CON_DC3B_MASK                                  0x30
#define _CCP3CON_P3M_POSN                                   0x6
#define _CCP3CON_P3M_POSITION                               0x6
#define _CCP3CON_P3M_SIZE                                   0x2
#define _CCP3CON_P3M_LENGTH                                 0x2
#define _CCP3CON_P3M_MASK                                   0xC0
#define _CCP3CON_CCP3M0_POSN                                0x0
#define _CCP3CON_CCP3M0_POSITION                            0x0
#define _CCP3CON_CCP3M0_SIZE                                0x1
#define _CCP3CON_CCP3M0_LENGTH                              0x1
#define _CCP3CON_CCP3M0_MASK                                0x1
#define _CCP3CON_CCP3M1_POSN                                0x1
#define _CCP3CON_CCP3M1_POSITION                            0x1
#define _CCP3CON_CCP3M1_SIZE                                0x1
#define _CCP3CON_CCP3M1_LENGTH                              0x1
#define _CCP3CON_CCP3M1_MASK                                0x2
#define _CCP3CON_CCP3M2_POSN                                0x2
#define _CCP3CON_CCP3M2_POSITION                            0x2
#define _CCP3CON_CCP3M2_SIZE                                0x1
#define _CCP3CON_CCP3M2_LENGTH                              0x1
#define _CCP3CON_CCP3M2_MASK                                0x4
#define _CCP3CON_CCP3M3_POSN                                0x3
#define _CCP3CON_CCP3M3_POSITION                            0x3
#define _CCP3CON_CCP3M3_SIZE                                0x1
#define _CCP3CON_CCP3M3_LENGTH                              0x1
#define _CCP3CON_CCP3M3_MASK                                0x8
#define _CCP3CON_DC3B0_POSN                                 0x4
#define _CCP3CON_DC3B0_POSITION                             0x4
#define _CCP3CON_DC3B0_SIZE                                 0x1
#define _CCP3CON_DC3B0_LENGTH                               0x1
#define _CCP3CON_DC3B0_MASK                                 0x10
#define _CCP3CON_DC3B1_POSN                                 0x5
#define _CCP3CON_DC3B1_POSITION                             0x5
#define _CCP3CON_DC3B1_SIZE                                 0x1
#define _CCP3CON_DC3B1_LENGTH                               0x1
#define _CCP3CON_DC3B1_MASK                                 0x20
#define _CCP3CON_P3M0_POSN                                  0x6
#define _CCP3CON_P3M0_POSITION                              0x6
#define _CCP3CON_P3M0_SIZE                                  0x1
#define _CCP3CON_P3M0_LENGTH                                0x1
#define _CCP3CON_P3M0_MASK                                  0x40
#define _CCP3CON_P3M1_POSN                                  0x7
#define _CCP3CON_P3M1_POSITION                              0x7
#define _CCP3CON_P3M1_SIZE                                  0x1
#define _CCP3CON_P3M1_LENGTH                                0x1
#define _CCP3CON_P3M1_MASK                                  0x80

// Register: CCPR3L
extern volatile unsigned char           CCPR3L              @ 0xF16;
#ifndef _LIB_BUILD
asm("CCPR3L equ 0F16h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3L                 :8;
    };
} CCPR3Lbits_t;
extern volatile CCPR3Lbits_t CCPR3Lbits @ 0xF16;
// bitfield macros
#define _CCPR3L_CCPR3L_POSN                                 0x0
#define _CCPR3L_CCPR3L_POSITION                             0x0
#define _CCPR3L_CCPR3L_SIZE                                 0x8
#define _CCPR3L_CCPR3L_LENGTH                               0x8
#define _CCPR3L_CCPR3L_MASK                                 0xFF

// Register: CCPR3H
extern volatile unsigned char           CCPR3H              @ 0xF17;
#ifndef _LIB_BUILD
asm("CCPR3H equ 0F17h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR3H                 :8;
    };
} CCPR3Hbits_t;
extern volatile CCPR3Hbits_t CCPR3Hbits @ 0xF17;
// bitfield macros
#define _CCPR3H_CCPR3H_POSN                                 0x0
#define _CCPR3H_CCPR3H_POSITION                             0x0
#define _CCPR3H_CCPR3H_SIZE                                 0x8
#define _CCPR3H_CCPR3H_LENGTH                               0x8
#define _CCPR3H_CCPR3H_MASK                                 0xFF

// Register: ECCP3DEL
extern volatile unsigned char           ECCP3DEL            @ 0xF18;
#ifndef _LIB_BUILD
asm("ECCP3DEL equ 0F18h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P3DC                   :7;
        unsigned P3RSEN                 :1;
    };
    struct {
        unsigned P3DC0                  :1;
        unsigned P3DC1                  :1;
        unsigned P3DC2                  :1;
        unsigned P3DC3                  :1;
        unsigned P3DC4                  :1;
        unsigned P3DC5                  :1;
        unsigned P3DC6                  :1;
    };
} ECCP3DELbits_t;
extern volatile ECCP3DELbits_t ECCP3DELbits @ 0xF18;
// bitfield macros
#define _ECCP3DEL_P3DC_POSN                                 0x0
#define _ECCP3DEL_P3DC_POSITION                             0x0
#define _ECCP3DEL_P3DC_SIZE                                 0x7
#define _ECCP3DEL_P3DC_LENGTH                               0x7
#define _ECCP3DEL_P3DC_MASK                                 0x7F
#define _ECCP3DEL_P3RSEN_POSN                               0x7
#define _ECCP3DEL_P3RSEN_POSITION                           0x7
#define _ECCP3DEL_P3RSEN_SIZE                               0x1
#define _ECCP3DEL_P3RSEN_LENGTH                             0x1
#define _ECCP3DEL_P3RSEN_MASK                               0x80
#define _ECCP3DEL_P3DC0_POSN                                0x0
#define _ECCP3DEL_P3DC0_POSITION                            0x0
#define _ECCP3DEL_P3DC0_SIZE                                0x1
#define _ECCP3DEL_P3DC0_LENGTH                              0x1
#define _ECCP3DEL_P3DC0_MASK                                0x1
#define _ECCP3DEL_P3DC1_POSN                                0x1
#define _ECCP3DEL_P3DC1_POSITION                            0x1
#define _ECCP3DEL_P3DC1_SIZE                                0x1
#define _ECCP3DEL_P3DC1_LENGTH                              0x1
#define _ECCP3DEL_P3DC1_MASK                                0x2
#define _ECCP3DEL_P3DC2_POSN                                0x2
#define _ECCP3DEL_P3DC2_POSITION                            0x2
#define _ECCP3DEL_P3DC2_SIZE                                0x1
#define _ECCP3DEL_P3DC2_LENGTH                              0x1
#define _ECCP3DEL_P3DC2_MASK                                0x4
#define _ECCP3DEL_P3DC3_POSN                                0x3
#define _ECCP3DEL_P3DC3_POSITION                            0x3
#define _ECCP3DEL_P3DC3_SIZE                                0x1
#define _ECCP3DEL_P3DC3_LENGTH                              0x1
#define _ECCP3DEL_P3DC3_MASK                                0x8
#define _ECCP3DEL_P3DC4_POSN                                0x4
#define _ECCP3DEL_P3DC4_POSITION                            0x4
#define _ECCP3DEL_P3DC4_SIZE                                0x1
#define _ECCP3DEL_P3DC4_LENGTH                              0x1
#define _ECCP3DEL_P3DC4_MASK                                0x10
#define _ECCP3DEL_P3DC5_POSN                                0x5
#define _ECCP3DEL_P3DC5_POSITION                            0x5
#define _ECCP3DEL_P3DC5_SIZE                                0x1
#define _ECCP3DEL_P3DC5_LENGTH                              0x1
#define _ECCP3DEL_P3DC5_MASK                                0x20
#define _ECCP3DEL_P3DC6_POSN                                0x6
#define _ECCP3DEL_P3DC6_POSITION                            0x6
#define _ECCP3DEL_P3DC6_SIZE                                0x1
#define _ECCP3DEL_P3DC6_LENGTH                              0x1
#define _ECCP3DEL_P3DC6_MASK                                0x40

// Register: ECCP3AS
extern volatile unsigned char           ECCP3AS             @ 0xF19;
#ifndef _LIB_BUILD
asm("ECCP3AS equ 0F19h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS3BD                 :2;
        unsigned PSS3AC                 :2;
        unsigned ECCP3AS                :3;
        unsigned ECCP3ASE               :1;
    };
    struct {
        unsigned PSS3BD0                :1;
        unsigned PSS3BD1                :1;
        unsigned PSS3AC0                :1;
        unsigned PSS3AC1                :1;
        unsigned ECCP3AS0               :1;
        unsigned ECCP3AS1               :1;
        unsigned ECCP3AS2               :1;
    };
} ECCP3ASbits_t;
extern volatile ECCP3ASbits_t ECCP3ASbits @ 0xF19;
// bitfield macros
#define _ECCP3AS_PSS3BD_POSN                                0x0
#define _ECCP3AS_PSS3BD_POSITION                            0x0
#define _ECCP3AS_PSS3BD_SIZE                                0x2
#define _ECCP3AS_PSS3BD_LENGTH                              0x2
#define _ECCP3AS_PSS3BD_MASK                                0x3
#define _ECCP3AS_PSS3AC_POSN                                0x2
#define _ECCP3AS_PSS3AC_POSITION                            0x2
#define _ECCP3AS_PSS3AC_SIZE                                0x2
#define _ECCP3AS_PSS3AC_LENGTH                              0x2
#define _ECCP3AS_PSS3AC_MASK                                0xC
#define _ECCP3AS_ECCP3AS_POSN                               0x4
#define _ECCP3AS_ECCP3AS_POSITION                           0x4
#define _ECCP3AS_ECCP3AS_SIZE                               0x3
#define _ECCP3AS_ECCP3AS_LENGTH                             0x3
#define _ECCP3AS_ECCP3AS_MASK                               0x70
#define _ECCP3AS_ECCP3ASE_POSN                              0x7
#define _ECCP3AS_ECCP3ASE_POSITION                          0x7
#define _ECCP3AS_ECCP3ASE_SIZE                              0x1
#define _ECCP3AS_ECCP3ASE_LENGTH                            0x1
#define _ECCP3AS_ECCP3ASE_MASK                              0x80
#define _ECCP3AS_PSS3BD0_POSN                               0x0
#define _ECCP3AS_PSS3BD0_POSITION                           0x0
#define _ECCP3AS_PSS3BD0_SIZE                               0x1
#define _ECCP3AS_PSS3BD0_LENGTH                             0x1
#define _ECCP3AS_PSS3BD0_MASK                               0x1
#define _ECCP3AS_PSS3BD1_POSN                               0x1
#define _ECCP3AS_PSS3BD1_POSITION                           0x1
#define _ECCP3AS_PSS3BD1_SIZE                               0x1
#define _ECCP3AS_PSS3BD1_LENGTH                             0x1
#define _ECCP3AS_PSS3BD1_MASK                               0x2
#define _ECCP3AS_PSS3AC0_POSN                               0x2
#define _ECCP3AS_PSS3AC0_POSITION                           0x2
#define _ECCP3AS_PSS3AC0_SIZE                               0x1
#define _ECCP3AS_PSS3AC0_LENGTH                             0x1
#define _ECCP3AS_PSS3AC0_MASK                               0x4
#define _ECCP3AS_PSS3AC1_POSN                               0x3
#define _ECCP3AS_PSS3AC1_POSITION                           0x3
#define _ECCP3AS_PSS3AC1_SIZE                               0x1
#define _ECCP3AS_PSS3AC1_LENGTH                             0x1
#define _ECCP3AS_PSS3AC1_MASK                               0x8
#define _ECCP3AS_ECCP3AS0_POSN                              0x4
#define _ECCP3AS_ECCP3AS0_POSITION                          0x4
#define _ECCP3AS_ECCP3AS0_SIZE                              0x1
#define _ECCP3AS_ECCP3AS0_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS0_MASK                              0x10
#define _ECCP3AS_ECCP3AS1_POSN                              0x5
#define _ECCP3AS_ECCP3AS1_POSITION                          0x5
#define _ECCP3AS_ECCP3AS1_SIZE                              0x1
#define _ECCP3AS_ECCP3AS1_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS1_MASK                              0x20
#define _ECCP3AS_ECCP3AS2_POSN                              0x6
#define _ECCP3AS_ECCP3AS2_POSITION                          0x6
#define _ECCP3AS_ECCP3AS2_SIZE                              0x1
#define _ECCP3AS_ECCP3AS2_LENGTH                            0x1
#define _ECCP3AS_ECCP3AS2_MASK                              0x40

// Register: PSTR3CON
extern volatile unsigned char           PSTR3CON            @ 0xF1A;
#ifndef _LIB_BUILD
asm("PSTR3CON equ 0F1Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL                   :2;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL03                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned CMPL13                 :1;
    };
    struct {
        unsigned STRA3                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned STRB3                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned STRC3                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned STRD3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned STRSYNC3               :1;
    };
} PSTR3CONbits_t;
extern volatile PSTR3CONbits_t PSTR3CONbits @ 0xF1A;
// bitfield macros
#define _PSTR3CON_STRA_POSN                                 0x0
#define _PSTR3CON_STRA_POSITION                             0x0
#define _PSTR3CON_STRA_SIZE                                 0x1
#define _PSTR3CON_STRA_LENGTH                               0x1
#define _PSTR3CON_STRA_MASK                                 0x1
#define _PSTR3CON_STRB_POSN                                 0x1
#define _PSTR3CON_STRB_POSITION                             0x1
#define _PSTR3CON_STRB_SIZE                                 0x1
#define _PSTR3CON_STRB_LENGTH                               0x1
#define _PSTR3CON_STRB_MASK                                 0x2
#define _PSTR3CON_STRC_POSN                                 0x2
#define _PSTR3CON_STRC_POSITION                             0x2
#define _PSTR3CON_STRC_SIZE                                 0x1
#define _PSTR3CON_STRC_LENGTH                               0x1
#define _PSTR3CON_STRC_MASK                                 0x4
#define _PSTR3CON_STRD_POSN                                 0x3
#define _PSTR3CON_STRD_POSITION                             0x3
#define _PSTR3CON_STRD_SIZE                                 0x1
#define _PSTR3CON_STRD_LENGTH                               0x1
#define _PSTR3CON_STRD_MASK                                 0x8
#define _PSTR3CON_STRSYNC_POSN                              0x4
#define _PSTR3CON_STRSYNC_POSITION                          0x4
#define _PSTR3CON_STRSYNC_SIZE                              0x1
#define _PSTR3CON_STRSYNC_LENGTH                            0x1
#define _PSTR3CON_STRSYNC_MASK                              0x10
#define _PSTR3CON_CMPL_POSN                                 0x6
#define _PSTR3CON_CMPL_POSITION                             0x6
#define _PSTR3CON_CMPL_SIZE                                 0x2
#define _PSTR3CON_CMPL_LENGTH                               0x2
#define _PSTR3CON_CMPL_MASK                                 0xC0
#define _PSTR3CON_CMPL0_POSN                                0x6
#define _PSTR3CON_CMPL0_POSITION                            0x6
#define _PSTR3CON_CMPL0_SIZE                                0x1
#define _PSTR3CON_CMPL0_LENGTH                              0x1
#define _PSTR3CON_CMPL0_MASK                                0x40
#define _PSTR3CON_CMPL1_POSN                                0x7
#define _PSTR3CON_CMPL1_POSITION                            0x7
#define _PSTR3CON_CMPL1_SIZE                                0x1
#define _PSTR3CON_CMPL1_LENGTH                              0x1
#define _PSTR3CON_CMPL1_MASK                                0x80
#define _PSTR3CON_CMPL03_POSN                               0x6
#define _PSTR3CON_CMPL03_POSITION                           0x6
#define _PSTR3CON_CMPL03_SIZE                               0x1
#define _PSTR3CON_CMPL03_LENGTH                             0x1
#define _PSTR3CON_CMPL03_MASK                               0x40
#define _PSTR3CON_CMPL13_POSN                               0x7
#define _PSTR3CON_CMPL13_POSITION                           0x7
#define _PSTR3CON_CMPL13_SIZE                               0x1
#define _PSTR3CON_CMPL13_LENGTH                             0x1
#define _PSTR3CON_CMPL13_MASK                               0x80
#define _PSTR3CON_STRA3_POSN                                0x0
#define _PSTR3CON_STRA3_POSITION                            0x0
#define _PSTR3CON_STRA3_SIZE                                0x1
#define _PSTR3CON_STRA3_LENGTH                              0x1
#define _PSTR3CON_STRA3_MASK                                0x1
#define _PSTR3CON_STRB3_POSN                                0x1
#define _PSTR3CON_STRB3_POSITION                            0x1
#define _PSTR3CON_STRB3_SIZE                                0x1
#define _PSTR3CON_STRB3_LENGTH                              0x1
#define _PSTR3CON_STRB3_MASK                                0x2
#define _PSTR3CON_STRC3_POSN                                0x2
#define _PSTR3CON_STRC3_POSITION                            0x2
#define _PSTR3CON_STRC3_SIZE                                0x1
#define _PSTR3CON_STRC3_LENGTH                              0x1
#define _PSTR3CON_STRC3_MASK                                0x4
#define _PSTR3CON_STRD3_POSN                                0x3
#define _PSTR3CON_STRD3_POSITION                            0x3
#define _PSTR3CON_STRD3_SIZE                                0x1
#define _PSTR3CON_STRD3_LENGTH                              0x1
#define _PSTR3CON_STRD3_MASK                                0x8
#define _PSTR3CON_STRSYNC3_POSN                             0x4
#define _PSTR3CON_STRSYNC3_POSITION                         0x4
#define _PSTR3CON_STRSYNC3_SIZE                             0x1
#define _PSTR3CON_STRSYNC3_LENGTH                           0x1
#define _PSTR3CON_STRSYNC3_MASK                             0x10

// Register: T8CON
extern volatile unsigned char           T8CON               @ 0xF1B;
#ifndef _LIB_BUILD
asm("T8CON equ 0F1Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T8CKPS                 :2;
        unsigned TMR8ON                 :1;
        unsigned T8OUTPS                :4;
    };
    struct {
        unsigned T8CKPS0                :1;
        unsigned T8CKPS1                :1;
        unsigned                        :1;
        unsigned T8OUTPS0               :1;
        unsigned T8OUTPS1               :1;
        unsigned T8OUTPS2               :1;
        unsigned T8OUTPS3               :1;
    };
} T8CONbits_t;
extern volatile T8CONbits_t T8CONbits @ 0xF1B;
// bitfield macros
#define _T8CON_T8CKPS_POSN                                  0x0
#define _T8CON_T8CKPS_POSITION                              0x0
#define _T8CON_T8CKPS_SIZE                                  0x2
#define _T8CON_T8CKPS_LENGTH                                0x2
#define _T8CON_T8CKPS_MASK                                  0x3
#define _T8CON_TMR8ON_POSN                                  0x2
#define _T8CON_TMR8ON_POSITION                              0x2
#define _T8CON_TMR8ON_SIZE                                  0x1
#define _T8CON_TMR8ON_LENGTH                                0x1
#define _T8CON_TMR8ON_MASK                                  0x4
#define _T8CON_T8OUTPS_POSN                                 0x3
#define _T8CON_T8OUTPS_POSITION                             0x3
#define _T8CON_T8OUTPS_SIZE                                 0x4
#define _T8CON_T8OUTPS_LENGTH                               0x4
#define _T8CON_T8OUTPS_MASK                                 0x78
#define _T8CON_T8CKPS0_POSN                                 0x0
#define _T8CON_T8CKPS0_POSITION                             0x0
#define _T8CON_T8CKPS0_SIZE                                 0x1
#define _T8CON_T8CKPS0_LENGTH                               0x1
#define _T8CON_T8CKPS0_MASK                                 0x1
#define _T8CON_T8CKPS1_POSN                                 0x1
#define _T8CON_T8CKPS1_POSITION                             0x1
#define _T8CON_T8CKPS1_SIZE                                 0x1
#define _T8CON_T8CKPS1_LENGTH                               0x1
#define _T8CON_T8CKPS1_MASK                                 0x2
#define _T8CON_T8OUTPS0_POSN                                0x3
#define _T8CON_T8OUTPS0_POSITION                            0x3
#define _T8CON_T8OUTPS0_SIZE                                0x1
#define _T8CON_T8OUTPS0_LENGTH                              0x1
#define _T8CON_T8OUTPS0_MASK                                0x8
#define _T8CON_T8OUTPS1_POSN                                0x4
#define _T8CON_T8OUTPS1_POSITION                            0x4
#define _T8CON_T8OUTPS1_SIZE                                0x1
#define _T8CON_T8OUTPS1_LENGTH                              0x1
#define _T8CON_T8OUTPS1_MASK                                0x10
#define _T8CON_T8OUTPS2_POSN                                0x5
#define _T8CON_T8OUTPS2_POSITION                            0x5
#define _T8CON_T8OUTPS2_SIZE                                0x1
#define _T8CON_T8OUTPS2_LENGTH                              0x1
#define _T8CON_T8OUTPS2_MASK                                0x20
#define _T8CON_T8OUTPS3_POSN                                0x6
#define _T8CON_T8OUTPS3_POSITION                            0x6
#define _T8CON_T8OUTPS3_SIZE                                0x1
#define _T8CON_T8OUTPS3_LENGTH                              0x1
#define _T8CON_T8OUTPS3_MASK                                0x40

// Register: PR8
extern volatile unsigned char           PR8                 @ 0xF1C;
#ifndef _LIB_BUILD
asm("PR8 equ 0F1Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR8                    :8;
    };
} PR8bits_t;
extern volatile PR8bits_t PR8bits @ 0xF1C;
// bitfield macros
#define _PR8_PR8_POSN                                       0x0
#define _PR8_PR8_POSITION                                   0x0
#define _PR8_PR8_SIZE                                       0x8
#define _PR8_PR8_LENGTH                                     0x8
#define _PR8_PR8_MASK                                       0xFF

// Register: TMR8
extern volatile unsigned char           TMR8                @ 0xF1D;
#ifndef _LIB_BUILD
asm("TMR8 equ 0F1Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR8                   :8;
    };
} TMR8bits_t;
extern volatile TMR8bits_t TMR8bits @ 0xF1D;
// bitfield macros
#define _TMR8_TMR8_POSN                                     0x0
#define _TMR8_TMR8_POSITION                                 0x0
#define _TMR8_TMR8_SIZE                                     0x8
#define _TMR8_TMR8_LENGTH                                   0x8
#define _TMR8_TMR8_MASK                                     0xFF

// Register: T6CON
extern volatile unsigned char           T6CON               @ 0xF1E;
#ifndef _LIB_BUILD
asm("T6CON equ 0F1Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T6CKPS                 :2;
        unsigned TMR6ON                 :1;
        unsigned T6OUTPS                :4;
    };
    struct {
        unsigned T6CKPS0                :1;
        unsigned T6CKPS1                :1;
        unsigned                        :1;
        unsigned T6OUTPS0               :1;
        unsigned T6OUTPS1               :1;
        unsigned T6OUTPS2               :1;
        unsigned T6OUTPS3               :1;
    };
} T6CONbits_t;
extern volatile T6CONbits_t T6CONbits @ 0xF1E;
// bitfield macros
#define _T6CON_T6CKPS_POSN                                  0x0
#define _T6CON_T6CKPS_POSITION                              0x0
#define _T6CON_T6CKPS_SIZE                                  0x2
#define _T6CON_T6CKPS_LENGTH                                0x2
#define _T6CON_T6CKPS_MASK                                  0x3
#define _T6CON_TMR6ON_POSN                                  0x2
#define _T6CON_TMR6ON_POSITION                              0x2
#define _T6CON_TMR6ON_SIZE                                  0x1
#define _T6CON_TMR6ON_LENGTH                                0x1
#define _T6CON_TMR6ON_MASK                                  0x4
#define _T6CON_T6OUTPS_POSN                                 0x3
#define _T6CON_T6OUTPS_POSITION                             0x3
#define _T6CON_T6OUTPS_SIZE                                 0x4
#define _T6CON_T6OUTPS_LENGTH                               0x4
#define _T6CON_T6OUTPS_MASK                                 0x78
#define _T6CON_T6CKPS0_POSN                                 0x0
#define _T6CON_T6CKPS0_POSITION                             0x0
#define _T6CON_T6CKPS0_SIZE                                 0x1
#define _T6CON_T6CKPS0_LENGTH                               0x1
#define _T6CON_T6CKPS0_MASK                                 0x1
#define _T6CON_T6CKPS1_POSN                                 0x1
#define _T6CON_T6CKPS1_POSITION                             0x1
#define _T6CON_T6CKPS1_SIZE                                 0x1
#define _T6CON_T6CKPS1_LENGTH                               0x1
#define _T6CON_T6CKPS1_MASK                                 0x2
#define _T6CON_T6OUTPS0_POSN                                0x3
#define _T6CON_T6OUTPS0_POSITION                            0x3
#define _T6CON_T6OUTPS0_SIZE                                0x1
#define _T6CON_T6OUTPS0_LENGTH                              0x1
#define _T6CON_T6OUTPS0_MASK                                0x8
#define _T6CON_T6OUTPS1_POSN                                0x4
#define _T6CON_T6OUTPS1_POSITION                            0x4
#define _T6CON_T6OUTPS1_SIZE                                0x1
#define _T6CON_T6OUTPS1_LENGTH                              0x1
#define _T6CON_T6OUTPS1_MASK                                0x10
#define _T6CON_T6OUTPS2_POSN                                0x5
#define _T6CON_T6OUTPS2_POSITION                            0x5
#define _T6CON_T6OUTPS2_SIZE                                0x1
#define _T6CON_T6OUTPS2_LENGTH                              0x1
#define _T6CON_T6OUTPS2_MASK                                0x20
#define _T6CON_T6OUTPS3_POSN                                0x6
#define _T6CON_T6OUTPS3_POSITION                            0x6
#define _T6CON_T6OUTPS3_SIZE                                0x1
#define _T6CON_T6OUTPS3_LENGTH                              0x1
#define _T6CON_T6OUTPS3_MASK                                0x40

// Register: PR6
extern volatile unsigned char           PR6                 @ 0xF1F;
#ifndef _LIB_BUILD
asm("PR6 equ 0F1Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR6                    :8;
    };
} PR6bits_t;
extern volatile PR6bits_t PR6bits @ 0xF1F;
// bitfield macros
#define _PR6_PR6_POSN                                       0x0
#define _PR6_PR6_POSITION                                   0x0
#define _PR6_PR6_SIZE                                       0x8
#define _PR6_PR6_LENGTH                                     0x8
#define _PR6_PR6_MASK                                       0xFF

// Register: TMR6
extern volatile unsigned char           TMR6                @ 0xF20;
#ifndef _LIB_BUILD
asm("TMR6 equ 0F20h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR6                   :8;
    };
} TMR6bits_t;
extern volatile TMR6bits_t TMR6bits @ 0xF20;
// bitfield macros
#define _TMR6_TMR6_POSN                                     0x0
#define _TMR6_TMR6_POSITION                                 0x0
#define _TMR6_TMR6_SIZE                                     0x8
#define _TMR6_TMR6_LENGTH                                   0x8
#define _TMR6_TMR6_MASK                                     0xFF

// Register: T5GCON
extern volatile unsigned char           T5GCON              @ 0xF21;
#ifndef _LIB_BUILD
asm("T5GCON equ 0F21h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned T5GGO_NOT_T5DONE       :1;
    };
    struct {
        unsigned T5GSS                  :2;
        unsigned T5GVAL                 :1;
        unsigned T5GGO_nT5DONE          :1;
        unsigned T5GSPM                 :1;
        unsigned T5GTM                  :1;
        unsigned T5GPOL                 :1;
        unsigned TMR5GE                 :1;
    };
    struct {
        unsigned T5GSS0                 :1;
        unsigned T5GSS1                 :1;
        unsigned                        :1;
        unsigned T5GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T5DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT5DONE                :1;
    };
    struct {
        unsigned                        :3;
        unsigned T5DONE                 :1;
    };
} T5GCONbits_t;
extern volatile T5GCONbits_t T5GCONbits @ 0xF21;
// bitfield macros
#define _T5GCON_T5GGO_NOT_T5DONE_POSN                       0x3
#define _T5GCON_T5GGO_NOT_T5DONE_POSITION                   0x3
#define _T5GCON_T5GGO_NOT_T5DONE_SIZE                       0x1
#define _T5GCON_T5GGO_NOT_T5DONE_LENGTH                     0x1
#define _T5GCON_T5GGO_NOT_T5DONE_MASK                       0x8
#define _T5GCON_T5GSS_POSN                                  0x0
#define _T5GCON_T5GSS_POSITION                              0x0
#define _T5GCON_T5GSS_SIZE                                  0x2
#define _T5GCON_T5GSS_LENGTH                                0x2
#define _T5GCON_T5GSS_MASK                                  0x3
#define _T5GCON_T5GVAL_POSN                                 0x2
#define _T5GCON_T5GVAL_POSITION                             0x2
#define _T5GCON_T5GVAL_SIZE                                 0x1
#define _T5GCON_T5GVAL_LENGTH                               0x1
#define _T5GCON_T5GVAL_MASK                                 0x4
#define _T5GCON_T5GGO_nT5DONE_POSN                          0x3
#define _T5GCON_T5GGO_nT5DONE_POSITION                      0x3
#define _T5GCON_T5GGO_nT5DONE_SIZE                          0x1
#define _T5GCON_T5GGO_nT5DONE_LENGTH                        0x1
#define _T5GCON_T5GGO_nT5DONE_MASK                          0x8
#define _T5GCON_T5GSPM_POSN                                 0x4
#define _T5GCON_T5GSPM_POSITION                             0x4
#define _T5GCON_T5GSPM_SIZE                                 0x1
#define _T5GCON_T5GSPM_LENGTH                               0x1
#define _T5GCON_T5GSPM_MASK                                 0x10
#define _T5GCON_T5GTM_POSN                                  0x5
#define _T5GCON_T5GTM_POSITION                              0x5
#define _T5GCON_T5GTM_SIZE                                  0x1
#define _T5GCON_T5GTM_LENGTH                                0x1
#define _T5GCON_T5GTM_MASK                                  0x20
#define _T5GCON_T5GPOL_POSN                                 0x6
#define _T5GCON_T5GPOL_POSITION                             0x6
#define _T5GCON_T5GPOL_SIZE                                 0x1
#define _T5GCON_T5GPOL_LENGTH                               0x1
#define _T5GCON_T5GPOL_MASK                                 0x40
#define _T5GCON_TMR5GE_POSN                                 0x7
#define _T5GCON_TMR5GE_POSITION                             0x7
#define _T5GCON_TMR5GE_SIZE                                 0x1
#define _T5GCON_TMR5GE_LENGTH                               0x1
#define _T5GCON_TMR5GE_MASK                                 0x80
#define _T5GCON_T5GSS0_POSN                                 0x0
#define _T5GCON_T5GSS0_POSITION                             0x0
#define _T5GCON_T5GSS0_SIZE                                 0x1
#define _T5GCON_T5GSS0_LENGTH                               0x1
#define _T5GCON_T5GSS0_MASK                                 0x1
#define _T5GCON_T5GSS1_POSN                                 0x1
#define _T5GCON_T5GSS1_POSITION                             0x1
#define _T5GCON_T5GSS1_SIZE                                 0x1
#define _T5GCON_T5GSS1_LENGTH                               0x1
#define _T5GCON_T5GSS1_MASK                                 0x2
#define _T5GCON_T5GGO_POSN                                  0x3
#define _T5GCON_T5GGO_POSITION                              0x3
#define _T5GCON_T5GGO_SIZE                                  0x1
#define _T5GCON_T5GGO_LENGTH                                0x1
#define _T5GCON_T5GGO_MASK                                  0x8
#define _T5GCON_NOT_T5DONE_POSN                             0x3
#define _T5GCON_NOT_T5DONE_POSITION                         0x3
#define _T5GCON_NOT_T5DONE_SIZE                             0x1
#define _T5GCON_NOT_T5DONE_LENGTH                           0x1
#define _T5GCON_NOT_T5DONE_MASK                             0x8
#define _T5GCON_nT5DONE_POSN                                0x3
#define _T5GCON_nT5DONE_POSITION                            0x3
#define _T5GCON_nT5DONE_SIZE                                0x1
#define _T5GCON_nT5DONE_LENGTH                              0x1
#define _T5GCON_nT5DONE_MASK                                0x8
#define _T5GCON_T5DONE_POSN                                 0x3
#define _T5GCON_T5DONE_POSITION                             0x3
#define _T5GCON_T5DONE_SIZE                                 0x1
#define _T5GCON_T5DONE_LENGTH                               0x1
#define _T5GCON_T5DONE_MASK                                 0x8

// Register: T5CON
extern volatile unsigned char           T5CON               @ 0xF22;
#ifndef _LIB_BUILD
asm("T5CON equ 0F22h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T5SYNC             :1;
    };
    struct {
        unsigned TMR5ON                 :1;
        unsigned RD16                   :1;
        unsigned nT5SYNC                :1;
        unsigned T5OSCEN                :1;
        unsigned T5CKPS                 :2;
        unsigned TMR5CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T5CKPS0                :1;
        unsigned T5CKPS1                :1;
        unsigned TMR5CS0                :1;
        unsigned TMR5CS1                :1;
    };
    struct {
        unsigned                        :1;
        unsigned RD165                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN5                :1;
    };
} T5CONbits_t;
extern volatile T5CONbits_t T5CONbits @ 0xF22;
// bitfield macros
#define _T5CON_NOT_T5SYNC_POSN                              0x2
#define _T5CON_NOT_T5SYNC_POSITION                          0x2
#define _T5CON_NOT_T5SYNC_SIZE                              0x1
#define _T5CON_NOT_T5SYNC_LENGTH                            0x1
#define _T5CON_NOT_T5SYNC_MASK                              0x4
#define _T5CON_TMR5ON_POSN                                  0x0
#define _T5CON_TMR5ON_POSITION                              0x0
#define _T5CON_TMR5ON_SIZE                                  0x1
#define _T5CON_TMR5ON_LENGTH                                0x1
#define _T5CON_TMR5ON_MASK                                  0x1
#define _T5CON_RD16_POSN                                    0x1
#define _T5CON_RD16_POSITION                                0x1
#define _T5CON_RD16_SIZE                                    0x1
#define _T5CON_RD16_LENGTH                                  0x1
#define _T5CON_RD16_MASK                                    0x2
#define _T5CON_nT5SYNC_POSN                                 0x2
#define _T5CON_nT5SYNC_POSITION                             0x2
#define _T5CON_nT5SYNC_SIZE                                 0x1
#define _T5CON_nT5SYNC_LENGTH                               0x1
#define _T5CON_nT5SYNC_MASK                                 0x4
#define _T5CON_T5OSCEN_POSN                                 0x3
#define _T5CON_T5OSCEN_POSITION                             0x3
#define _T5CON_T5OSCEN_SIZE                                 0x1
#define _T5CON_T5OSCEN_LENGTH                               0x1
#define _T5CON_T5OSCEN_MASK                                 0x8
#define _T5CON_T5CKPS_POSN                                  0x4
#define _T5CON_T5CKPS_POSITION                              0x4
#define _T5CON_T5CKPS_SIZE                                  0x2
#define _T5CON_T5CKPS_LENGTH                                0x2
#define _T5CON_T5CKPS_MASK                                  0x30
#define _T5CON_TMR5CS_POSN                                  0x6
#define _T5CON_TMR5CS_POSITION                              0x6
#define _T5CON_TMR5CS_SIZE                                  0x2
#define _T5CON_TMR5CS_LENGTH                                0x2
#define _T5CON_TMR5CS_MASK                                  0xC0
#define _T5CON_T5CKPS0_POSN                                 0x4
#define _T5CON_T5CKPS0_POSITION                             0x4
#define _T5CON_T5CKPS0_SIZE                                 0x1
#define _T5CON_T5CKPS0_LENGTH                               0x1
#define _T5CON_T5CKPS0_MASK                                 0x10
#define _T5CON_T5CKPS1_POSN                                 0x5
#define _T5CON_T5CKPS1_POSITION                             0x5
#define _T5CON_T5CKPS1_SIZE                                 0x1
#define _T5CON_T5CKPS1_LENGTH                               0x1
#define _T5CON_T5CKPS1_MASK                                 0x20
#define _T5CON_TMR5CS0_POSN                                 0x6
#define _T5CON_TMR5CS0_POSITION                             0x6
#define _T5CON_TMR5CS0_SIZE                                 0x1
#define _T5CON_TMR5CS0_LENGTH                               0x1
#define _T5CON_TMR5CS0_MASK                                 0x40
#define _T5CON_TMR5CS1_POSN                                 0x7
#define _T5CON_TMR5CS1_POSITION                             0x7
#define _T5CON_TMR5CS1_SIZE                                 0x1
#define _T5CON_TMR5CS1_LENGTH                               0x1
#define _T5CON_TMR5CS1_MASK                                 0x80
#define _T5CON_RD165_POSN                                   0x1
#define _T5CON_RD165_POSITION                               0x1
#define _T5CON_RD165_SIZE                                   0x1
#define _T5CON_RD165_LENGTH                                 0x1
#define _T5CON_RD165_MASK                                   0x2
#define _T5CON_SOSCEN5_POSN                                 0x3
#define _T5CON_SOSCEN5_POSITION                             0x3
#define _T5CON_SOSCEN5_SIZE                                 0x1
#define _T5CON_SOSCEN5_LENGTH                               0x1
#define _T5CON_SOSCEN5_MASK                                 0x8

// Register: TMR5L
extern volatile unsigned char           TMR5L               @ 0xF23;
#ifndef _LIB_BUILD
asm("TMR5L equ 0F23h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5L                  :8;
    };
} TMR5Lbits_t;
extern volatile TMR5Lbits_t TMR5Lbits @ 0xF23;
// bitfield macros
#define _TMR5L_TMR5L_POSN                                   0x0
#define _TMR5L_TMR5L_POSITION                               0x0
#define _TMR5L_TMR5L_SIZE                                   0x8
#define _TMR5L_TMR5L_LENGTH                                 0x8
#define _TMR5L_TMR5L_MASK                                   0xFF

// Register: TMR5H
extern volatile unsigned char           TMR5H               @ 0xF24;
#ifndef _LIB_BUILD
asm("TMR5H equ 0F24h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR5H                  :8;
    };
} TMR5Hbits_t;
extern volatile TMR5Hbits_t TMR5Hbits @ 0xF24;
// bitfield macros
#define _TMR5H_TMR5H_POSN                                   0x0
#define _TMR5H_TMR5H_POSITION                               0x0
#define _TMR5H_TMR5H_SIZE                                   0x8
#define _TMR5H_TMR5H_LENGTH                                 0x8
#define _TMR5H_TMR5H_MASK                                   0xFF

// Register: CM3CON
extern volatile unsigned char           CM3CON              @ 0xF25;
#ifndef _LIB_BUILD
asm("CM3CON equ 0F25h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH03                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH13                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned COE3                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned CON3                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CPOL3                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CREF3                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL03                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL13                :1;
    };
} CM3CONbits_t;
extern volatile CM3CONbits_t CM3CONbits @ 0xF25;
// bitfield macros
#define _CM3CON_CCH_POSN                                    0x0
#define _CM3CON_CCH_POSITION                                0x0
#define _CM3CON_CCH_SIZE                                    0x2
#define _CM3CON_CCH_LENGTH                                  0x2
#define _CM3CON_CCH_MASK                                    0x3
#define _CM3CON_CREF_POSN                                   0x2
#define _CM3CON_CREF_POSITION                               0x2
#define _CM3CON_CREF_SIZE                                   0x1
#define _CM3CON_CREF_LENGTH                                 0x1
#define _CM3CON_CREF_MASK                                   0x4
#define _CM3CON_EVPOL_POSN                                  0x3
#define _CM3CON_EVPOL_POSITION                              0x3
#define _CM3CON_EVPOL_SIZE                                  0x2
#define _CM3CON_EVPOL_LENGTH                                0x2
#define _CM3CON_EVPOL_MASK                                  0x18
#define _CM3CON_CPOL_POSN                                   0x5
#define _CM3CON_CPOL_POSITION                               0x5
#define _CM3CON_CPOL_SIZE                                   0x1
#define _CM3CON_CPOL_LENGTH                                 0x1
#define _CM3CON_CPOL_MASK                                   0x20
#define _CM3CON_COE_POSN                                    0x6
#define _CM3CON_COE_POSITION                                0x6
#define _CM3CON_COE_SIZE                                    0x1
#define _CM3CON_COE_LENGTH                                  0x1
#define _CM3CON_COE_MASK                                    0x40
#define _CM3CON_CON_POSN                                    0x7
#define _CM3CON_CON_POSITION                                0x7
#define _CM3CON_CON_SIZE                                    0x1
#define _CM3CON_CON_LENGTH                                  0x1
#define _CM3CON_CON_MASK                                    0x80
#define _CM3CON_CCH0_POSN                                   0x0
#define _CM3CON_CCH0_POSITION                               0x0
#define _CM3CON_CCH0_SIZE                                   0x1
#define _CM3CON_CCH0_LENGTH                                 0x1
#define _CM3CON_CCH0_MASK                                   0x1
#define _CM3CON_CCH1_POSN                                   0x1
#define _CM3CON_CCH1_POSITION                               0x1
#define _CM3CON_CCH1_SIZE                                   0x1
#define _CM3CON_CCH1_LENGTH                                 0x1
#define _CM3CON_CCH1_MASK                                   0x2
#define _CM3CON_EVPOL0_POSN                                 0x3
#define _CM3CON_EVPOL0_POSITION                             0x3
#define _CM3CON_EVPOL0_SIZE                                 0x1
#define _CM3CON_EVPOL0_LENGTH                               0x1
#define _CM3CON_EVPOL0_MASK                                 0x8
#define _CM3CON_EVPOL1_POSN                                 0x4
#define _CM3CON_EVPOL1_POSITION                             0x4
#define _CM3CON_EVPOL1_SIZE                                 0x1
#define _CM3CON_EVPOL1_LENGTH                               0x1
#define _CM3CON_EVPOL1_MASK                                 0x10
#define _CM3CON_CCH03_POSN                                  0x0
#define _CM3CON_CCH03_POSITION                              0x0
#define _CM3CON_CCH03_SIZE                                  0x1
#define _CM3CON_CCH03_LENGTH                                0x1
#define _CM3CON_CCH03_MASK                                  0x1
#define _CM3CON_CCH13_POSN                                  0x1
#define _CM3CON_CCH13_POSITION                              0x1
#define _CM3CON_CCH13_SIZE                                  0x1
#define _CM3CON_CCH13_LENGTH                                0x1
#define _CM3CON_CCH13_MASK                                  0x2
#define _CM3CON_COE3_POSN                                   0x6
#define _CM3CON_COE3_POSITION                               0x6
#define _CM3CON_COE3_SIZE                                   0x1
#define _CM3CON_COE3_LENGTH                                 0x1
#define _CM3CON_COE3_MASK                                   0x40
#define _CM3CON_CON3_POSN                                   0x7
#define _CM3CON_CON3_POSITION                               0x7
#define _CM3CON_CON3_SIZE                                   0x1
#define _CM3CON_CON3_LENGTH                                 0x1
#define _CM3CON_CON3_MASK                                   0x80
#define _CM3CON_CPOL3_POSN                                  0x5
#define _CM3CON_CPOL3_POSITION                              0x5
#define _CM3CON_CPOL3_SIZE                                  0x1
#define _CM3CON_CPOL3_LENGTH                                0x1
#define _CM3CON_CPOL3_MASK                                  0x20
#define _CM3CON_CREF3_POSN                                  0x2
#define _CM3CON_CREF3_POSITION                              0x2
#define _CM3CON_CREF3_SIZE                                  0x1
#define _CM3CON_CREF3_LENGTH                                0x1
#define _CM3CON_CREF3_MASK                                  0x4
#define _CM3CON_EVPOL03_POSN                                0x3
#define _CM3CON_EVPOL03_POSITION                            0x3
#define _CM3CON_EVPOL03_SIZE                                0x1
#define _CM3CON_EVPOL03_LENGTH                              0x1
#define _CM3CON_EVPOL03_MASK                                0x8
#define _CM3CON_EVPOL13_POSN                                0x4
#define _CM3CON_EVPOL13_POSITION                            0x4
#define _CM3CON_EVPOL13_SIZE                                0x1
#define _CM3CON_EVPOL13_LENGTH                              0x1
#define _CM3CON_EVPOL13_MASK                                0x10

// Register: UEP0
extern volatile unsigned char           UEP0                @ 0xF26;
#ifndef _LIB_BUILD
asm("UEP0 equ 0F26h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP0CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP0HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP0INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP0OUTEN               :1;
    };
    struct {
        unsigned EP0STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS0              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK0                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN0                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN0               :1;
    };
    struct {
        unsigned EPSTALL0               :1;
    };
} UEP0bits_t;
extern volatile UEP0bits_t UEP0bits @ 0xF26;
// bitfield macros
#define _UEP0_EPSTALL_POSN                                  0x0
#define _UEP0_EPSTALL_POSITION                              0x0
#define _UEP0_EPSTALL_SIZE                                  0x1
#define _UEP0_EPSTALL_LENGTH                                0x1
#define _UEP0_EPSTALL_MASK                                  0x1
#define _UEP0_EPINEN_POSN                                   0x1
#define _UEP0_EPINEN_POSITION                               0x1
#define _UEP0_EPINEN_SIZE                                   0x1
#define _UEP0_EPINEN_LENGTH                                 0x1
#define _UEP0_EPINEN_MASK                                   0x2
#define _UEP0_EPOUTEN_POSN                                  0x2
#define _UEP0_EPOUTEN_POSITION                              0x2
#define _UEP0_EPOUTEN_SIZE                                  0x1
#define _UEP0_EPOUTEN_LENGTH                                0x1
#define _UEP0_EPOUTEN_MASK                                  0x4
#define _UEP0_EPCONDIS_POSN                                 0x3
#define _UEP0_EPCONDIS_POSITION                             0x3
#define _UEP0_EPCONDIS_SIZE                                 0x1
#define _UEP0_EPCONDIS_LENGTH                               0x1
#define _UEP0_EPCONDIS_MASK                                 0x8
#define _UEP0_EPHSHK_POSN                                   0x4
#define _UEP0_EPHSHK_POSITION                               0x4
#define _UEP0_EPHSHK_SIZE                                   0x1
#define _UEP0_EPHSHK_LENGTH                                 0x1
#define _UEP0_EPHSHK_MASK                                   0x10
#define _UEP0_EP0CONDIS_POSN                                0x3
#define _UEP0_EP0CONDIS_POSITION                            0x3
#define _UEP0_EP0CONDIS_SIZE                                0x1
#define _UEP0_EP0CONDIS_LENGTH                              0x1
#define _UEP0_EP0CONDIS_MASK                                0x8
#define _UEP0_EP0HSHK_POSN                                  0x4
#define _UEP0_EP0HSHK_POSITION                              0x4
#define _UEP0_EP0HSHK_SIZE                                  0x1
#define _UEP0_EP0HSHK_LENGTH                                0x1
#define _UEP0_EP0HSHK_MASK                                  0x10
#define _UEP0_EP0INEN_POSN                                  0x1
#define _UEP0_EP0INEN_POSITION                              0x1
#define _UEP0_EP0INEN_SIZE                                  0x1
#define _UEP0_EP0INEN_LENGTH                                0x1
#define _UEP0_EP0INEN_MASK                                  0x2
#define _UEP0_EP0OUTEN_POSN                                 0x2
#define _UEP0_EP0OUTEN_POSITION                             0x2
#define _UEP0_EP0OUTEN_SIZE                                 0x1
#define _UEP0_EP0OUTEN_LENGTH                               0x1
#define _UEP0_EP0OUTEN_MASK                                 0x4
#define _UEP0_EP0STALL_POSN                                 0x0
#define _UEP0_EP0STALL_POSITION                             0x0
#define _UEP0_EP0STALL_SIZE                                 0x1
#define _UEP0_EP0STALL_LENGTH                               0x1
#define _UEP0_EP0STALL_MASK                                 0x1
#define _UEP0_EPCONDIS0_POSN                                0x3
#define _UEP0_EPCONDIS0_POSITION                            0x3
#define _UEP0_EPCONDIS0_SIZE                                0x1
#define _UEP0_EPCONDIS0_LENGTH                              0x1
#define _UEP0_EPCONDIS0_MASK                                0x8
#define _UEP0_EPHSHK0_POSN                                  0x4
#define _UEP0_EPHSHK0_POSITION                              0x4
#define _UEP0_EPHSHK0_SIZE                                  0x1
#define _UEP0_EPHSHK0_LENGTH                                0x1
#define _UEP0_EPHSHK0_MASK                                  0x10
#define _UEP0_EPINEN0_POSN                                  0x1
#define _UEP0_EPINEN0_POSITION                              0x1
#define _UEP0_EPINEN0_SIZE                                  0x1
#define _UEP0_EPINEN0_LENGTH                                0x1
#define _UEP0_EPINEN0_MASK                                  0x2
#define _UEP0_EPOUTEN0_POSN                                 0x2
#define _UEP0_EPOUTEN0_POSITION                             0x2
#define _UEP0_EPOUTEN0_SIZE                                 0x1
#define _UEP0_EPOUTEN0_LENGTH                               0x1
#define _UEP0_EPOUTEN0_MASK                                 0x4
#define _UEP0_EPSTALL0_POSN                                 0x0
#define _UEP0_EPSTALL0_POSITION                             0x0
#define _UEP0_EPSTALL0_SIZE                                 0x1
#define _UEP0_EPSTALL0_LENGTH                               0x1
#define _UEP0_EPSTALL0_MASK                                 0x1

// Register: UEP1
extern volatile unsigned char           UEP1                @ 0xF27;
#ifndef _LIB_BUILD
asm("UEP1 equ 0F27h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP1CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP1HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP1INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP1OUTEN               :1;
    };
    struct {
        unsigned EP1STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS1              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK1                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN1                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN1               :1;
    };
    struct {
        unsigned EPSTALL1               :1;
    };
} UEP1bits_t;
extern volatile UEP1bits_t UEP1bits @ 0xF27;
// bitfield macros
#define _UEP1_EPSTALL_POSN                                  0x0
#define _UEP1_EPSTALL_POSITION                              0x0
#define _UEP1_EPSTALL_SIZE                                  0x1
#define _UEP1_EPSTALL_LENGTH                                0x1
#define _UEP1_EPSTALL_MASK                                  0x1
#define _UEP1_EPINEN_POSN                                   0x1
#define _UEP1_EPINEN_POSITION                               0x1
#define _UEP1_EPINEN_SIZE                                   0x1
#define _UEP1_EPINEN_LENGTH                                 0x1
#define _UEP1_EPINEN_MASK                                   0x2
#define _UEP1_EPOUTEN_POSN                                  0x2
#define _UEP1_EPOUTEN_POSITION                              0x2
#define _UEP1_EPOUTEN_SIZE                                  0x1
#define _UEP1_EPOUTEN_LENGTH                                0x1
#define _UEP1_EPOUTEN_MASK                                  0x4
#define _UEP1_EPCONDIS_POSN                                 0x3
#define _UEP1_EPCONDIS_POSITION                             0x3
#define _UEP1_EPCONDIS_SIZE                                 0x1
#define _UEP1_EPCONDIS_LENGTH                               0x1
#define _UEP1_EPCONDIS_MASK                                 0x8
#define _UEP1_EPHSHK_POSN                                   0x4
#define _UEP1_EPHSHK_POSITION                               0x4
#define _UEP1_EPHSHK_SIZE                                   0x1
#define _UEP1_EPHSHK_LENGTH                                 0x1
#define _UEP1_EPHSHK_MASK                                   0x10
#define _UEP1_EP1CONDIS_POSN                                0x3
#define _UEP1_EP1CONDIS_POSITION                            0x3
#define _UEP1_EP1CONDIS_SIZE                                0x1
#define _UEP1_EP1CONDIS_LENGTH                              0x1
#define _UEP1_EP1CONDIS_MASK                                0x8
#define _UEP1_EP1HSHK_POSN                                  0x4
#define _UEP1_EP1HSHK_POSITION                              0x4
#define _UEP1_EP1HSHK_SIZE                                  0x1
#define _UEP1_EP1HSHK_LENGTH                                0x1
#define _UEP1_EP1HSHK_MASK                                  0x10
#define _UEP1_EP1INEN_POSN                                  0x1
#define _UEP1_EP1INEN_POSITION                              0x1
#define _UEP1_EP1INEN_SIZE                                  0x1
#define _UEP1_EP1INEN_LENGTH                                0x1
#define _UEP1_EP1INEN_MASK                                  0x2
#define _UEP1_EP1OUTEN_POSN                                 0x2
#define _UEP1_EP1OUTEN_POSITION                             0x2
#define _UEP1_EP1OUTEN_SIZE                                 0x1
#define _UEP1_EP1OUTEN_LENGTH                               0x1
#define _UEP1_EP1OUTEN_MASK                                 0x4
#define _UEP1_EP1STALL_POSN                                 0x0
#define _UEP1_EP1STALL_POSITION                             0x0
#define _UEP1_EP1STALL_SIZE                                 0x1
#define _UEP1_EP1STALL_LENGTH                               0x1
#define _UEP1_EP1STALL_MASK                                 0x1
#define _UEP1_EPCONDIS1_POSN                                0x3
#define _UEP1_EPCONDIS1_POSITION                            0x3
#define _UEP1_EPCONDIS1_SIZE                                0x1
#define _UEP1_EPCONDIS1_LENGTH                              0x1
#define _UEP1_EPCONDIS1_MASK                                0x8
#define _UEP1_EPHSHK1_POSN                                  0x4
#define _UEP1_EPHSHK1_POSITION                              0x4
#define _UEP1_EPHSHK1_SIZE                                  0x1
#define _UEP1_EPHSHK1_LENGTH                                0x1
#define _UEP1_EPHSHK1_MASK                                  0x10
#define _UEP1_EPINEN1_POSN                                  0x1
#define _UEP1_EPINEN1_POSITION                              0x1
#define _UEP1_EPINEN1_SIZE                                  0x1
#define _UEP1_EPINEN1_LENGTH                                0x1
#define _UEP1_EPINEN1_MASK                                  0x2
#define _UEP1_EPOUTEN1_POSN                                 0x2
#define _UEP1_EPOUTEN1_POSITION                             0x2
#define _UEP1_EPOUTEN1_SIZE                                 0x1
#define _UEP1_EPOUTEN1_LENGTH                               0x1
#define _UEP1_EPOUTEN1_MASK                                 0x4
#define _UEP1_EPSTALL1_POSN                                 0x0
#define _UEP1_EPSTALL1_POSITION                             0x0
#define _UEP1_EPSTALL1_SIZE                                 0x1
#define _UEP1_EPSTALL1_LENGTH                               0x1
#define _UEP1_EPSTALL1_MASK                                 0x1

// Register: UEP2
extern volatile unsigned char           UEP2                @ 0xF28;
#ifndef _LIB_BUILD
asm("UEP2 equ 0F28h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP2CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP2HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP2INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP2OUTEN               :1;
    };
    struct {
        unsigned EP2STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS2              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK2                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN2                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN2               :1;
    };
    struct {
        unsigned EPSTALL2               :1;
    };
} UEP2bits_t;
extern volatile UEP2bits_t UEP2bits @ 0xF28;
// bitfield macros
#define _UEP2_EPSTALL_POSN                                  0x0
#define _UEP2_EPSTALL_POSITION                              0x0
#define _UEP2_EPSTALL_SIZE                                  0x1
#define _UEP2_EPSTALL_LENGTH                                0x1
#define _UEP2_EPSTALL_MASK                                  0x1
#define _UEP2_EPINEN_POSN                                   0x1
#define _UEP2_EPINEN_POSITION                               0x1
#define _UEP2_EPINEN_SIZE                                   0x1
#define _UEP2_EPINEN_LENGTH                                 0x1
#define _UEP2_EPINEN_MASK                                   0x2
#define _UEP2_EPOUTEN_POSN                                  0x2
#define _UEP2_EPOUTEN_POSITION                              0x2
#define _UEP2_EPOUTEN_SIZE                                  0x1
#define _UEP2_EPOUTEN_LENGTH                                0x1
#define _UEP2_EPOUTEN_MASK                                  0x4
#define _UEP2_EPCONDIS_POSN                                 0x3
#define _UEP2_EPCONDIS_POSITION                             0x3
#define _UEP2_EPCONDIS_SIZE                                 0x1
#define _UEP2_EPCONDIS_LENGTH                               0x1
#define _UEP2_EPCONDIS_MASK                                 0x8
#define _UEP2_EPHSHK_POSN                                   0x4
#define _UEP2_EPHSHK_POSITION                               0x4
#define _UEP2_EPHSHK_SIZE                                   0x1
#define _UEP2_EPHSHK_LENGTH                                 0x1
#define _UEP2_EPHSHK_MASK                                   0x10
#define _UEP2_EP2CONDIS_POSN                                0x3
#define _UEP2_EP2CONDIS_POSITION                            0x3
#define _UEP2_EP2CONDIS_SIZE                                0x1
#define _UEP2_EP2CONDIS_LENGTH                              0x1
#define _UEP2_EP2CONDIS_MASK                                0x8
#define _UEP2_EP2HSHK_POSN                                  0x4
#define _UEP2_EP2HSHK_POSITION                              0x4
#define _UEP2_EP2HSHK_SIZE                                  0x1
#define _UEP2_EP2HSHK_LENGTH                                0x1
#define _UEP2_EP2HSHK_MASK                                  0x10
#define _UEP2_EP2INEN_POSN                                  0x1
#define _UEP2_EP2INEN_POSITION                              0x1
#define _UEP2_EP2INEN_SIZE                                  0x1
#define _UEP2_EP2INEN_LENGTH                                0x1
#define _UEP2_EP2INEN_MASK                                  0x2
#define _UEP2_EP2OUTEN_POSN                                 0x2
#define _UEP2_EP2OUTEN_POSITION                             0x2
#define _UEP2_EP2OUTEN_SIZE                                 0x1
#define _UEP2_EP2OUTEN_LENGTH                               0x1
#define _UEP2_EP2OUTEN_MASK                                 0x4
#define _UEP2_EP2STALL_POSN                                 0x0
#define _UEP2_EP2STALL_POSITION                             0x0
#define _UEP2_EP2STALL_SIZE                                 0x1
#define _UEP2_EP2STALL_LENGTH                               0x1
#define _UEP2_EP2STALL_MASK                                 0x1
#define _UEP2_EPCONDIS2_POSN                                0x3
#define _UEP2_EPCONDIS2_POSITION                            0x3
#define _UEP2_EPCONDIS2_SIZE                                0x1
#define _UEP2_EPCONDIS2_LENGTH                              0x1
#define _UEP2_EPCONDIS2_MASK                                0x8
#define _UEP2_EPHSHK2_POSN                                  0x4
#define _UEP2_EPHSHK2_POSITION                              0x4
#define _UEP2_EPHSHK2_SIZE                                  0x1
#define _UEP2_EPHSHK2_LENGTH                                0x1
#define _UEP2_EPHSHK2_MASK                                  0x10
#define _UEP2_EPINEN2_POSN                                  0x1
#define _UEP2_EPINEN2_POSITION                              0x1
#define _UEP2_EPINEN2_SIZE                                  0x1
#define _UEP2_EPINEN2_LENGTH                                0x1
#define _UEP2_EPINEN2_MASK                                  0x2
#define _UEP2_EPOUTEN2_POSN                                 0x2
#define _UEP2_EPOUTEN2_POSITION                             0x2
#define _UEP2_EPOUTEN2_SIZE                                 0x1
#define _UEP2_EPOUTEN2_LENGTH                               0x1
#define _UEP2_EPOUTEN2_MASK                                 0x4
#define _UEP2_EPSTALL2_POSN                                 0x0
#define _UEP2_EPSTALL2_POSITION                             0x0
#define _UEP2_EPSTALL2_SIZE                                 0x1
#define _UEP2_EPSTALL2_LENGTH                               0x1
#define _UEP2_EPSTALL2_MASK                                 0x1

// Register: UEP3
extern volatile unsigned char           UEP3                @ 0xF29;
#ifndef _LIB_BUILD
asm("UEP3 equ 0F29h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP3CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP3HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP3INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP3OUTEN               :1;
    };
    struct {
        unsigned EP3STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS3              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK3                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN3                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN3               :1;
    };
    struct {
        unsigned EPSTALL3               :1;
    };
} UEP3bits_t;
extern volatile UEP3bits_t UEP3bits @ 0xF29;
// bitfield macros
#define _UEP3_EPSTALL_POSN                                  0x0
#define _UEP3_EPSTALL_POSITION                              0x0
#define _UEP3_EPSTALL_SIZE                                  0x1
#define _UEP3_EPSTALL_LENGTH                                0x1
#define _UEP3_EPSTALL_MASK                                  0x1
#define _UEP3_EPINEN_POSN                                   0x1
#define _UEP3_EPINEN_POSITION                               0x1
#define _UEP3_EPINEN_SIZE                                   0x1
#define _UEP3_EPINEN_LENGTH                                 0x1
#define _UEP3_EPINEN_MASK                                   0x2
#define _UEP3_EPOUTEN_POSN                                  0x2
#define _UEP3_EPOUTEN_POSITION                              0x2
#define _UEP3_EPOUTEN_SIZE                                  0x1
#define _UEP3_EPOUTEN_LENGTH                                0x1
#define _UEP3_EPOUTEN_MASK                                  0x4
#define _UEP3_EPCONDIS_POSN                                 0x3
#define _UEP3_EPCONDIS_POSITION                             0x3
#define _UEP3_EPCONDIS_SIZE                                 0x1
#define _UEP3_EPCONDIS_LENGTH                               0x1
#define _UEP3_EPCONDIS_MASK                                 0x8
#define _UEP3_EPHSHK_POSN                                   0x4
#define _UEP3_EPHSHK_POSITION                               0x4
#define _UEP3_EPHSHK_SIZE                                   0x1
#define _UEP3_EPHSHK_LENGTH                                 0x1
#define _UEP3_EPHSHK_MASK                                   0x10
#define _UEP3_EP3CONDIS_POSN                                0x3
#define _UEP3_EP3CONDIS_POSITION                            0x3
#define _UEP3_EP3CONDIS_SIZE                                0x1
#define _UEP3_EP3CONDIS_LENGTH                              0x1
#define _UEP3_EP3CONDIS_MASK                                0x8
#define _UEP3_EP3HSHK_POSN                                  0x4
#define _UEP3_EP3HSHK_POSITION                              0x4
#define _UEP3_EP3HSHK_SIZE                                  0x1
#define _UEP3_EP3HSHK_LENGTH                                0x1
#define _UEP3_EP3HSHK_MASK                                  0x10
#define _UEP3_EP3INEN_POSN                                  0x1
#define _UEP3_EP3INEN_POSITION                              0x1
#define _UEP3_EP3INEN_SIZE                                  0x1
#define _UEP3_EP3INEN_LENGTH                                0x1
#define _UEP3_EP3INEN_MASK                                  0x2
#define _UEP3_EP3OUTEN_POSN                                 0x2
#define _UEP3_EP3OUTEN_POSITION                             0x2
#define _UEP3_EP3OUTEN_SIZE                                 0x1
#define _UEP3_EP3OUTEN_LENGTH                               0x1
#define _UEP3_EP3OUTEN_MASK                                 0x4
#define _UEP3_EP3STALL_POSN                                 0x0
#define _UEP3_EP3STALL_POSITION                             0x0
#define _UEP3_EP3STALL_SIZE                                 0x1
#define _UEP3_EP3STALL_LENGTH                               0x1
#define _UEP3_EP3STALL_MASK                                 0x1
#define _UEP3_EPCONDIS3_POSN                                0x3
#define _UEP3_EPCONDIS3_POSITION                            0x3
#define _UEP3_EPCONDIS3_SIZE                                0x1
#define _UEP3_EPCONDIS3_LENGTH                              0x1
#define _UEP3_EPCONDIS3_MASK                                0x8
#define _UEP3_EPHSHK3_POSN                                  0x4
#define _UEP3_EPHSHK3_POSITION                              0x4
#define _UEP3_EPHSHK3_SIZE                                  0x1
#define _UEP3_EPHSHK3_LENGTH                                0x1
#define _UEP3_EPHSHK3_MASK                                  0x10
#define _UEP3_EPINEN3_POSN                                  0x1
#define _UEP3_EPINEN3_POSITION                              0x1
#define _UEP3_EPINEN3_SIZE                                  0x1
#define _UEP3_EPINEN3_LENGTH                                0x1
#define _UEP3_EPINEN3_MASK                                  0x2
#define _UEP3_EPOUTEN3_POSN                                 0x2
#define _UEP3_EPOUTEN3_POSITION                             0x2
#define _UEP3_EPOUTEN3_SIZE                                 0x1
#define _UEP3_EPOUTEN3_LENGTH                               0x1
#define _UEP3_EPOUTEN3_MASK                                 0x4
#define _UEP3_EPSTALL3_POSN                                 0x0
#define _UEP3_EPSTALL3_POSITION                             0x0
#define _UEP3_EPSTALL3_SIZE                                 0x1
#define _UEP3_EPSTALL3_LENGTH                               0x1
#define _UEP3_EPSTALL3_MASK                                 0x1

// Register: UEP4
extern volatile unsigned char           UEP4                @ 0xF2A;
#ifndef _LIB_BUILD
asm("UEP4 equ 0F2Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP4CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP4HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP4INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP4OUTEN               :1;
    };
    struct {
        unsigned EP4STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS4              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK4                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN4                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN4               :1;
    };
    struct {
        unsigned EPSTALL4               :1;
    };
} UEP4bits_t;
extern volatile UEP4bits_t UEP4bits @ 0xF2A;
// bitfield macros
#define _UEP4_EPSTALL_POSN                                  0x0
#define _UEP4_EPSTALL_POSITION                              0x0
#define _UEP4_EPSTALL_SIZE                                  0x1
#define _UEP4_EPSTALL_LENGTH                                0x1
#define _UEP4_EPSTALL_MASK                                  0x1
#define _UEP4_EPINEN_POSN                                   0x1
#define _UEP4_EPINEN_POSITION                               0x1
#define _UEP4_EPINEN_SIZE                                   0x1
#define _UEP4_EPINEN_LENGTH                                 0x1
#define _UEP4_EPINEN_MASK                                   0x2
#define _UEP4_EPOUTEN_POSN                                  0x2
#define _UEP4_EPOUTEN_POSITION                              0x2
#define _UEP4_EPOUTEN_SIZE                                  0x1
#define _UEP4_EPOUTEN_LENGTH                                0x1
#define _UEP4_EPOUTEN_MASK                                  0x4
#define _UEP4_EPCONDIS_POSN                                 0x3
#define _UEP4_EPCONDIS_POSITION                             0x3
#define _UEP4_EPCONDIS_SIZE                                 0x1
#define _UEP4_EPCONDIS_LENGTH                               0x1
#define _UEP4_EPCONDIS_MASK                                 0x8
#define _UEP4_EPHSHK_POSN                                   0x4
#define _UEP4_EPHSHK_POSITION                               0x4
#define _UEP4_EPHSHK_SIZE                                   0x1
#define _UEP4_EPHSHK_LENGTH                                 0x1
#define _UEP4_EPHSHK_MASK                                   0x10
#define _UEP4_EP4CONDIS_POSN                                0x3
#define _UEP4_EP4CONDIS_POSITION                            0x3
#define _UEP4_EP4CONDIS_SIZE                                0x1
#define _UEP4_EP4CONDIS_LENGTH                              0x1
#define _UEP4_EP4CONDIS_MASK                                0x8
#define _UEP4_EP4HSHK_POSN                                  0x4
#define _UEP4_EP4HSHK_POSITION                              0x4
#define _UEP4_EP4HSHK_SIZE                                  0x1
#define _UEP4_EP4HSHK_LENGTH                                0x1
#define _UEP4_EP4HSHK_MASK                                  0x10
#define _UEP4_EP4INEN_POSN                                  0x1
#define _UEP4_EP4INEN_POSITION                              0x1
#define _UEP4_EP4INEN_SIZE                                  0x1
#define _UEP4_EP4INEN_LENGTH                                0x1
#define _UEP4_EP4INEN_MASK                                  0x2
#define _UEP4_EP4OUTEN_POSN                                 0x2
#define _UEP4_EP4OUTEN_POSITION                             0x2
#define _UEP4_EP4OUTEN_SIZE                                 0x1
#define _UEP4_EP4OUTEN_LENGTH                               0x1
#define _UEP4_EP4OUTEN_MASK                                 0x4
#define _UEP4_EP4STALL_POSN                                 0x0
#define _UEP4_EP4STALL_POSITION                             0x0
#define _UEP4_EP4STALL_SIZE                                 0x1
#define _UEP4_EP4STALL_LENGTH                               0x1
#define _UEP4_EP4STALL_MASK                                 0x1
#define _UEP4_EPCONDIS4_POSN                                0x3
#define _UEP4_EPCONDIS4_POSITION                            0x3
#define _UEP4_EPCONDIS4_SIZE                                0x1
#define _UEP4_EPCONDIS4_LENGTH                              0x1
#define _UEP4_EPCONDIS4_MASK                                0x8
#define _UEP4_EPHSHK4_POSN                                  0x4
#define _UEP4_EPHSHK4_POSITION                              0x4
#define _UEP4_EPHSHK4_SIZE                                  0x1
#define _UEP4_EPHSHK4_LENGTH                                0x1
#define _UEP4_EPHSHK4_MASK                                  0x10
#define _UEP4_EPINEN4_POSN                                  0x1
#define _UEP4_EPINEN4_POSITION                              0x1
#define _UEP4_EPINEN4_SIZE                                  0x1
#define _UEP4_EPINEN4_LENGTH                                0x1
#define _UEP4_EPINEN4_MASK                                  0x2
#define _UEP4_EPOUTEN4_POSN                                 0x2
#define _UEP4_EPOUTEN4_POSITION                             0x2
#define _UEP4_EPOUTEN4_SIZE                                 0x1
#define _UEP4_EPOUTEN4_LENGTH                               0x1
#define _UEP4_EPOUTEN4_MASK                                 0x4
#define _UEP4_EPSTALL4_POSN                                 0x0
#define _UEP4_EPSTALL4_POSITION                             0x0
#define _UEP4_EPSTALL4_SIZE                                 0x1
#define _UEP4_EPSTALL4_LENGTH                               0x1
#define _UEP4_EPSTALL4_MASK                                 0x1

// Register: UEP5
extern volatile unsigned char           UEP5                @ 0xF2B;
#ifndef _LIB_BUILD
asm("UEP5 equ 0F2Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP5CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP5HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP5INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP5OUTEN               :1;
    };
    struct {
        unsigned EP5STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS5              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK5                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN5                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN5               :1;
    };
    struct {
        unsigned EPSTALL5               :1;
    };
} UEP5bits_t;
extern volatile UEP5bits_t UEP5bits @ 0xF2B;
// bitfield macros
#define _UEP5_EPSTALL_POSN                                  0x0
#define _UEP5_EPSTALL_POSITION                              0x0
#define _UEP5_EPSTALL_SIZE                                  0x1
#define _UEP5_EPSTALL_LENGTH                                0x1
#define _UEP5_EPSTALL_MASK                                  0x1
#define _UEP5_EPINEN_POSN                                   0x1
#define _UEP5_EPINEN_POSITION                               0x1
#define _UEP5_EPINEN_SIZE                                   0x1
#define _UEP5_EPINEN_LENGTH                                 0x1
#define _UEP5_EPINEN_MASK                                   0x2
#define _UEP5_EPOUTEN_POSN                                  0x2
#define _UEP5_EPOUTEN_POSITION                              0x2
#define _UEP5_EPOUTEN_SIZE                                  0x1
#define _UEP5_EPOUTEN_LENGTH                                0x1
#define _UEP5_EPOUTEN_MASK                                  0x4
#define _UEP5_EPCONDIS_POSN                                 0x3
#define _UEP5_EPCONDIS_POSITION                             0x3
#define _UEP5_EPCONDIS_SIZE                                 0x1
#define _UEP5_EPCONDIS_LENGTH                               0x1
#define _UEP5_EPCONDIS_MASK                                 0x8
#define _UEP5_EPHSHK_POSN                                   0x4
#define _UEP5_EPHSHK_POSITION                               0x4
#define _UEP5_EPHSHK_SIZE                                   0x1
#define _UEP5_EPHSHK_LENGTH                                 0x1
#define _UEP5_EPHSHK_MASK                                   0x10
#define _UEP5_EP5CONDIS_POSN                                0x3
#define _UEP5_EP5CONDIS_POSITION                            0x3
#define _UEP5_EP5CONDIS_SIZE                                0x1
#define _UEP5_EP5CONDIS_LENGTH                              0x1
#define _UEP5_EP5CONDIS_MASK                                0x8
#define _UEP5_EP5HSHK_POSN                                  0x4
#define _UEP5_EP5HSHK_POSITION                              0x4
#define _UEP5_EP5HSHK_SIZE                                  0x1
#define _UEP5_EP5HSHK_LENGTH                                0x1
#define _UEP5_EP5HSHK_MASK                                  0x10
#define _UEP5_EP5INEN_POSN                                  0x1
#define _UEP5_EP5INEN_POSITION                              0x1
#define _UEP5_EP5INEN_SIZE                                  0x1
#define _UEP5_EP5INEN_LENGTH                                0x1
#define _UEP5_EP5INEN_MASK                                  0x2
#define _UEP5_EP5OUTEN_POSN                                 0x2
#define _UEP5_EP5OUTEN_POSITION                             0x2
#define _UEP5_EP5OUTEN_SIZE                                 0x1
#define _UEP5_EP5OUTEN_LENGTH                               0x1
#define _UEP5_EP5OUTEN_MASK                                 0x4
#define _UEP5_EP5STALL_POSN                                 0x0
#define _UEP5_EP5STALL_POSITION                             0x0
#define _UEP5_EP5STALL_SIZE                                 0x1
#define _UEP5_EP5STALL_LENGTH                               0x1
#define _UEP5_EP5STALL_MASK                                 0x1
#define _UEP5_EPCONDIS5_POSN                                0x3
#define _UEP5_EPCONDIS5_POSITION                            0x3
#define _UEP5_EPCONDIS5_SIZE                                0x1
#define _UEP5_EPCONDIS5_LENGTH                              0x1
#define _UEP5_EPCONDIS5_MASK                                0x8
#define _UEP5_EPHSHK5_POSN                                  0x4
#define _UEP5_EPHSHK5_POSITION                              0x4
#define _UEP5_EPHSHK5_SIZE                                  0x1
#define _UEP5_EPHSHK5_LENGTH                                0x1
#define _UEP5_EPHSHK5_MASK                                  0x10
#define _UEP5_EPINEN5_POSN                                  0x1
#define _UEP5_EPINEN5_POSITION                              0x1
#define _UEP5_EPINEN5_SIZE                                  0x1
#define _UEP5_EPINEN5_LENGTH                                0x1
#define _UEP5_EPINEN5_MASK                                  0x2
#define _UEP5_EPOUTEN5_POSN                                 0x2
#define _UEP5_EPOUTEN5_POSITION                             0x2
#define _UEP5_EPOUTEN5_SIZE                                 0x1
#define _UEP5_EPOUTEN5_LENGTH                               0x1
#define _UEP5_EPOUTEN5_MASK                                 0x4
#define _UEP5_EPSTALL5_POSN                                 0x0
#define _UEP5_EPSTALL5_POSITION                             0x0
#define _UEP5_EPSTALL5_SIZE                                 0x1
#define _UEP5_EPSTALL5_LENGTH                               0x1
#define _UEP5_EPSTALL5_MASK                                 0x1

// Register: UEP6
extern volatile unsigned char           UEP6                @ 0xF2C;
#ifndef _LIB_BUILD
asm("UEP6 equ 0F2Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP6CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP6HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP6INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP6OUTEN               :1;
    };
    struct {
        unsigned EP6STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS6              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK6                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN6                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN6               :1;
    };
    struct {
        unsigned EPSTALL6               :1;
    };
} UEP6bits_t;
extern volatile UEP6bits_t UEP6bits @ 0xF2C;
// bitfield macros
#define _UEP6_EPSTALL_POSN                                  0x0
#define _UEP6_EPSTALL_POSITION                              0x0
#define _UEP6_EPSTALL_SIZE                                  0x1
#define _UEP6_EPSTALL_LENGTH                                0x1
#define _UEP6_EPSTALL_MASK                                  0x1
#define _UEP6_EPINEN_POSN                                   0x1
#define _UEP6_EPINEN_POSITION                               0x1
#define _UEP6_EPINEN_SIZE                                   0x1
#define _UEP6_EPINEN_LENGTH                                 0x1
#define _UEP6_EPINEN_MASK                                   0x2
#define _UEP6_EPOUTEN_POSN                                  0x2
#define _UEP6_EPOUTEN_POSITION                              0x2
#define _UEP6_EPOUTEN_SIZE                                  0x1
#define _UEP6_EPOUTEN_LENGTH                                0x1
#define _UEP6_EPOUTEN_MASK                                  0x4
#define _UEP6_EPCONDIS_POSN                                 0x3
#define _UEP6_EPCONDIS_POSITION                             0x3
#define _UEP6_EPCONDIS_SIZE                                 0x1
#define _UEP6_EPCONDIS_LENGTH                               0x1
#define _UEP6_EPCONDIS_MASK                                 0x8
#define _UEP6_EPHSHK_POSN                                   0x4
#define _UEP6_EPHSHK_POSITION                               0x4
#define _UEP6_EPHSHK_SIZE                                   0x1
#define _UEP6_EPHSHK_LENGTH                                 0x1
#define _UEP6_EPHSHK_MASK                                   0x10
#define _UEP6_EP6CONDIS_POSN                                0x3
#define _UEP6_EP6CONDIS_POSITION                            0x3
#define _UEP6_EP6CONDIS_SIZE                                0x1
#define _UEP6_EP6CONDIS_LENGTH                              0x1
#define _UEP6_EP6CONDIS_MASK                                0x8
#define _UEP6_EP6HSHK_POSN                                  0x4
#define _UEP6_EP6HSHK_POSITION                              0x4
#define _UEP6_EP6HSHK_SIZE                                  0x1
#define _UEP6_EP6HSHK_LENGTH                                0x1
#define _UEP6_EP6HSHK_MASK                                  0x10
#define _UEP6_EP6INEN_POSN                                  0x1
#define _UEP6_EP6INEN_POSITION                              0x1
#define _UEP6_EP6INEN_SIZE                                  0x1
#define _UEP6_EP6INEN_LENGTH                                0x1
#define _UEP6_EP6INEN_MASK                                  0x2
#define _UEP6_EP6OUTEN_POSN                                 0x2
#define _UEP6_EP6OUTEN_POSITION                             0x2
#define _UEP6_EP6OUTEN_SIZE                                 0x1
#define _UEP6_EP6OUTEN_LENGTH                               0x1
#define _UEP6_EP6OUTEN_MASK                                 0x4
#define _UEP6_EP6STALL_POSN                                 0x0
#define _UEP6_EP6STALL_POSITION                             0x0
#define _UEP6_EP6STALL_SIZE                                 0x1
#define _UEP6_EP6STALL_LENGTH                               0x1
#define _UEP6_EP6STALL_MASK                                 0x1
#define _UEP6_EPCONDIS6_POSN                                0x3
#define _UEP6_EPCONDIS6_POSITION                            0x3
#define _UEP6_EPCONDIS6_SIZE                                0x1
#define _UEP6_EPCONDIS6_LENGTH                              0x1
#define _UEP6_EPCONDIS6_MASK                                0x8
#define _UEP6_EPHSHK6_POSN                                  0x4
#define _UEP6_EPHSHK6_POSITION                              0x4
#define _UEP6_EPHSHK6_SIZE                                  0x1
#define _UEP6_EPHSHK6_LENGTH                                0x1
#define _UEP6_EPHSHK6_MASK                                  0x10
#define _UEP6_EPINEN6_POSN                                  0x1
#define _UEP6_EPINEN6_POSITION                              0x1
#define _UEP6_EPINEN6_SIZE                                  0x1
#define _UEP6_EPINEN6_LENGTH                                0x1
#define _UEP6_EPINEN6_MASK                                  0x2
#define _UEP6_EPOUTEN6_POSN                                 0x2
#define _UEP6_EPOUTEN6_POSITION                             0x2
#define _UEP6_EPOUTEN6_SIZE                                 0x1
#define _UEP6_EPOUTEN6_LENGTH                               0x1
#define _UEP6_EPOUTEN6_MASK                                 0x4
#define _UEP6_EPSTALL6_POSN                                 0x0
#define _UEP6_EPSTALL6_POSITION                             0x0
#define _UEP6_EPSTALL6_SIZE                                 0x1
#define _UEP6_EPSTALL6_LENGTH                               0x1
#define _UEP6_EPSTALL6_MASK                                 0x1

// Register: UEP7
extern volatile unsigned char           UEP7                @ 0xF2D;
#ifndef _LIB_BUILD
asm("UEP7 equ 0F2Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EP7CONDIS              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EP7HSHK                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EP7INEN                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EP7OUTEN               :1;
    };
    struct {
        unsigned EP7STALL               :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS7              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK7                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN7                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN7               :1;
    };
    struct {
        unsigned EPSTALL7               :1;
    };
} UEP7bits_t;
extern volatile UEP7bits_t UEP7bits @ 0xF2D;
// bitfield macros
#define _UEP7_EPSTALL_POSN                                  0x0
#define _UEP7_EPSTALL_POSITION                              0x0
#define _UEP7_EPSTALL_SIZE                                  0x1
#define _UEP7_EPSTALL_LENGTH                                0x1
#define _UEP7_EPSTALL_MASK                                  0x1
#define _UEP7_EPINEN_POSN                                   0x1
#define _UEP7_EPINEN_POSITION                               0x1
#define _UEP7_EPINEN_SIZE                                   0x1
#define _UEP7_EPINEN_LENGTH                                 0x1
#define _UEP7_EPINEN_MASK                                   0x2
#define _UEP7_EPOUTEN_POSN                                  0x2
#define _UEP7_EPOUTEN_POSITION                              0x2
#define _UEP7_EPOUTEN_SIZE                                  0x1
#define _UEP7_EPOUTEN_LENGTH                                0x1
#define _UEP7_EPOUTEN_MASK                                  0x4
#define _UEP7_EPCONDIS_POSN                                 0x3
#define _UEP7_EPCONDIS_POSITION                             0x3
#define _UEP7_EPCONDIS_SIZE                                 0x1
#define _UEP7_EPCONDIS_LENGTH                               0x1
#define _UEP7_EPCONDIS_MASK                                 0x8
#define _UEP7_EPHSHK_POSN                                   0x4
#define _UEP7_EPHSHK_POSITION                               0x4
#define _UEP7_EPHSHK_SIZE                                   0x1
#define _UEP7_EPHSHK_LENGTH                                 0x1
#define _UEP7_EPHSHK_MASK                                   0x10
#define _UEP7_EP7CONDIS_POSN                                0x3
#define _UEP7_EP7CONDIS_POSITION                            0x3
#define _UEP7_EP7CONDIS_SIZE                                0x1
#define _UEP7_EP7CONDIS_LENGTH                              0x1
#define _UEP7_EP7CONDIS_MASK                                0x8
#define _UEP7_EP7HSHK_POSN                                  0x4
#define _UEP7_EP7HSHK_POSITION                              0x4
#define _UEP7_EP7HSHK_SIZE                                  0x1
#define _UEP7_EP7HSHK_LENGTH                                0x1
#define _UEP7_EP7HSHK_MASK                                  0x10
#define _UEP7_EP7INEN_POSN                                  0x1
#define _UEP7_EP7INEN_POSITION                              0x1
#define _UEP7_EP7INEN_SIZE                                  0x1
#define _UEP7_EP7INEN_LENGTH                                0x1
#define _UEP7_EP7INEN_MASK                                  0x2
#define _UEP7_EP7OUTEN_POSN                                 0x2
#define _UEP7_EP7OUTEN_POSITION                             0x2
#define _UEP7_EP7OUTEN_SIZE                                 0x1
#define _UEP7_EP7OUTEN_LENGTH                               0x1
#define _UEP7_EP7OUTEN_MASK                                 0x4
#define _UEP7_EP7STALL_POSN                                 0x0
#define _UEP7_EP7STALL_POSITION                             0x0
#define _UEP7_EP7STALL_SIZE                                 0x1
#define _UEP7_EP7STALL_LENGTH                               0x1
#define _UEP7_EP7STALL_MASK                                 0x1
#define _UEP7_EPCONDIS7_POSN                                0x3
#define _UEP7_EPCONDIS7_POSITION                            0x3
#define _UEP7_EPCONDIS7_SIZE                                0x1
#define _UEP7_EPCONDIS7_LENGTH                              0x1
#define _UEP7_EPCONDIS7_MASK                                0x8
#define _UEP7_EPHSHK7_POSN                                  0x4
#define _UEP7_EPHSHK7_POSITION                              0x4
#define _UEP7_EPHSHK7_SIZE                                  0x1
#define _UEP7_EPHSHK7_LENGTH                                0x1
#define _UEP7_EPHSHK7_MASK                                  0x10
#define _UEP7_EPINEN7_POSN                                  0x1
#define _UEP7_EPINEN7_POSITION                              0x1
#define _UEP7_EPINEN7_SIZE                                  0x1
#define _UEP7_EPINEN7_LENGTH                                0x1
#define _UEP7_EPINEN7_MASK                                  0x2
#define _UEP7_EPOUTEN7_POSN                                 0x2
#define _UEP7_EPOUTEN7_POSITION                             0x2
#define _UEP7_EPOUTEN7_SIZE                                 0x1
#define _UEP7_EPOUTEN7_LENGTH                               0x1
#define _UEP7_EPOUTEN7_MASK                                 0x4
#define _UEP7_EPSTALL7_POSN                                 0x0
#define _UEP7_EPSTALL7_POSITION                             0x0
#define _UEP7_EPSTALL7_SIZE                                 0x1
#define _UEP7_EPSTALL7_LENGTH                               0x1
#define _UEP7_EPSTALL7_MASK                                 0x1

// Register: UEP8
extern volatile unsigned char           UEP8                @ 0xF2E;
#ifndef _LIB_BUILD
asm("UEP8 equ 0F2Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS8              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK8                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN8                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN8               :1;
    };
    struct {
        unsigned EPSTALL8               :1;
    };
} UEP8bits_t;
extern volatile UEP8bits_t UEP8bits @ 0xF2E;
// bitfield macros
#define _UEP8_EPSTALL_POSN                                  0x0
#define _UEP8_EPSTALL_POSITION                              0x0
#define _UEP8_EPSTALL_SIZE                                  0x1
#define _UEP8_EPSTALL_LENGTH                                0x1
#define _UEP8_EPSTALL_MASK                                  0x1
#define _UEP8_EPINEN_POSN                                   0x1
#define _UEP8_EPINEN_POSITION                               0x1
#define _UEP8_EPINEN_SIZE                                   0x1
#define _UEP8_EPINEN_LENGTH                                 0x1
#define _UEP8_EPINEN_MASK                                   0x2
#define _UEP8_EPOUTEN_POSN                                  0x2
#define _UEP8_EPOUTEN_POSITION                              0x2
#define _UEP8_EPOUTEN_SIZE                                  0x1
#define _UEP8_EPOUTEN_LENGTH                                0x1
#define _UEP8_EPOUTEN_MASK                                  0x4
#define _UEP8_EPCONDIS_POSN                                 0x3
#define _UEP8_EPCONDIS_POSITION                             0x3
#define _UEP8_EPCONDIS_SIZE                                 0x1
#define _UEP8_EPCONDIS_LENGTH                               0x1
#define _UEP8_EPCONDIS_MASK                                 0x8
#define _UEP8_EPHSHK_POSN                                   0x4
#define _UEP8_EPHSHK_POSITION                               0x4
#define _UEP8_EPHSHK_SIZE                                   0x1
#define _UEP8_EPHSHK_LENGTH                                 0x1
#define _UEP8_EPHSHK_MASK                                   0x10
#define _UEP8_EPCONDIS8_POSN                                0x3
#define _UEP8_EPCONDIS8_POSITION                            0x3
#define _UEP8_EPCONDIS8_SIZE                                0x1
#define _UEP8_EPCONDIS8_LENGTH                              0x1
#define _UEP8_EPCONDIS8_MASK                                0x8
#define _UEP8_EPHSHK8_POSN                                  0x4
#define _UEP8_EPHSHK8_POSITION                              0x4
#define _UEP8_EPHSHK8_SIZE                                  0x1
#define _UEP8_EPHSHK8_LENGTH                                0x1
#define _UEP8_EPHSHK8_MASK                                  0x10
#define _UEP8_EPINEN8_POSN                                  0x1
#define _UEP8_EPINEN8_POSITION                              0x1
#define _UEP8_EPINEN8_SIZE                                  0x1
#define _UEP8_EPINEN8_LENGTH                                0x1
#define _UEP8_EPINEN8_MASK                                  0x2
#define _UEP8_EPOUTEN8_POSN                                 0x2
#define _UEP8_EPOUTEN8_POSITION                             0x2
#define _UEP8_EPOUTEN8_SIZE                                 0x1
#define _UEP8_EPOUTEN8_LENGTH                               0x1
#define _UEP8_EPOUTEN8_MASK                                 0x4
#define _UEP8_EPSTALL8_POSN                                 0x0
#define _UEP8_EPSTALL8_POSITION                             0x0
#define _UEP8_EPSTALL8_SIZE                                 0x1
#define _UEP8_EPSTALL8_LENGTH                               0x1
#define _UEP8_EPSTALL8_MASK                                 0x1

// Register: UEP9
extern volatile unsigned char           UEP9                @ 0xF2F;
#ifndef _LIB_BUILD
asm("UEP9 equ 0F2Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS9              :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK9                :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN9                :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN9               :1;
    };
    struct {
        unsigned EPSTALL9               :1;
    };
} UEP9bits_t;
extern volatile UEP9bits_t UEP9bits @ 0xF2F;
// bitfield macros
#define _UEP9_EPSTALL_POSN                                  0x0
#define _UEP9_EPSTALL_POSITION                              0x0
#define _UEP9_EPSTALL_SIZE                                  0x1
#define _UEP9_EPSTALL_LENGTH                                0x1
#define _UEP9_EPSTALL_MASK                                  0x1
#define _UEP9_EPINEN_POSN                                   0x1
#define _UEP9_EPINEN_POSITION                               0x1
#define _UEP9_EPINEN_SIZE                                   0x1
#define _UEP9_EPINEN_LENGTH                                 0x1
#define _UEP9_EPINEN_MASK                                   0x2
#define _UEP9_EPOUTEN_POSN                                  0x2
#define _UEP9_EPOUTEN_POSITION                              0x2
#define _UEP9_EPOUTEN_SIZE                                  0x1
#define _UEP9_EPOUTEN_LENGTH                                0x1
#define _UEP9_EPOUTEN_MASK                                  0x4
#define _UEP9_EPCONDIS_POSN                                 0x3
#define _UEP9_EPCONDIS_POSITION                             0x3
#define _UEP9_EPCONDIS_SIZE                                 0x1
#define _UEP9_EPCONDIS_LENGTH                               0x1
#define _UEP9_EPCONDIS_MASK                                 0x8
#define _UEP9_EPHSHK_POSN                                   0x4
#define _UEP9_EPHSHK_POSITION                               0x4
#define _UEP9_EPHSHK_SIZE                                   0x1
#define _UEP9_EPHSHK_LENGTH                                 0x1
#define _UEP9_EPHSHK_MASK                                   0x10
#define _UEP9_EPCONDIS9_POSN                                0x3
#define _UEP9_EPCONDIS9_POSITION                            0x3
#define _UEP9_EPCONDIS9_SIZE                                0x1
#define _UEP9_EPCONDIS9_LENGTH                              0x1
#define _UEP9_EPCONDIS9_MASK                                0x8
#define _UEP9_EPHSHK9_POSN                                  0x4
#define _UEP9_EPHSHK9_POSITION                              0x4
#define _UEP9_EPHSHK9_SIZE                                  0x1
#define _UEP9_EPHSHK9_LENGTH                                0x1
#define _UEP9_EPHSHK9_MASK                                  0x10
#define _UEP9_EPINEN9_POSN                                  0x1
#define _UEP9_EPINEN9_POSITION                              0x1
#define _UEP9_EPINEN9_SIZE                                  0x1
#define _UEP9_EPINEN9_LENGTH                                0x1
#define _UEP9_EPINEN9_MASK                                  0x2
#define _UEP9_EPOUTEN9_POSN                                 0x2
#define _UEP9_EPOUTEN9_POSITION                             0x2
#define _UEP9_EPOUTEN9_SIZE                                 0x1
#define _UEP9_EPOUTEN9_LENGTH                               0x1
#define _UEP9_EPOUTEN9_MASK                                 0x4
#define _UEP9_EPSTALL9_POSN                                 0x0
#define _UEP9_EPSTALL9_POSITION                             0x0
#define _UEP9_EPSTALL9_SIZE                                 0x1
#define _UEP9_EPSTALL9_LENGTH                               0x1
#define _UEP9_EPSTALL9_MASK                                 0x1

// Register: UEP10
extern volatile unsigned char           UEP10               @ 0xF30;
#ifndef _LIB_BUILD
asm("UEP10 equ 0F30h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS10             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK10               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN10               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN10              :1;
    };
    struct {
        unsigned EPSTALL10              :1;
    };
} UEP10bits_t;
extern volatile UEP10bits_t UEP10bits @ 0xF30;
// bitfield macros
#define _UEP10_EPSTALL_POSN                                 0x0
#define _UEP10_EPSTALL_POSITION                             0x0
#define _UEP10_EPSTALL_SIZE                                 0x1
#define _UEP10_EPSTALL_LENGTH                               0x1
#define _UEP10_EPSTALL_MASK                                 0x1
#define _UEP10_EPINEN_POSN                                  0x1
#define _UEP10_EPINEN_POSITION                              0x1
#define _UEP10_EPINEN_SIZE                                  0x1
#define _UEP10_EPINEN_LENGTH                                0x1
#define _UEP10_EPINEN_MASK                                  0x2
#define _UEP10_EPOUTEN_POSN                                 0x2
#define _UEP10_EPOUTEN_POSITION                             0x2
#define _UEP10_EPOUTEN_SIZE                                 0x1
#define _UEP10_EPOUTEN_LENGTH                               0x1
#define _UEP10_EPOUTEN_MASK                                 0x4
#define _UEP10_EPCONDIS_POSN                                0x3
#define _UEP10_EPCONDIS_POSITION                            0x3
#define _UEP10_EPCONDIS_SIZE                                0x1
#define _UEP10_EPCONDIS_LENGTH                              0x1
#define _UEP10_EPCONDIS_MASK                                0x8
#define _UEP10_EPHSHK_POSN                                  0x4
#define _UEP10_EPHSHK_POSITION                              0x4
#define _UEP10_EPHSHK_SIZE                                  0x1
#define _UEP10_EPHSHK_LENGTH                                0x1
#define _UEP10_EPHSHK_MASK                                  0x10
#define _UEP10_EPCONDIS10_POSN                              0x3
#define _UEP10_EPCONDIS10_POSITION                          0x3
#define _UEP10_EPCONDIS10_SIZE                              0x1
#define _UEP10_EPCONDIS10_LENGTH                            0x1
#define _UEP10_EPCONDIS10_MASK                              0x8
#define _UEP10_EPHSHK10_POSN                                0x4
#define _UEP10_EPHSHK10_POSITION                            0x4
#define _UEP10_EPHSHK10_SIZE                                0x1
#define _UEP10_EPHSHK10_LENGTH                              0x1
#define _UEP10_EPHSHK10_MASK                                0x10
#define _UEP10_EPINEN10_POSN                                0x1
#define _UEP10_EPINEN10_POSITION                            0x1
#define _UEP10_EPINEN10_SIZE                                0x1
#define _UEP10_EPINEN10_LENGTH                              0x1
#define _UEP10_EPINEN10_MASK                                0x2
#define _UEP10_EPOUTEN10_POSN                               0x2
#define _UEP10_EPOUTEN10_POSITION                           0x2
#define _UEP10_EPOUTEN10_SIZE                               0x1
#define _UEP10_EPOUTEN10_LENGTH                             0x1
#define _UEP10_EPOUTEN10_MASK                               0x4
#define _UEP10_EPSTALL10_POSN                               0x0
#define _UEP10_EPSTALL10_POSITION                           0x0
#define _UEP10_EPSTALL10_SIZE                               0x1
#define _UEP10_EPSTALL10_LENGTH                             0x1
#define _UEP10_EPSTALL10_MASK                               0x1

// Register: UEP11
extern volatile unsigned char           UEP11               @ 0xF31;
#ifndef _LIB_BUILD
asm("UEP11 equ 0F31h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS11             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK11               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN11               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN11              :1;
    };
    struct {
        unsigned EPSTALL11              :1;
    };
} UEP11bits_t;
extern volatile UEP11bits_t UEP11bits @ 0xF31;
// bitfield macros
#define _UEP11_EPSTALL_POSN                                 0x0
#define _UEP11_EPSTALL_POSITION                             0x0
#define _UEP11_EPSTALL_SIZE                                 0x1
#define _UEP11_EPSTALL_LENGTH                               0x1
#define _UEP11_EPSTALL_MASK                                 0x1
#define _UEP11_EPINEN_POSN                                  0x1
#define _UEP11_EPINEN_POSITION                              0x1
#define _UEP11_EPINEN_SIZE                                  0x1
#define _UEP11_EPINEN_LENGTH                                0x1
#define _UEP11_EPINEN_MASK                                  0x2
#define _UEP11_EPOUTEN_POSN                                 0x2
#define _UEP11_EPOUTEN_POSITION                             0x2
#define _UEP11_EPOUTEN_SIZE                                 0x1
#define _UEP11_EPOUTEN_LENGTH                               0x1
#define _UEP11_EPOUTEN_MASK                                 0x4
#define _UEP11_EPCONDIS_POSN                                0x3
#define _UEP11_EPCONDIS_POSITION                            0x3
#define _UEP11_EPCONDIS_SIZE                                0x1
#define _UEP11_EPCONDIS_LENGTH                              0x1
#define _UEP11_EPCONDIS_MASK                                0x8
#define _UEP11_EPHSHK_POSN                                  0x4
#define _UEP11_EPHSHK_POSITION                              0x4
#define _UEP11_EPHSHK_SIZE                                  0x1
#define _UEP11_EPHSHK_LENGTH                                0x1
#define _UEP11_EPHSHK_MASK                                  0x10
#define _UEP11_EPCONDIS11_POSN                              0x3
#define _UEP11_EPCONDIS11_POSITION                          0x3
#define _UEP11_EPCONDIS11_SIZE                              0x1
#define _UEP11_EPCONDIS11_LENGTH                            0x1
#define _UEP11_EPCONDIS11_MASK                              0x8
#define _UEP11_EPHSHK11_POSN                                0x4
#define _UEP11_EPHSHK11_POSITION                            0x4
#define _UEP11_EPHSHK11_SIZE                                0x1
#define _UEP11_EPHSHK11_LENGTH                              0x1
#define _UEP11_EPHSHK11_MASK                                0x10
#define _UEP11_EPINEN11_POSN                                0x1
#define _UEP11_EPINEN11_POSITION                            0x1
#define _UEP11_EPINEN11_SIZE                                0x1
#define _UEP11_EPINEN11_LENGTH                              0x1
#define _UEP11_EPINEN11_MASK                                0x2
#define _UEP11_EPOUTEN11_POSN                               0x2
#define _UEP11_EPOUTEN11_POSITION                           0x2
#define _UEP11_EPOUTEN11_SIZE                               0x1
#define _UEP11_EPOUTEN11_LENGTH                             0x1
#define _UEP11_EPOUTEN11_MASK                               0x4
#define _UEP11_EPSTALL11_POSN                               0x0
#define _UEP11_EPSTALL11_POSITION                           0x0
#define _UEP11_EPSTALL11_SIZE                               0x1
#define _UEP11_EPSTALL11_LENGTH                             0x1
#define _UEP11_EPSTALL11_MASK                               0x1

// Register: UEP12
extern volatile unsigned char           UEP12               @ 0xF32;
#ifndef _LIB_BUILD
asm("UEP12 equ 0F32h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS12             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK12               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN12               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN12              :1;
    };
    struct {
        unsigned EPSTALL12              :1;
    };
} UEP12bits_t;
extern volatile UEP12bits_t UEP12bits @ 0xF32;
// bitfield macros
#define _UEP12_EPSTALL_POSN                                 0x0
#define _UEP12_EPSTALL_POSITION                             0x0
#define _UEP12_EPSTALL_SIZE                                 0x1
#define _UEP12_EPSTALL_LENGTH                               0x1
#define _UEP12_EPSTALL_MASK                                 0x1
#define _UEP12_EPINEN_POSN                                  0x1
#define _UEP12_EPINEN_POSITION                              0x1
#define _UEP12_EPINEN_SIZE                                  0x1
#define _UEP12_EPINEN_LENGTH                                0x1
#define _UEP12_EPINEN_MASK                                  0x2
#define _UEP12_EPOUTEN_POSN                                 0x2
#define _UEP12_EPOUTEN_POSITION                             0x2
#define _UEP12_EPOUTEN_SIZE                                 0x1
#define _UEP12_EPOUTEN_LENGTH                               0x1
#define _UEP12_EPOUTEN_MASK                                 0x4
#define _UEP12_EPCONDIS_POSN                                0x3
#define _UEP12_EPCONDIS_POSITION                            0x3
#define _UEP12_EPCONDIS_SIZE                                0x1
#define _UEP12_EPCONDIS_LENGTH                              0x1
#define _UEP12_EPCONDIS_MASK                                0x8
#define _UEP12_EPHSHK_POSN                                  0x4
#define _UEP12_EPHSHK_POSITION                              0x4
#define _UEP12_EPHSHK_SIZE                                  0x1
#define _UEP12_EPHSHK_LENGTH                                0x1
#define _UEP12_EPHSHK_MASK                                  0x10
#define _UEP12_EPCONDIS12_POSN                              0x3
#define _UEP12_EPCONDIS12_POSITION                          0x3
#define _UEP12_EPCONDIS12_SIZE                              0x1
#define _UEP12_EPCONDIS12_LENGTH                            0x1
#define _UEP12_EPCONDIS12_MASK                              0x8
#define _UEP12_EPHSHK12_POSN                                0x4
#define _UEP12_EPHSHK12_POSITION                            0x4
#define _UEP12_EPHSHK12_SIZE                                0x1
#define _UEP12_EPHSHK12_LENGTH                              0x1
#define _UEP12_EPHSHK12_MASK                                0x10
#define _UEP12_EPINEN12_POSN                                0x1
#define _UEP12_EPINEN12_POSITION                            0x1
#define _UEP12_EPINEN12_SIZE                                0x1
#define _UEP12_EPINEN12_LENGTH                              0x1
#define _UEP12_EPINEN12_MASK                                0x2
#define _UEP12_EPOUTEN12_POSN                               0x2
#define _UEP12_EPOUTEN12_POSITION                           0x2
#define _UEP12_EPOUTEN12_SIZE                               0x1
#define _UEP12_EPOUTEN12_LENGTH                             0x1
#define _UEP12_EPOUTEN12_MASK                               0x4
#define _UEP12_EPSTALL12_POSN                               0x0
#define _UEP12_EPSTALL12_POSITION                           0x0
#define _UEP12_EPSTALL12_SIZE                               0x1
#define _UEP12_EPSTALL12_LENGTH                             0x1
#define _UEP12_EPSTALL12_MASK                               0x1

// Register: UEP13
extern volatile unsigned char           UEP13               @ 0xF33;
#ifndef _LIB_BUILD
asm("UEP13 equ 0F33h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS13             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK13               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN13               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN13              :1;
    };
    struct {
        unsigned EPSTALL13              :1;
    };
} UEP13bits_t;
extern volatile UEP13bits_t UEP13bits @ 0xF33;
// bitfield macros
#define _UEP13_EPSTALL_POSN                                 0x0
#define _UEP13_EPSTALL_POSITION                             0x0
#define _UEP13_EPSTALL_SIZE                                 0x1
#define _UEP13_EPSTALL_LENGTH                               0x1
#define _UEP13_EPSTALL_MASK                                 0x1
#define _UEP13_EPINEN_POSN                                  0x1
#define _UEP13_EPINEN_POSITION                              0x1
#define _UEP13_EPINEN_SIZE                                  0x1
#define _UEP13_EPINEN_LENGTH                                0x1
#define _UEP13_EPINEN_MASK                                  0x2
#define _UEP13_EPOUTEN_POSN                                 0x2
#define _UEP13_EPOUTEN_POSITION                             0x2
#define _UEP13_EPOUTEN_SIZE                                 0x1
#define _UEP13_EPOUTEN_LENGTH                               0x1
#define _UEP13_EPOUTEN_MASK                                 0x4
#define _UEP13_EPCONDIS_POSN                                0x3
#define _UEP13_EPCONDIS_POSITION                            0x3
#define _UEP13_EPCONDIS_SIZE                                0x1
#define _UEP13_EPCONDIS_LENGTH                              0x1
#define _UEP13_EPCONDIS_MASK                                0x8
#define _UEP13_EPHSHK_POSN                                  0x4
#define _UEP13_EPHSHK_POSITION                              0x4
#define _UEP13_EPHSHK_SIZE                                  0x1
#define _UEP13_EPHSHK_LENGTH                                0x1
#define _UEP13_EPHSHK_MASK                                  0x10
#define _UEP13_EPCONDIS13_POSN                              0x3
#define _UEP13_EPCONDIS13_POSITION                          0x3
#define _UEP13_EPCONDIS13_SIZE                              0x1
#define _UEP13_EPCONDIS13_LENGTH                            0x1
#define _UEP13_EPCONDIS13_MASK                              0x8
#define _UEP13_EPHSHK13_POSN                                0x4
#define _UEP13_EPHSHK13_POSITION                            0x4
#define _UEP13_EPHSHK13_SIZE                                0x1
#define _UEP13_EPHSHK13_LENGTH                              0x1
#define _UEP13_EPHSHK13_MASK                                0x10
#define _UEP13_EPINEN13_POSN                                0x1
#define _UEP13_EPINEN13_POSITION                            0x1
#define _UEP13_EPINEN13_SIZE                                0x1
#define _UEP13_EPINEN13_LENGTH                              0x1
#define _UEP13_EPINEN13_MASK                                0x2
#define _UEP13_EPOUTEN13_POSN                               0x2
#define _UEP13_EPOUTEN13_POSITION                           0x2
#define _UEP13_EPOUTEN13_SIZE                               0x1
#define _UEP13_EPOUTEN13_LENGTH                             0x1
#define _UEP13_EPOUTEN13_MASK                               0x4
#define _UEP13_EPSTALL13_POSN                               0x0
#define _UEP13_EPSTALL13_POSITION                           0x0
#define _UEP13_EPSTALL13_SIZE                               0x1
#define _UEP13_EPSTALL13_LENGTH                             0x1
#define _UEP13_EPSTALL13_MASK                               0x1

// Register: UEP14
extern volatile unsigned char           UEP14               @ 0xF34;
#ifndef _LIB_BUILD
asm("UEP14 equ 0F34h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS14             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK14               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN14               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN14              :1;
    };
    struct {
        unsigned EPSTALL14              :1;
    };
} UEP14bits_t;
extern volatile UEP14bits_t UEP14bits @ 0xF34;
// bitfield macros
#define _UEP14_EPSTALL_POSN                                 0x0
#define _UEP14_EPSTALL_POSITION                             0x0
#define _UEP14_EPSTALL_SIZE                                 0x1
#define _UEP14_EPSTALL_LENGTH                               0x1
#define _UEP14_EPSTALL_MASK                                 0x1
#define _UEP14_EPINEN_POSN                                  0x1
#define _UEP14_EPINEN_POSITION                              0x1
#define _UEP14_EPINEN_SIZE                                  0x1
#define _UEP14_EPINEN_LENGTH                                0x1
#define _UEP14_EPINEN_MASK                                  0x2
#define _UEP14_EPOUTEN_POSN                                 0x2
#define _UEP14_EPOUTEN_POSITION                             0x2
#define _UEP14_EPOUTEN_SIZE                                 0x1
#define _UEP14_EPOUTEN_LENGTH                               0x1
#define _UEP14_EPOUTEN_MASK                                 0x4
#define _UEP14_EPCONDIS_POSN                                0x3
#define _UEP14_EPCONDIS_POSITION                            0x3
#define _UEP14_EPCONDIS_SIZE                                0x1
#define _UEP14_EPCONDIS_LENGTH                              0x1
#define _UEP14_EPCONDIS_MASK                                0x8
#define _UEP14_EPHSHK_POSN                                  0x4
#define _UEP14_EPHSHK_POSITION                              0x4
#define _UEP14_EPHSHK_SIZE                                  0x1
#define _UEP14_EPHSHK_LENGTH                                0x1
#define _UEP14_EPHSHK_MASK                                  0x10
#define _UEP14_EPCONDIS14_POSN                              0x3
#define _UEP14_EPCONDIS14_POSITION                          0x3
#define _UEP14_EPCONDIS14_SIZE                              0x1
#define _UEP14_EPCONDIS14_LENGTH                            0x1
#define _UEP14_EPCONDIS14_MASK                              0x8
#define _UEP14_EPHSHK14_POSN                                0x4
#define _UEP14_EPHSHK14_POSITION                            0x4
#define _UEP14_EPHSHK14_SIZE                                0x1
#define _UEP14_EPHSHK14_LENGTH                              0x1
#define _UEP14_EPHSHK14_MASK                                0x10
#define _UEP14_EPINEN14_POSN                                0x1
#define _UEP14_EPINEN14_POSITION                            0x1
#define _UEP14_EPINEN14_SIZE                                0x1
#define _UEP14_EPINEN14_LENGTH                              0x1
#define _UEP14_EPINEN14_MASK                                0x2
#define _UEP14_EPOUTEN14_POSN                               0x2
#define _UEP14_EPOUTEN14_POSITION                           0x2
#define _UEP14_EPOUTEN14_SIZE                               0x1
#define _UEP14_EPOUTEN14_LENGTH                             0x1
#define _UEP14_EPOUTEN14_MASK                               0x4
#define _UEP14_EPSTALL14_POSN                               0x0
#define _UEP14_EPSTALL14_POSITION                           0x0
#define _UEP14_EPSTALL14_SIZE                               0x1
#define _UEP14_EPSTALL14_LENGTH                             0x1
#define _UEP14_EPSTALL14_MASK                               0x1

// Register: UEP15
extern volatile unsigned char           UEP15               @ 0xF35;
#ifndef _LIB_BUILD
asm("UEP15 equ 0F35h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EPSTALL                :1;
        unsigned EPINEN                 :1;
        unsigned EPOUTEN                :1;
        unsigned EPCONDIS               :1;
        unsigned EPHSHK                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned EPCONDIS15             :1;
    };
    struct {
        unsigned                        :4;
        unsigned EPHSHK15               :1;
    };
    struct {
        unsigned                        :1;
        unsigned EPINEN15               :1;
    };
    struct {
        unsigned                        :2;
        unsigned EPOUTEN15              :1;
    };
    struct {
        unsigned EPSTALL15              :1;
    };
} UEP15bits_t;
extern volatile UEP15bits_t UEP15bits @ 0xF35;
// bitfield macros
#define _UEP15_EPSTALL_POSN                                 0x0
#define _UEP15_EPSTALL_POSITION                             0x0
#define _UEP15_EPSTALL_SIZE                                 0x1
#define _UEP15_EPSTALL_LENGTH                               0x1
#define _UEP15_EPSTALL_MASK                                 0x1
#define _UEP15_EPINEN_POSN                                  0x1
#define _UEP15_EPINEN_POSITION                              0x1
#define _UEP15_EPINEN_SIZE                                  0x1
#define _UEP15_EPINEN_LENGTH                                0x1
#define _UEP15_EPINEN_MASK                                  0x2
#define _UEP15_EPOUTEN_POSN                                 0x2
#define _UEP15_EPOUTEN_POSITION                             0x2
#define _UEP15_EPOUTEN_SIZE                                 0x1
#define _UEP15_EPOUTEN_LENGTH                               0x1
#define _UEP15_EPOUTEN_MASK                                 0x4
#define _UEP15_EPCONDIS_POSN                                0x3
#define _UEP15_EPCONDIS_POSITION                            0x3
#define _UEP15_EPCONDIS_SIZE                                0x1
#define _UEP15_EPCONDIS_LENGTH                              0x1
#define _UEP15_EPCONDIS_MASK                                0x8
#define _UEP15_EPHSHK_POSN                                  0x4
#define _UEP15_EPHSHK_POSITION                              0x4
#define _UEP15_EPHSHK_SIZE                                  0x1
#define _UEP15_EPHSHK_LENGTH                                0x1
#define _UEP15_EPHSHK_MASK                                  0x10
#define _UEP15_EPCONDIS15_POSN                              0x3
#define _UEP15_EPCONDIS15_POSITION                          0x3
#define _UEP15_EPCONDIS15_SIZE                              0x1
#define _UEP15_EPCONDIS15_LENGTH                            0x1
#define _UEP15_EPCONDIS15_MASK                              0x8
#define _UEP15_EPHSHK15_POSN                                0x4
#define _UEP15_EPHSHK15_POSITION                            0x4
#define _UEP15_EPHSHK15_SIZE                                0x1
#define _UEP15_EPHSHK15_LENGTH                              0x1
#define _UEP15_EPHSHK15_MASK                                0x10
#define _UEP15_EPINEN15_POSN                                0x1
#define _UEP15_EPINEN15_POSITION                            0x1
#define _UEP15_EPINEN15_SIZE                                0x1
#define _UEP15_EPINEN15_LENGTH                              0x1
#define _UEP15_EPINEN15_MASK                                0x2
#define _UEP15_EPOUTEN15_POSN                               0x2
#define _UEP15_EPOUTEN15_POSITION                           0x2
#define _UEP15_EPOUTEN15_SIZE                               0x1
#define _UEP15_EPOUTEN15_LENGTH                             0x1
#define _UEP15_EPOUTEN15_MASK                               0x4
#define _UEP15_EPSTALL15_POSN                               0x0
#define _UEP15_EPSTALL15_POSITION                           0x0
#define _UEP15_EPSTALL15_SIZE                               0x1
#define _UEP15_EPSTALL15_LENGTH                             0x1
#define _UEP15_EPSTALL15_MASK                               0x1

// Register: UIE
extern volatile unsigned char           UIE                 @ 0xF36;
#ifndef _LIB_BUILD
asm("UIE equ 0F36h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned URSTIE                 :1;
        unsigned UERRIE                 :1;
        unsigned ACTVIE                 :1;
        unsigned TRNIE                  :1;
        unsigned IDLEIE                 :1;
        unsigned STALLIE                :1;
        unsigned SOFIE                  :1;
    };
} UIEbits_t;
extern volatile UIEbits_t UIEbits @ 0xF36;
// bitfield macros
#define _UIE_URSTIE_POSN                                    0x0
#define _UIE_URSTIE_POSITION                                0x0
#define _UIE_URSTIE_SIZE                                    0x1
#define _UIE_URSTIE_LENGTH                                  0x1
#define _UIE_URSTIE_MASK                                    0x1
#define _UIE_UERRIE_POSN                                    0x1
#define _UIE_UERRIE_POSITION                                0x1
#define _UIE_UERRIE_SIZE                                    0x1
#define _UIE_UERRIE_LENGTH                                  0x1
#define _UIE_UERRIE_MASK                                    0x2
#define _UIE_ACTVIE_POSN                                    0x2
#define _UIE_ACTVIE_POSITION                                0x2
#define _UIE_ACTVIE_SIZE                                    0x1
#define _UIE_ACTVIE_LENGTH                                  0x1
#define _UIE_ACTVIE_MASK                                    0x4
#define _UIE_TRNIE_POSN                                     0x3
#define _UIE_TRNIE_POSITION                                 0x3
#define _UIE_TRNIE_SIZE                                     0x1
#define _UIE_TRNIE_LENGTH                                   0x1
#define _UIE_TRNIE_MASK                                     0x8
#define _UIE_IDLEIE_POSN                                    0x4
#define _UIE_IDLEIE_POSITION                                0x4
#define _UIE_IDLEIE_SIZE                                    0x1
#define _UIE_IDLEIE_LENGTH                                  0x1
#define _UIE_IDLEIE_MASK                                    0x10
#define _UIE_STALLIE_POSN                                   0x5
#define _UIE_STALLIE_POSITION                               0x5
#define _UIE_STALLIE_SIZE                                   0x1
#define _UIE_STALLIE_LENGTH                                 0x1
#define _UIE_STALLIE_MASK                                   0x20
#define _UIE_SOFIE_POSN                                     0x6
#define _UIE_SOFIE_POSITION                                 0x6
#define _UIE_SOFIE_SIZE                                     0x1
#define _UIE_SOFIE_LENGTH                                   0x1
#define _UIE_SOFIE_MASK                                     0x40

// Register: UEIE
extern volatile unsigned char           UEIE                @ 0xF37;
#ifndef _LIB_BUILD
asm("UEIE equ 0F37h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PIDEE                  :1;
        unsigned CRC5EE                 :1;
        unsigned CRC16EE                :1;
        unsigned DFN8EE                 :1;
        unsigned BTOEE                  :1;
        unsigned                        :2;
        unsigned BTSEE                  :1;
    };
} UEIEbits_t;
extern volatile UEIEbits_t UEIEbits @ 0xF37;
// bitfield macros
#define _UEIE_PIDEE_POSN                                    0x0
#define _UEIE_PIDEE_POSITION                                0x0
#define _UEIE_PIDEE_SIZE                                    0x1
#define _UEIE_PIDEE_LENGTH                                  0x1
#define _UEIE_PIDEE_MASK                                    0x1
#define _UEIE_CRC5EE_POSN                                   0x1
#define _UEIE_CRC5EE_POSITION                               0x1
#define _UEIE_CRC5EE_SIZE                                   0x1
#define _UEIE_CRC5EE_LENGTH                                 0x1
#define _UEIE_CRC5EE_MASK                                   0x2
#define _UEIE_CRC16EE_POSN                                  0x2
#define _UEIE_CRC16EE_POSITION                              0x2
#define _UEIE_CRC16EE_SIZE                                  0x1
#define _UEIE_CRC16EE_LENGTH                                0x1
#define _UEIE_CRC16EE_MASK                                  0x4
#define _UEIE_DFN8EE_POSN                                   0x3
#define _UEIE_DFN8EE_POSITION                               0x3
#define _UEIE_DFN8EE_SIZE                                   0x1
#define _UEIE_DFN8EE_LENGTH                                 0x1
#define _UEIE_DFN8EE_MASK                                   0x8
#define _UEIE_BTOEE_POSN                                    0x4
#define _UEIE_BTOEE_POSITION                                0x4
#define _UEIE_BTOEE_SIZE                                    0x1
#define _UEIE_BTOEE_LENGTH                                  0x1
#define _UEIE_BTOEE_MASK                                    0x10
#define _UEIE_BTSEE_POSN                                    0x7
#define _UEIE_BTSEE_POSITION                                0x7
#define _UEIE_BTSEE_SIZE                                    0x1
#define _UEIE_BTSEE_LENGTH                                  0x1
#define _UEIE_BTSEE_MASK                                    0x80

// Register: UADDR
extern volatile unsigned char           UADDR               @ 0xF38;
#ifndef _LIB_BUILD
asm("UADDR equ 0F38h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADDR                   :7;
    };
    struct {
        unsigned ADDR0                  :1;
        unsigned ADDR1                  :1;
        unsigned ADDR2                  :1;
        unsigned ADDR3                  :1;
        unsigned ADDR4                  :1;
        unsigned ADDR5                  :1;
        unsigned ADDR6                  :1;
    };
} UADDRbits_t;
extern volatile UADDRbits_t UADDRbits @ 0xF38;
// bitfield macros
#define _UADDR_ADDR_POSN                                    0x0
#define _UADDR_ADDR_POSITION                                0x0
#define _UADDR_ADDR_SIZE                                    0x7
#define _UADDR_ADDR_LENGTH                                  0x7
#define _UADDR_ADDR_MASK                                    0x7F
#define _UADDR_ADDR0_POSN                                   0x0
#define _UADDR_ADDR0_POSITION                               0x0
#define _UADDR_ADDR0_SIZE                                   0x1
#define _UADDR_ADDR0_LENGTH                                 0x1
#define _UADDR_ADDR0_MASK                                   0x1
#define _UADDR_ADDR1_POSN                                   0x1
#define _UADDR_ADDR1_POSITION                               0x1
#define _UADDR_ADDR1_SIZE                                   0x1
#define _UADDR_ADDR1_LENGTH                                 0x1
#define _UADDR_ADDR1_MASK                                   0x2
#define _UADDR_ADDR2_POSN                                   0x2
#define _UADDR_ADDR2_POSITION                               0x2
#define _UADDR_ADDR2_SIZE                                   0x1
#define _UADDR_ADDR2_LENGTH                                 0x1
#define _UADDR_ADDR2_MASK                                   0x4
#define _UADDR_ADDR3_POSN                                   0x3
#define _UADDR_ADDR3_POSITION                               0x3
#define _UADDR_ADDR3_SIZE                                   0x1
#define _UADDR_ADDR3_LENGTH                                 0x1
#define _UADDR_ADDR3_MASK                                   0x8
#define _UADDR_ADDR4_POSN                                   0x4
#define _UADDR_ADDR4_POSITION                               0x4
#define _UADDR_ADDR4_SIZE                                   0x1
#define _UADDR_ADDR4_LENGTH                                 0x1
#define _UADDR_ADDR4_MASK                                   0x10
#define _UADDR_ADDR5_POSN                                   0x5
#define _UADDR_ADDR5_POSITION                               0x5
#define _UADDR_ADDR5_SIZE                                   0x1
#define _UADDR_ADDR5_LENGTH                                 0x1
#define _UADDR_ADDR5_MASK                                   0x20
#define _UADDR_ADDR6_POSN                                   0x6
#define _UADDR_ADDR6_POSITION                               0x6
#define _UADDR_ADDR6_SIZE                                   0x1
#define _UADDR_ADDR6_LENGTH                                 0x1
#define _UADDR_ADDR6_MASK                                   0x40

// Register: UCFG
extern volatile unsigned char           UCFG                @ 0xF39;
#ifndef _LIB_BUILD
asm("UCFG equ 0F39h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PPB0                   :1;
        unsigned PPB1                   :1;
        unsigned FSEN                   :1;
        unsigned UTRDIS                 :1;
        unsigned UPUEN                  :1;
        unsigned                        :1;
        unsigned UOEMON                 :1;
        unsigned UTEYE                  :1;
    };
    struct {
        unsigned UPP0                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned UPP1                   :1;
    };
} UCFGbits_t;
extern volatile UCFGbits_t UCFGbits @ 0xF39;
// bitfield macros
#define _UCFG_PPB0_POSN                                     0x0
#define _UCFG_PPB0_POSITION                                 0x0
#define _UCFG_PPB0_SIZE                                     0x1
#define _UCFG_PPB0_LENGTH                                   0x1
#define _UCFG_PPB0_MASK                                     0x1
#define _UCFG_PPB1_POSN                                     0x1
#define _UCFG_PPB1_POSITION                                 0x1
#define _UCFG_PPB1_SIZE                                     0x1
#define _UCFG_PPB1_LENGTH                                   0x1
#define _UCFG_PPB1_MASK                                     0x2
#define _UCFG_FSEN_POSN                                     0x2
#define _UCFG_FSEN_POSITION                                 0x2
#define _UCFG_FSEN_SIZE                                     0x1
#define _UCFG_FSEN_LENGTH                                   0x1
#define _UCFG_FSEN_MASK                                     0x4
#define _UCFG_UTRDIS_POSN                                   0x3
#define _UCFG_UTRDIS_POSITION                               0x3
#define _UCFG_UTRDIS_SIZE                                   0x1
#define _UCFG_UTRDIS_LENGTH                                 0x1
#define _UCFG_UTRDIS_MASK                                   0x8
#define _UCFG_UPUEN_POSN                                    0x4
#define _UCFG_UPUEN_POSITION                                0x4
#define _UCFG_UPUEN_SIZE                                    0x1
#define _UCFG_UPUEN_LENGTH                                  0x1
#define _UCFG_UPUEN_MASK                                    0x10
#define _UCFG_UOEMON_POSN                                   0x6
#define _UCFG_UOEMON_POSITION                               0x6
#define _UCFG_UOEMON_SIZE                                   0x1
#define _UCFG_UOEMON_LENGTH                                 0x1
#define _UCFG_UOEMON_MASK                                   0x40
#define _UCFG_UTEYE_POSN                                    0x7
#define _UCFG_UTEYE_POSITION                                0x7
#define _UCFG_UTEYE_SIZE                                    0x1
#define _UCFG_UTEYE_LENGTH                                  0x1
#define _UCFG_UTEYE_MASK                                    0x80
#define _UCFG_UPP0_POSN                                     0x0
#define _UCFG_UPP0_POSITION                                 0x0
#define _UCFG_UPP0_SIZE                                     0x1
#define _UCFG_UPP0_LENGTH                                   0x1
#define _UCFG_UPP0_MASK                                     0x1
#define _UCFG_UPP1_POSN                                     0x1
#define _UCFG_UPP1_POSITION                                 0x1
#define _UCFG_UPP1_SIZE                                     0x1
#define _UCFG_UPP1_LENGTH                                   0x1
#define _UCFG_UPP1_MASK                                     0x2

// Register: RTCVALL
extern volatile unsigned char           RTCVALL             @ 0xF3A;
#ifndef _LIB_BUILD
asm("RTCVALL equ 0F3Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCVALL                :8;
    };
} RTCVALLbits_t;
extern volatile RTCVALLbits_t RTCVALLbits @ 0xF3A;
// bitfield macros
#define _RTCVALL_RTCVALL_POSN                               0x0
#define _RTCVALL_RTCVALL_POSITION                           0x0
#define _RTCVALL_RTCVALL_SIZE                               0x8
#define _RTCVALL_RTCVALL_LENGTH                             0x8
#define _RTCVALL_RTCVALL_MASK                               0xFF

// Register: RTCVALH
extern volatile unsigned char           RTCVALH             @ 0xF3B;
#ifndef _LIB_BUILD
asm("RTCVALH equ 0F3Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCVALH                :8;
    };
    struct {
        unsigned                        :6;
        unsigned WAITB0                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned WAITB1                 :1;
    };
    struct {
        unsigned WAITE0                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WAITE1                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned WAITM0                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned WAITM1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAITM2                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAITM3                 :1;
    };
} RTCVALHbits_t;
extern volatile RTCVALHbits_t RTCVALHbits @ 0xF3B;
// bitfield macros
#define _RTCVALH_RTCVALH_POSN                               0x0
#define _RTCVALH_RTCVALH_POSITION                           0x0
#define _RTCVALH_RTCVALH_SIZE                               0x8
#define _RTCVALH_RTCVALH_LENGTH                             0x8
#define _RTCVALH_RTCVALH_MASK                               0xFF
#define _RTCVALH_WAITB0_POSN                                0x6
#define _RTCVALH_WAITB0_POSITION                            0x6
#define _RTCVALH_WAITB0_SIZE                                0x1
#define _RTCVALH_WAITB0_LENGTH                              0x1
#define _RTCVALH_WAITB0_MASK                                0x40
#define _RTCVALH_WAITB1_POSN                                0x7
#define _RTCVALH_WAITB1_POSITION                            0x7
#define _RTCVALH_WAITB1_SIZE                                0x1
#define _RTCVALH_WAITB1_LENGTH                              0x1
#define _RTCVALH_WAITB1_MASK                                0x80
#define _RTCVALH_WAITE0_POSN                                0x0
#define _RTCVALH_WAITE0_POSITION                            0x0
#define _RTCVALH_WAITE0_SIZE                                0x1
#define _RTCVALH_WAITE0_LENGTH                              0x1
#define _RTCVALH_WAITE0_MASK                                0x1
#define _RTCVALH_WAITE1_POSN                                0x1
#define _RTCVALH_WAITE1_POSITION                            0x1
#define _RTCVALH_WAITE1_SIZE                                0x1
#define _RTCVALH_WAITE1_LENGTH                              0x1
#define _RTCVALH_WAITE1_MASK                                0x2
#define _RTCVALH_WAITM0_POSN                                0x2
#define _RTCVALH_WAITM0_POSITION                            0x2
#define _RTCVALH_WAITM0_SIZE                                0x1
#define _RTCVALH_WAITM0_LENGTH                              0x1
#define _RTCVALH_WAITM0_MASK                                0x4
#define _RTCVALH_WAITM1_POSN                                0x3
#define _RTCVALH_WAITM1_POSITION                            0x3
#define _RTCVALH_WAITM1_SIZE                                0x1
#define _RTCVALH_WAITM1_LENGTH                              0x1
#define _RTCVALH_WAITM1_MASK                                0x8
#define _RTCVALH_WAITM2_POSN                                0x4
#define _RTCVALH_WAITM2_POSITION                            0x4
#define _RTCVALH_WAITM2_SIZE                                0x1
#define _RTCVALH_WAITM2_LENGTH                              0x1
#define _RTCVALH_WAITM2_MASK                                0x10
#define _RTCVALH_WAITM3_POSN                                0x5
#define _RTCVALH_WAITM3_POSITION                            0x5
#define _RTCVALH_WAITM3_SIZE                                0x1
#define _RTCVALH_WAITM3_LENGTH                              0x1
#define _RTCVALH_WAITM3_MASK                                0x20

// Register: PADCFG1
extern volatile unsigned char           PADCFG1             @ 0xF3C;
#ifndef _LIB_BUILD
asm("PADCFG1 equ 0F3Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned RTSECSEL0              :1;
        unsigned RTSECSEL1              :1;
    };
} PADCFG1bits_t;
extern volatile PADCFG1bits_t PADCFG1bits @ 0xF3C;
// bitfield macros
#define _PADCFG1_RTSECSEL0_POSN                             0x1
#define _PADCFG1_RTSECSEL0_POSITION                         0x1
#define _PADCFG1_RTSECSEL0_SIZE                             0x1
#define _PADCFG1_RTSECSEL0_LENGTH                           0x1
#define _PADCFG1_RTSECSEL0_MASK                             0x2
#define _PADCFG1_RTSECSEL1_POSN                             0x2
#define _PADCFG1_RTSECSEL1_POSITION                         0x2
#define _PADCFG1_RTSECSEL1_SIZE                             0x1
#define _PADCFG1_RTSECSEL1_LENGTH                           0x1
#define _PADCFG1_RTSECSEL1_MASK                             0x4

// Register: REFOCON
extern volatile unsigned char           REFOCON             @ 0xF3D;
#ifndef _LIB_BUILD
asm("REFOCON equ 0F3Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RODIV                  :4;
        unsigned ROSEL                  :1;
        unsigned ROSSLP                 :1;
        unsigned                        :1;
        unsigned ROON                   :1;
    };
    struct {
        unsigned RODIV0                 :1;
        unsigned RODIV1                 :1;
        unsigned RODIV2                 :1;
        unsigned RODIV3                 :1;
    };
} REFOCONbits_t;
extern volatile REFOCONbits_t REFOCONbits @ 0xF3D;
// bitfield macros
#define _REFOCON_RODIV_POSN                                 0x0
#define _REFOCON_RODIV_POSITION                             0x0
#define _REFOCON_RODIV_SIZE                                 0x4
#define _REFOCON_RODIV_LENGTH                               0x4
#define _REFOCON_RODIV_MASK                                 0xF
#define _REFOCON_ROSEL_POSN                                 0x4
#define _REFOCON_ROSEL_POSITION                             0x4
#define _REFOCON_ROSEL_SIZE                                 0x1
#define _REFOCON_ROSEL_LENGTH                               0x1
#define _REFOCON_ROSEL_MASK                                 0x10
#define _REFOCON_ROSSLP_POSN                                0x5
#define _REFOCON_ROSSLP_POSITION                            0x5
#define _REFOCON_ROSSLP_SIZE                                0x1
#define _REFOCON_ROSSLP_LENGTH                              0x1
#define _REFOCON_ROSSLP_MASK                                0x20
#define _REFOCON_ROON_POSN                                  0x7
#define _REFOCON_ROON_POSITION                              0x7
#define _REFOCON_ROON_SIZE                                  0x1
#define _REFOCON_ROON_LENGTH                                0x1
#define _REFOCON_ROON_MASK                                  0x80
#define _REFOCON_RODIV0_POSN                                0x0
#define _REFOCON_RODIV0_POSITION                            0x0
#define _REFOCON_RODIV0_SIZE                                0x1
#define _REFOCON_RODIV0_LENGTH                              0x1
#define _REFOCON_RODIV0_MASK                                0x1
#define _REFOCON_RODIV1_POSN                                0x1
#define _REFOCON_RODIV1_POSITION                            0x1
#define _REFOCON_RODIV1_SIZE                                0x1
#define _REFOCON_RODIV1_LENGTH                              0x1
#define _REFOCON_RODIV1_MASK                                0x2
#define _REFOCON_RODIV2_POSN                                0x2
#define _REFOCON_RODIV2_POSITION                            0x2
#define _REFOCON_RODIV2_SIZE                                0x1
#define _REFOCON_RODIV2_LENGTH                              0x1
#define _REFOCON_RODIV2_MASK                                0x4
#define _REFOCON_RODIV3_POSN                                0x3
#define _REFOCON_RODIV3_POSITION                            0x3
#define _REFOCON_RODIV3_SIZE                                0x1
#define _REFOCON_RODIV3_LENGTH                              0x1
#define _REFOCON_RODIV3_MASK                                0x8

// Register: RTCCAL
extern volatile unsigned char           RTCCAL              @ 0xF3E;
#ifndef _LIB_BUILD
asm("RTCCAL equ 0F3Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CAL                    :8;
    };
    struct {
        unsigned CAL0                   :1;
        unsigned CAL1                   :1;
        unsigned CAL2                   :1;
        unsigned CAL3                   :1;
        unsigned CAL4                   :1;
        unsigned CAL5                   :1;
        unsigned CAL6                   :1;
        unsigned CAL7                   :1;
    };
} RTCCALbits_t;
extern volatile RTCCALbits_t RTCCALbits @ 0xF3E;
// bitfield macros
#define _RTCCAL_CAL_POSN                                    0x0
#define _RTCCAL_CAL_POSITION                                0x0
#define _RTCCAL_CAL_SIZE                                    0x8
#define _RTCCAL_CAL_LENGTH                                  0x8
#define _RTCCAL_CAL_MASK                                    0xFF
#define _RTCCAL_CAL0_POSN                                   0x0
#define _RTCCAL_CAL0_POSITION                               0x0
#define _RTCCAL_CAL0_SIZE                                   0x1
#define _RTCCAL_CAL0_LENGTH                                 0x1
#define _RTCCAL_CAL0_MASK                                   0x1
#define _RTCCAL_CAL1_POSN                                   0x1
#define _RTCCAL_CAL1_POSITION                               0x1
#define _RTCCAL_CAL1_SIZE                                   0x1
#define _RTCCAL_CAL1_LENGTH                                 0x1
#define _RTCCAL_CAL1_MASK                                   0x2
#define _RTCCAL_CAL2_POSN                                   0x2
#define _RTCCAL_CAL2_POSITION                               0x2
#define _RTCCAL_CAL2_SIZE                                   0x1
#define _RTCCAL_CAL2_LENGTH                                 0x1
#define _RTCCAL_CAL2_MASK                                   0x4
#define _RTCCAL_CAL3_POSN                                   0x3
#define _RTCCAL_CAL3_POSITION                               0x3
#define _RTCCAL_CAL3_SIZE                                   0x1
#define _RTCCAL_CAL3_LENGTH                                 0x1
#define _RTCCAL_CAL3_MASK                                   0x8
#define _RTCCAL_CAL4_POSN                                   0x4
#define _RTCCAL_CAL4_POSITION                               0x4
#define _RTCCAL_CAL4_SIZE                                   0x1
#define _RTCCAL_CAL4_LENGTH                                 0x1
#define _RTCCAL_CAL4_MASK                                   0x10
#define _RTCCAL_CAL5_POSN                                   0x5
#define _RTCCAL_CAL5_POSITION                               0x5
#define _RTCCAL_CAL5_SIZE                                   0x1
#define _RTCCAL_CAL5_LENGTH                                 0x1
#define _RTCCAL_CAL5_MASK                                   0x20
#define _RTCCAL_CAL6_POSN                                   0x6
#define _RTCCAL_CAL6_POSITION                               0x6
#define _RTCCAL_CAL6_SIZE                                   0x1
#define _RTCCAL_CAL6_LENGTH                                 0x1
#define _RTCCAL_CAL6_MASK                                   0x40
#define _RTCCAL_CAL7_POSN                                   0x7
#define _RTCCAL_CAL7_POSITION                               0x7
#define _RTCCAL_CAL7_SIZE                                   0x1
#define _RTCCAL_CAL7_LENGTH                                 0x1
#define _RTCCAL_CAL7_MASK                                   0x80

// Register: RTCCFG
extern volatile unsigned char           RTCCFG              @ 0xF3F;
#ifndef _LIB_BUILD
asm("RTCCFG equ 0F3Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCPTR0                :1;
        unsigned RTCPTR1                :1;
        unsigned RTCOE                  :1;
        unsigned HALFSEC                :1;
        unsigned RTCSYNC                :1;
        unsigned RTCWREN                :1;
        unsigned                        :1;
        unsigned RTCEN                  :1;
    };
} RTCCFGbits_t;
extern volatile RTCCFGbits_t RTCCFGbits @ 0xF3F;
// bitfield macros
#define _RTCCFG_RTCPTR0_POSN                                0x0
#define _RTCCFG_RTCPTR0_POSITION                            0x0
#define _RTCCFG_RTCPTR0_SIZE                                0x1
#define _RTCCFG_RTCPTR0_LENGTH                              0x1
#define _RTCCFG_RTCPTR0_MASK                                0x1
#define _RTCCFG_RTCPTR1_POSN                                0x1
#define _RTCCFG_RTCPTR1_POSITION                            0x1
#define _RTCCFG_RTCPTR1_SIZE                                0x1
#define _RTCCFG_RTCPTR1_LENGTH                              0x1
#define _RTCCFG_RTCPTR1_MASK                                0x2
#define _RTCCFG_RTCOE_POSN                                  0x2
#define _RTCCFG_RTCOE_POSITION                              0x2
#define _RTCCFG_RTCOE_SIZE                                  0x1
#define _RTCCFG_RTCOE_LENGTH                                0x1
#define _RTCCFG_RTCOE_MASK                                  0x4
#define _RTCCFG_HALFSEC_POSN                                0x3
#define _RTCCFG_HALFSEC_POSITION                            0x3
#define _RTCCFG_HALFSEC_SIZE                                0x1
#define _RTCCFG_HALFSEC_LENGTH                              0x1
#define _RTCCFG_HALFSEC_MASK                                0x8
#define _RTCCFG_RTCSYNC_POSN                                0x4
#define _RTCCFG_RTCSYNC_POSITION                            0x4
#define _RTCCFG_RTCSYNC_SIZE                                0x1
#define _RTCCFG_RTCSYNC_LENGTH                              0x1
#define _RTCCFG_RTCSYNC_MASK                                0x10
#define _RTCCFG_RTCWREN_POSN                                0x5
#define _RTCCFG_RTCWREN_POSITION                            0x5
#define _RTCCFG_RTCWREN_SIZE                                0x1
#define _RTCCFG_RTCWREN_LENGTH                              0x1
#define _RTCCFG_RTCWREN_MASK                                0x20
#define _RTCCFG_RTCEN_POSN                                  0x7
#define _RTCCFG_RTCEN_POSITION                              0x7
#define _RTCCFG_RTCEN_SIZE                                  0x1
#define _RTCCFG_RTCEN_LENGTH                                0x1
#define _RTCCFG_RTCEN_MASK                                  0x80

// Register: ODCON3
extern volatile unsigned char           ODCON3              @ 0xF40;
#ifndef _LIB_BUILD
asm("ODCON3 equ 0F40h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPI1OD                 :1;
        unsigned SPI2OD                 :1;
    };
} ODCON3bits_t;
extern volatile ODCON3bits_t ODCON3bits @ 0xF40;
// bitfield macros
#define _ODCON3_SPI1OD_POSN                                 0x0
#define _ODCON3_SPI1OD_POSITION                             0x0
#define _ODCON3_SPI1OD_SIZE                                 0x1
#define _ODCON3_SPI1OD_LENGTH                               0x1
#define _ODCON3_SPI1OD_MASK                                 0x1
#define _ODCON3_SPI2OD_POSN                                 0x1
#define _ODCON3_SPI2OD_POSITION                             0x1
#define _ODCON3_SPI2OD_SIZE                                 0x1
#define _ODCON3_SPI2OD_LENGTH                               0x1
#define _ODCON3_SPI2OD_MASK                                 0x2

// Register: ODCON2
extern volatile unsigned char           ODCON2              @ 0xF41;
#ifndef _LIB_BUILD
asm("ODCON2 equ 0F41h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned U1OD                   :1;
        unsigned U2OD                   :1;
        unsigned CCP9OD                 :1;
        unsigned CCP10OD                :1;
    };
} ODCON2bits_t;
extern volatile ODCON2bits_t ODCON2bits @ 0xF41;
// bitfield macros
#define _ODCON2_U1OD_POSN                                   0x0
#define _ODCON2_U1OD_POSITION                               0x0
#define _ODCON2_U1OD_SIZE                                   0x1
#define _ODCON2_U1OD_LENGTH                                 0x1
#define _ODCON2_U1OD_MASK                                   0x1
#define _ODCON2_U2OD_POSN                                   0x1
#define _ODCON2_U2OD_POSITION                               0x1
#define _ODCON2_U2OD_SIZE                                   0x1
#define _ODCON2_U2OD_LENGTH                                 0x1
#define _ODCON2_U2OD_MASK                                   0x2
#define _ODCON2_CCP9OD_POSN                                 0x2
#define _ODCON2_CCP9OD_POSITION                             0x2
#define _ODCON2_CCP9OD_SIZE                                 0x1
#define _ODCON2_CCP9OD_LENGTH                               0x1
#define _ODCON2_CCP9OD_MASK                                 0x4
#define _ODCON2_CCP10OD_POSN                                0x3
#define _ODCON2_CCP10OD_POSITION                            0x3
#define _ODCON2_CCP10OD_SIZE                                0x1
#define _ODCON2_CCP10OD_LENGTH                              0x1
#define _ODCON2_CCP10OD_MASK                                0x8

// Register: ODCON1
extern volatile unsigned char           ODCON1              @ 0xF42;
#ifndef _LIB_BUILD
asm("ODCON1 equ 0F42h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ECCP1OD                :1;
        unsigned ECCP2OD                :1;
        unsigned ECCP3OD                :1;
        unsigned CCP4OD                 :1;
        unsigned CCP5OD                 :1;
        unsigned CCP6OD                 :1;
        unsigned CCP7OD                 :1;
        unsigned CCP8OD                 :1;
    };
} ODCON1bits_t;
extern volatile ODCON1bits_t ODCON1bits @ 0xF42;
// bitfield macros
#define _ODCON1_ECCP1OD_POSN                                0x0
#define _ODCON1_ECCP1OD_POSITION                            0x0
#define _ODCON1_ECCP1OD_SIZE                                0x1
#define _ODCON1_ECCP1OD_LENGTH                              0x1
#define _ODCON1_ECCP1OD_MASK                                0x1
#define _ODCON1_ECCP2OD_POSN                                0x1
#define _ODCON1_ECCP2OD_POSITION                            0x1
#define _ODCON1_ECCP2OD_SIZE                                0x1
#define _ODCON1_ECCP2OD_LENGTH                              0x1
#define _ODCON1_ECCP2OD_MASK                                0x2
#define _ODCON1_ECCP3OD_POSN                                0x2
#define _ODCON1_ECCP3OD_POSITION                            0x2
#define _ODCON1_ECCP3OD_SIZE                                0x1
#define _ODCON1_ECCP3OD_LENGTH                              0x1
#define _ODCON1_ECCP3OD_MASK                                0x4
#define _ODCON1_CCP4OD_POSN                                 0x3
#define _ODCON1_CCP4OD_POSITION                             0x3
#define _ODCON1_CCP4OD_SIZE                                 0x1
#define _ODCON1_CCP4OD_LENGTH                               0x1
#define _ODCON1_CCP4OD_MASK                                 0x8
#define _ODCON1_CCP5OD_POSN                                 0x4
#define _ODCON1_CCP5OD_POSITION                             0x4
#define _ODCON1_CCP5OD_SIZE                                 0x1
#define _ODCON1_CCP5OD_LENGTH                               0x1
#define _ODCON1_CCP5OD_MASK                                 0x10
#define _ODCON1_CCP6OD_POSN                                 0x5
#define _ODCON1_CCP6OD_POSITION                             0x5
#define _ODCON1_CCP6OD_SIZE                                 0x1
#define _ODCON1_CCP6OD_LENGTH                               0x1
#define _ODCON1_CCP6OD_MASK                                 0x20
#define _ODCON1_CCP7OD_POSN                                 0x6
#define _ODCON1_CCP7OD_POSITION                             0x6
#define _ODCON1_CCP7OD_SIZE                                 0x1
#define _ODCON1_CCP7OD_LENGTH                               0x1
#define _ODCON1_CCP7OD_MASK                                 0x40
#define _ODCON1_CCP8OD_POSN                                 0x7
#define _ODCON1_CCP8OD_POSITION                             0x7
#define _ODCON1_CCP8OD_SIZE                                 0x1
#define _ODCON1_CCP8OD_LENGTH                               0x1
#define _ODCON1_CCP8OD_MASK                                 0x80

// Register: ALRMVALL
extern volatile unsigned char           ALRMVALL            @ 0xF44;
#ifndef _LIB_BUILD
asm("ALRMVALL equ 0F44h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMVALL               :8;
    };
} ALRMVALLbits_t;
extern volatile ALRMVALLbits_t ALRMVALLbits @ 0xF44;
// bitfield macros
#define _ALRMVALL_ALRMVALL_POSN                             0x0
#define _ALRMVALL_ALRMVALL_POSITION                         0x0
#define _ALRMVALL_ALRMVALL_SIZE                             0x8
#define _ALRMVALL_ALRMVALL_LENGTH                           0x8
#define _ALRMVALL_ALRMVALL_MASK                             0xFF

// Register: ALRMVALH
extern volatile unsigned char           ALRMVALH            @ 0xF45;
#ifndef _LIB_BUILD
asm("ALRMVALH equ 0F45h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMVALH               :8;
    };
} ALRMVALHbits_t;
extern volatile ALRMVALHbits_t ALRMVALHbits @ 0xF45;
// bitfield macros
#define _ALRMVALH_ALRMVALH_POSN                             0x0
#define _ALRMVALH_ALRMVALH_POSITION                         0x0
#define _ALRMVALH_ALRMVALH_SIZE                             0x8
#define _ALRMVALH_ALRMVALH_LENGTH                           0x8
#define _ALRMVALH_ALRMVALH_MASK                             0xFF

// Register: ALRMRPT
extern volatile unsigned char           ALRMRPT             @ 0xF46;
#ifndef _LIB_BUILD
asm("ALRMRPT equ 0F46h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ARPT                   :8;
    };
    struct {
        unsigned ARPT0                  :1;
        unsigned ARPT1                  :1;
        unsigned ARPT2                  :1;
        unsigned ARPT3                  :1;
        unsigned ARPT4                  :1;
        unsigned ARPT5                  :1;
        unsigned ARPT6                  :1;
        unsigned ARPT7                  :1;
    };
} ALRMRPTbits_t;
extern volatile ALRMRPTbits_t ALRMRPTbits @ 0xF46;
// bitfield macros
#define _ALRMRPT_ARPT_POSN                                  0x0
#define _ALRMRPT_ARPT_POSITION                              0x0
#define _ALRMRPT_ARPT_SIZE                                  0x8
#define _ALRMRPT_ARPT_LENGTH                                0x8
#define _ALRMRPT_ARPT_MASK                                  0xFF
#define _ALRMRPT_ARPT0_POSN                                 0x0
#define _ALRMRPT_ARPT0_POSITION                             0x0
#define _ALRMRPT_ARPT0_SIZE                                 0x1
#define _ALRMRPT_ARPT0_LENGTH                               0x1
#define _ALRMRPT_ARPT0_MASK                                 0x1
#define _ALRMRPT_ARPT1_POSN                                 0x1
#define _ALRMRPT_ARPT1_POSITION                             0x1
#define _ALRMRPT_ARPT1_SIZE                                 0x1
#define _ALRMRPT_ARPT1_LENGTH                               0x1
#define _ALRMRPT_ARPT1_MASK                                 0x2
#define _ALRMRPT_ARPT2_POSN                                 0x2
#define _ALRMRPT_ARPT2_POSITION                             0x2
#define _ALRMRPT_ARPT2_SIZE                                 0x1
#define _ALRMRPT_ARPT2_LENGTH                               0x1
#define _ALRMRPT_ARPT2_MASK                                 0x4
#define _ALRMRPT_ARPT3_POSN                                 0x3
#define _ALRMRPT_ARPT3_POSITION                             0x3
#define _ALRMRPT_ARPT3_SIZE                                 0x1
#define _ALRMRPT_ARPT3_LENGTH                               0x1
#define _ALRMRPT_ARPT3_MASK                                 0x8
#define _ALRMRPT_ARPT4_POSN                                 0x4
#define _ALRMRPT_ARPT4_POSITION                             0x4
#define _ALRMRPT_ARPT4_SIZE                                 0x1
#define _ALRMRPT_ARPT4_LENGTH                               0x1
#define _ALRMRPT_ARPT4_MASK                                 0x10
#define _ALRMRPT_ARPT5_POSN                                 0x5
#define _ALRMRPT_ARPT5_POSITION                             0x5
#define _ALRMRPT_ARPT5_SIZE                                 0x1
#define _ALRMRPT_ARPT5_LENGTH                               0x1
#define _ALRMRPT_ARPT5_MASK                                 0x20
#define _ALRMRPT_ARPT6_POSN                                 0x6
#define _ALRMRPT_ARPT6_POSITION                             0x6
#define _ALRMRPT_ARPT6_SIZE                                 0x1
#define _ALRMRPT_ARPT6_LENGTH                               0x1
#define _ALRMRPT_ARPT6_MASK                                 0x40
#define _ALRMRPT_ARPT7_POSN                                 0x7
#define _ALRMRPT_ARPT7_POSITION                             0x7
#define _ALRMRPT_ARPT7_SIZE                                 0x1
#define _ALRMRPT_ARPT7_LENGTH                               0x1
#define _ALRMRPT_ARPT7_MASK                                 0x80

// Register: ALRMCFG
extern volatile unsigned char           ALRMCFG             @ 0xF47;
#ifndef _LIB_BUILD
asm("ALRMCFG equ 0F47h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ALRMPTR                :2;
        unsigned AMASK                  :4;
        unsigned CHIME                  :1;
        unsigned ALRMEN                 :1;
    };
    struct {
        unsigned ALRMPTR0               :1;
        unsigned ALRMPTR1               :1;
        unsigned AMASK0                 :1;
        unsigned AMASK1                 :1;
        unsigned AMASK2                 :1;
        unsigned AMASK3                 :1;
    };
} ALRMCFGbits_t;
extern volatile ALRMCFGbits_t ALRMCFGbits @ 0xF47;
// bitfield macros
#define _ALRMCFG_ALRMPTR_POSN                               0x0
#define _ALRMCFG_ALRMPTR_POSITION                           0x0
#define _ALRMCFG_ALRMPTR_SIZE                               0x2
#define _ALRMCFG_ALRMPTR_LENGTH                             0x2
#define _ALRMCFG_ALRMPTR_MASK                               0x3
#define _ALRMCFG_AMASK_POSN                                 0x2
#define _ALRMCFG_AMASK_POSITION                             0x2
#define _ALRMCFG_AMASK_SIZE                                 0x4
#define _ALRMCFG_AMASK_LENGTH                               0x4
#define _ALRMCFG_AMASK_MASK                                 0x3C
#define _ALRMCFG_CHIME_POSN                                 0x6
#define _ALRMCFG_CHIME_POSITION                             0x6
#define _ALRMCFG_CHIME_SIZE                                 0x1
#define _ALRMCFG_CHIME_LENGTH                               0x1
#define _ALRMCFG_CHIME_MASK                                 0x40
#define _ALRMCFG_ALRMEN_POSN                                0x7
#define _ALRMCFG_ALRMEN_POSITION                            0x7
#define _ALRMCFG_ALRMEN_SIZE                                0x1
#define _ALRMCFG_ALRMEN_LENGTH                              0x1
#define _ALRMCFG_ALRMEN_MASK                                0x80
#define _ALRMCFG_ALRMPTR0_POSN                              0x0
#define _ALRMCFG_ALRMPTR0_POSITION                          0x0
#define _ALRMCFG_ALRMPTR0_SIZE                              0x1
#define _ALRMCFG_ALRMPTR0_LENGTH                            0x1
#define _ALRMCFG_ALRMPTR0_MASK                              0x1
#define _ALRMCFG_ALRMPTR1_POSN                              0x1
#define _ALRMCFG_ALRMPTR1_POSITION                          0x1
#define _ALRMCFG_ALRMPTR1_SIZE                              0x1
#define _ALRMCFG_ALRMPTR1_LENGTH                            0x1
#define _ALRMCFG_ALRMPTR1_MASK                              0x2
#define _ALRMCFG_AMASK0_POSN                                0x2
#define _ALRMCFG_AMASK0_POSITION                            0x2
#define _ALRMCFG_AMASK0_SIZE                                0x1
#define _ALRMCFG_AMASK0_LENGTH                              0x1
#define _ALRMCFG_AMASK0_MASK                                0x4
#define _ALRMCFG_AMASK1_POSN                                0x3
#define _ALRMCFG_AMASK1_POSITION                            0x3
#define _ALRMCFG_AMASK1_SIZE                                0x1
#define _ALRMCFG_AMASK1_LENGTH                              0x1
#define _ALRMCFG_AMASK1_MASK                                0x8
#define _ALRMCFG_AMASK2_POSN                                0x4
#define _ALRMCFG_AMASK2_POSITION                            0x4
#define _ALRMCFG_AMASK2_SIZE                                0x1
#define _ALRMCFG_AMASK2_LENGTH                              0x1
#define _ALRMCFG_AMASK2_MASK                                0x10
#define _ALRMCFG_AMASK3_POSN                                0x5
#define _ALRMCFG_AMASK3_POSITION                            0x5
#define _ALRMCFG_AMASK3_SIZE                                0x1
#define _ALRMCFG_AMASK3_LENGTH                              0x1
#define _ALRMCFG_AMASK3_MASK                                0x20

// Register: ANCON0
extern volatile unsigned char           ANCON0              @ 0xF48;
#ifndef _LIB_BUILD
asm("ANCON0 equ 0F48h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCFG0                  :1;
        unsigned PCFG1                  :1;
        unsigned PCFG2                  :1;
        unsigned PCFG3                  :1;
        unsigned PCFG4                  :1;
    };
} ANCON0bits_t;
extern volatile ANCON0bits_t ANCON0bits @ 0xF48;
// bitfield macros
#define _ANCON0_PCFG0_POSN                                  0x0
#define _ANCON0_PCFG0_POSITION                              0x0
#define _ANCON0_PCFG0_SIZE                                  0x1
#define _ANCON0_PCFG0_LENGTH                                0x1
#define _ANCON0_PCFG0_MASK                                  0x1
#define _ANCON0_PCFG1_POSN                                  0x1
#define _ANCON0_PCFG1_POSITION                              0x1
#define _ANCON0_PCFG1_SIZE                                  0x1
#define _ANCON0_PCFG1_LENGTH                                0x1
#define _ANCON0_PCFG1_MASK                                  0x2
#define _ANCON0_PCFG2_POSN                                  0x2
#define _ANCON0_PCFG2_POSITION                              0x2
#define _ANCON0_PCFG2_SIZE                                  0x1
#define _ANCON0_PCFG2_LENGTH                                0x1
#define _ANCON0_PCFG2_MASK                                  0x4
#define _ANCON0_PCFG3_POSN                                  0x3
#define _ANCON0_PCFG3_POSITION                              0x3
#define _ANCON0_PCFG3_SIZE                                  0x1
#define _ANCON0_PCFG3_LENGTH                                0x1
#define _ANCON0_PCFG3_MASK                                  0x8
#define _ANCON0_PCFG4_POSN                                  0x4
#define _ANCON0_PCFG4_POSITION                              0x4
#define _ANCON0_PCFG4_SIZE                                  0x1
#define _ANCON0_PCFG4_LENGTH                                0x1
#define _ANCON0_PCFG4_MASK                                  0x10

// Register: ANCON1
extern volatile unsigned char           ANCON1              @ 0xF49;
#ifndef _LIB_BUILD
asm("ANCON1 equ 0F49h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCFG8                  :1;
        unsigned PCFG9                  :1;
        unsigned PCFG10                 :1;
        unsigned PCFG11                 :1;
        unsigned PCFG12                 :1;
        unsigned                        :2;
        unsigned VBGEN                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned PCFG15                 :1;
    };
} ANCON1bits_t;
extern volatile ANCON1bits_t ANCON1bits @ 0xF49;
// bitfield macros
#define _ANCON1_PCFG8_POSN                                  0x0
#define _ANCON1_PCFG8_POSITION                              0x0
#define _ANCON1_PCFG8_SIZE                                  0x1
#define _ANCON1_PCFG8_LENGTH                                0x1
#define _ANCON1_PCFG8_MASK                                  0x1
#define _ANCON1_PCFG9_POSN                                  0x1
#define _ANCON1_PCFG9_POSITION                              0x1
#define _ANCON1_PCFG9_SIZE                                  0x1
#define _ANCON1_PCFG9_LENGTH                                0x1
#define _ANCON1_PCFG9_MASK                                  0x2
#define _ANCON1_PCFG10_POSN                                 0x2
#define _ANCON1_PCFG10_POSITION                             0x2
#define _ANCON1_PCFG10_SIZE                                 0x1
#define _ANCON1_PCFG10_LENGTH                               0x1
#define _ANCON1_PCFG10_MASK                                 0x4
#define _ANCON1_PCFG11_POSN                                 0x3
#define _ANCON1_PCFG11_POSITION                             0x3
#define _ANCON1_PCFG11_SIZE                                 0x1
#define _ANCON1_PCFG11_LENGTH                               0x1
#define _ANCON1_PCFG11_MASK                                 0x8
#define _ANCON1_PCFG12_POSN                                 0x4
#define _ANCON1_PCFG12_POSITION                             0x4
#define _ANCON1_PCFG12_SIZE                                 0x1
#define _ANCON1_PCFG12_LENGTH                               0x1
#define _ANCON1_PCFG12_MASK                                 0x10
#define _ANCON1_VBGEN_POSN                                  0x7
#define _ANCON1_VBGEN_POSITION                              0x7
#define _ANCON1_VBGEN_SIZE                                  0x1
#define _ANCON1_VBGEN_LENGTH                                0x1
#define _ANCON1_VBGEN_MASK                                  0x80
#define _ANCON1_PCFG15_POSN                                 0x7
#define _ANCON1_PCFG15_POSITION                             0x7
#define _ANCON1_PCFG15_SIZE                                 0x1
#define _ANCON1_PCFG15_LENGTH                               0x1
#define _ANCON1_PCFG15_MASK                                 0x80

// Register: DSWAKEL
extern volatile unsigned char           DSWAKEL             @ 0xF4A;
#ifndef _LIB_BUILD
asm("DSWAKEL equ 0F4Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DSPOR                  :1;
        unsigned                        :1;
        unsigned DSMCLR                 :1;
        unsigned DSRTC                  :1;
        unsigned DSWDT                  :1;
        unsigned DSULP                  :1;
        unsigned                        :1;
        unsigned DSFLT                  :1;
    };
} DSWAKELbits_t;
extern volatile DSWAKELbits_t DSWAKELbits @ 0xF4A;
// bitfield macros
#define _DSWAKEL_DSPOR_POSN                                 0x0
#define _DSWAKEL_DSPOR_POSITION                             0x0
#define _DSWAKEL_DSPOR_SIZE                                 0x1
#define _DSWAKEL_DSPOR_LENGTH                               0x1
#define _DSWAKEL_DSPOR_MASK                                 0x1
#define _DSWAKEL_DSMCLR_POSN                                0x2
#define _DSWAKEL_DSMCLR_POSITION                            0x2
#define _DSWAKEL_DSMCLR_SIZE                                0x1
#define _DSWAKEL_DSMCLR_LENGTH                              0x1
#define _DSWAKEL_DSMCLR_MASK                                0x4
#define _DSWAKEL_DSRTC_POSN                                 0x3
#define _DSWAKEL_DSRTC_POSITION                             0x3
#define _DSWAKEL_DSRTC_SIZE                                 0x1
#define _DSWAKEL_DSRTC_LENGTH                               0x1
#define _DSWAKEL_DSRTC_MASK                                 0x8
#define _DSWAKEL_DSWDT_POSN                                 0x4
#define _DSWAKEL_DSWDT_POSITION                             0x4
#define _DSWAKEL_DSWDT_SIZE                                 0x1
#define _DSWAKEL_DSWDT_LENGTH                               0x1
#define _DSWAKEL_DSWDT_MASK                                 0x10
#define _DSWAKEL_DSULP_POSN                                 0x5
#define _DSWAKEL_DSULP_POSITION                             0x5
#define _DSWAKEL_DSULP_SIZE                                 0x1
#define _DSWAKEL_DSULP_LENGTH                               0x1
#define _DSWAKEL_DSULP_MASK                                 0x20
#define _DSWAKEL_DSFLT_POSN                                 0x7
#define _DSWAKEL_DSFLT_POSITION                             0x7
#define _DSWAKEL_DSFLT_SIZE                                 0x1
#define _DSWAKEL_DSFLT_LENGTH                               0x1
#define _DSWAKEL_DSFLT_MASK                                 0x80

// Register: DSWAKEH
extern volatile unsigned char           DSWAKEH             @ 0xF4B;
#ifndef _LIB_BUILD
asm("DSWAKEH equ 0F4Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DSINT0                 :1;
    };
} DSWAKEHbits_t;
extern volatile DSWAKEHbits_t DSWAKEHbits @ 0xF4B;
// bitfield macros
#define _DSWAKEH_DSINT0_POSN                                0x0
#define _DSWAKEH_DSINT0_POSITION                            0x0
#define _DSWAKEH_DSINT0_SIZE                                0x1
#define _DSWAKEH_DSINT0_LENGTH                              0x1
#define _DSWAKEH_DSINT0_MASK                                0x1

// Register: DSCONL
extern volatile unsigned char           DSCONL              @ 0xF4C;
#ifndef _LIB_BUILD
asm("DSCONL equ 0F4Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RELEASE                :1;
        unsigned DSBOR                  :1;
        unsigned ULPWDIS                :1;
    };
} DSCONLbits_t;
extern volatile DSCONLbits_t DSCONLbits @ 0xF4C;
// bitfield macros
#define _DSCONL_RELEASE_POSN                                0x0
#define _DSCONL_RELEASE_POSITION                            0x0
#define _DSCONL_RELEASE_SIZE                                0x1
#define _DSCONL_RELEASE_LENGTH                              0x1
#define _DSCONL_RELEASE_MASK                                0x1
#define _DSCONL_DSBOR_POSN                                  0x1
#define _DSCONL_DSBOR_POSITION                              0x1
#define _DSCONL_DSBOR_SIZE                                  0x1
#define _DSCONL_DSBOR_LENGTH                                0x1
#define _DSCONL_DSBOR_MASK                                  0x2
#define _DSCONL_ULPWDIS_POSN                                0x2
#define _DSCONL_ULPWDIS_POSITION                            0x2
#define _DSCONL_ULPWDIS_SIZE                                0x1
#define _DSCONL_ULPWDIS_LENGTH                              0x1
#define _DSCONL_ULPWDIS_MASK                                0x4

// Register: DSCONH
extern volatile unsigned char           DSCONH              @ 0xF4D;
#ifndef _LIB_BUILD
asm("DSCONH equ 0F4Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCWDIS                :1;
        unsigned DSULPEN                :1;
        unsigned                        :5;
        unsigned DSEN                   :1;
    };
} DSCONHbits_t;
extern volatile DSCONHbits_t DSCONHbits @ 0xF4D;
// bitfield macros
#define _DSCONH_RTCWDIS_POSN                                0x0
#define _DSCONH_RTCWDIS_POSITION                            0x0
#define _DSCONH_RTCWDIS_SIZE                                0x1
#define _DSCONH_RTCWDIS_LENGTH                              0x1
#define _DSCONH_RTCWDIS_MASK                                0x1
#define _DSCONH_DSULPEN_POSN                                0x1
#define _DSCONH_DSULPEN_POSITION                            0x1
#define _DSCONH_DSULPEN_SIZE                                0x1
#define _DSCONH_DSULPEN_LENGTH                              0x1
#define _DSCONH_DSULPEN_MASK                                0x2
#define _DSCONH_DSEN_POSN                                   0x7
#define _DSCONH_DSEN_POSITION                               0x7
#define _DSCONH_DSEN_SIZE                                   0x1
#define _DSCONH_DSEN_LENGTH                                 0x1
#define _DSCONH_DSEN_MASK                                   0x80

// Register: DSGPR0
extern volatile unsigned char           DSGPR0              @ 0xF4E;
#ifndef _LIB_BUILD
asm("DSGPR0 equ 0F4Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DSGPR0                 :8;
    };
} DSGPR0bits_t;
extern volatile DSGPR0bits_t DSGPR0bits @ 0xF4E;
// bitfield macros
#define _DSGPR0_DSGPR0_POSN                                 0x0
#define _DSGPR0_DSGPR0_POSITION                             0x0
#define _DSGPR0_DSGPR0_SIZE                                 0x8
#define _DSGPR0_DSGPR0_LENGTH                               0x8
#define _DSGPR0_DSGPR0_MASK                                 0xFF

// Register: DSGPR1
extern volatile unsigned char           DSGPR1              @ 0xF4F;
#ifndef _LIB_BUILD
asm("DSGPR1 equ 0F4Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DSGPR1                 :8;
    };
} DSGPR1bits_t;
extern volatile DSGPR1bits_t DSGPR1bits @ 0xF4F;
// bitfield macros
#define _DSGPR1_DSGPR1_POSN                                 0x0
#define _DSGPR1_DSGPR1_POSITION                             0x0
#define _DSGPR1_DSGPR1_SIZE                                 0x8
#define _DSGPR1_DSGPR1_LENGTH                               0x8
#define _DSGPR1_DSGPR1_MASK                                 0xFF

// Register: CCPTMRS2
extern volatile unsigned char           CCPTMRS2            @ 0xF50;
#ifndef _LIB_BUILD
asm("CCPTMRS2 equ 0F50h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C8TSEL                 :2;
        unsigned C9TSEL0                :1;
        unsigned                        :1;
        unsigned C10TSEL0               :1;
    };
    struct {
        unsigned C8TSEL0                :1;
        unsigned C8TSEL1                :1;
    };
} CCPTMRS2bits_t;
extern volatile CCPTMRS2bits_t CCPTMRS2bits @ 0xF50;
// bitfield macros
#define _CCPTMRS2_C8TSEL_POSN                               0x0
#define _CCPTMRS2_C8TSEL_POSITION                           0x0
#define _CCPTMRS2_C8TSEL_SIZE                               0x2
#define _CCPTMRS2_C8TSEL_LENGTH                             0x2
#define _CCPTMRS2_C8TSEL_MASK                               0x3
#define _CCPTMRS2_C9TSEL0_POSN                              0x2
#define _CCPTMRS2_C9TSEL0_POSITION                          0x2
#define _CCPTMRS2_C9TSEL0_SIZE                              0x1
#define _CCPTMRS2_C9TSEL0_LENGTH                            0x1
#define _CCPTMRS2_C9TSEL0_MASK                              0x4
#define _CCPTMRS2_C10TSEL0_POSN                             0x4
#define _CCPTMRS2_C10TSEL0_POSITION                         0x4
#define _CCPTMRS2_C10TSEL0_SIZE                             0x1
#define _CCPTMRS2_C10TSEL0_LENGTH                           0x1
#define _CCPTMRS2_C10TSEL0_MASK                             0x10
#define _CCPTMRS2_C8TSEL0_POSN                              0x0
#define _CCPTMRS2_C8TSEL0_POSITION                          0x0
#define _CCPTMRS2_C8TSEL0_SIZE                              0x1
#define _CCPTMRS2_C8TSEL0_LENGTH                            0x1
#define _CCPTMRS2_C8TSEL0_MASK                              0x1
#define _CCPTMRS2_C8TSEL1_POSN                              0x1
#define _CCPTMRS2_C8TSEL1_POSITION                          0x1
#define _CCPTMRS2_C8TSEL1_SIZE                              0x1
#define _CCPTMRS2_C8TSEL1_LENGTH                            0x1
#define _CCPTMRS2_C8TSEL1_MASK                              0x2

// Register: CCPTMRS1
extern volatile unsigned char           CCPTMRS1            @ 0xF51;
#ifndef _LIB_BUILD
asm("CCPTMRS1 equ 0F51h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C4TSEL                 :2;
        unsigned C5TSEL0                :1;
        unsigned                        :1;
        unsigned C6TSEL0                :1;
        unsigned                        :1;
        unsigned C7TSEL                 :2;
    };
    struct {
        unsigned C4TSEL0                :1;
        unsigned C4TSEL1                :1;
        unsigned                        :4;
        unsigned C7TSEL0                :1;
        unsigned C7TSEL1                :1;
    };
} CCPTMRS1bits_t;
extern volatile CCPTMRS1bits_t CCPTMRS1bits @ 0xF51;
// bitfield macros
#define _CCPTMRS1_C4TSEL_POSN                               0x0
#define _CCPTMRS1_C4TSEL_POSITION                           0x0
#define _CCPTMRS1_C4TSEL_SIZE                               0x2
#define _CCPTMRS1_C4TSEL_LENGTH                             0x2
#define _CCPTMRS1_C4TSEL_MASK                               0x3
#define _CCPTMRS1_C5TSEL0_POSN                              0x2
#define _CCPTMRS1_C5TSEL0_POSITION                          0x2
#define _CCPTMRS1_C5TSEL0_SIZE                              0x1
#define _CCPTMRS1_C5TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C5TSEL0_MASK                              0x4
#define _CCPTMRS1_C6TSEL0_POSN                              0x4
#define _CCPTMRS1_C6TSEL0_POSITION                          0x4
#define _CCPTMRS1_C6TSEL0_SIZE                              0x1
#define _CCPTMRS1_C6TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C6TSEL0_MASK                              0x10
#define _CCPTMRS1_C7TSEL_POSN                               0x6
#define _CCPTMRS1_C7TSEL_POSITION                           0x6
#define _CCPTMRS1_C7TSEL_SIZE                               0x2
#define _CCPTMRS1_C7TSEL_LENGTH                             0x2
#define _CCPTMRS1_C7TSEL_MASK                               0xC0
#define _CCPTMRS1_C4TSEL0_POSN                              0x0
#define _CCPTMRS1_C4TSEL0_POSITION                          0x0
#define _CCPTMRS1_C4TSEL0_SIZE                              0x1
#define _CCPTMRS1_C4TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C4TSEL0_MASK                              0x1
#define _CCPTMRS1_C4TSEL1_POSN                              0x1
#define _CCPTMRS1_C4TSEL1_POSITION                          0x1
#define _CCPTMRS1_C4TSEL1_SIZE                              0x1
#define _CCPTMRS1_C4TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C4TSEL1_MASK                              0x2
#define _CCPTMRS1_C7TSEL0_POSN                              0x6
#define _CCPTMRS1_C7TSEL0_POSITION                          0x6
#define _CCPTMRS1_C7TSEL0_SIZE                              0x1
#define _CCPTMRS1_C7TSEL0_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL0_MASK                              0x40
#define _CCPTMRS1_C7TSEL1_POSN                              0x7
#define _CCPTMRS1_C7TSEL1_POSITION                          0x7
#define _CCPTMRS1_C7TSEL1_SIZE                              0x1
#define _CCPTMRS1_C7TSEL1_LENGTH                            0x1
#define _CCPTMRS1_C7TSEL1_MASK                              0x80

// Register: CCPTMRS0
extern volatile unsigned char           CCPTMRS0            @ 0xF52;
#ifndef _LIB_BUILD
asm("CCPTMRS0 equ 0F52h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C1TSEL                 :3;
        unsigned C2TSEL                 :3;
        unsigned C3TSEL                 :2;
    };
    struct {
        unsigned C1TSEL0                :1;
        unsigned C1TSEL1                :1;
        unsigned C1TSEL2                :1;
        unsigned C2TSEL0                :1;
        unsigned C2TSEL1                :1;
        unsigned C2TSEL2                :1;
        unsigned C3TSEL0                :1;
        unsigned C3TSEL1                :1;
    };
} CCPTMRS0bits_t;
extern volatile CCPTMRS0bits_t CCPTMRS0bits @ 0xF52;
// bitfield macros
#define _CCPTMRS0_C1TSEL_POSN                               0x0
#define _CCPTMRS0_C1TSEL_POSITION                           0x0
#define _CCPTMRS0_C1TSEL_SIZE                               0x3
#define _CCPTMRS0_C1TSEL_LENGTH                             0x3
#define _CCPTMRS0_C1TSEL_MASK                               0x7
#define _CCPTMRS0_C2TSEL_POSN                               0x3
#define _CCPTMRS0_C2TSEL_POSITION                           0x3
#define _CCPTMRS0_C2TSEL_SIZE                               0x3
#define _CCPTMRS0_C2TSEL_LENGTH                             0x3
#define _CCPTMRS0_C2TSEL_MASK                               0x38
#define _CCPTMRS0_C3TSEL_POSN                               0x6
#define _CCPTMRS0_C3TSEL_POSITION                           0x6
#define _CCPTMRS0_C3TSEL_SIZE                               0x2
#define _CCPTMRS0_C3TSEL_LENGTH                             0x2
#define _CCPTMRS0_C3TSEL_MASK                               0xC0
#define _CCPTMRS0_C1TSEL0_POSN                              0x0
#define _CCPTMRS0_C1TSEL0_POSITION                          0x0
#define _CCPTMRS0_C1TSEL0_SIZE                              0x1
#define _CCPTMRS0_C1TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL0_MASK                              0x1
#define _CCPTMRS0_C1TSEL1_POSN                              0x1
#define _CCPTMRS0_C1TSEL1_POSITION                          0x1
#define _CCPTMRS0_C1TSEL1_SIZE                              0x1
#define _CCPTMRS0_C1TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL1_MASK                              0x2
#define _CCPTMRS0_C1TSEL2_POSN                              0x2
#define _CCPTMRS0_C1TSEL2_POSITION                          0x2
#define _CCPTMRS0_C1TSEL2_SIZE                              0x1
#define _CCPTMRS0_C1TSEL2_LENGTH                            0x1
#define _CCPTMRS0_C1TSEL2_MASK                              0x4
#define _CCPTMRS0_C2TSEL0_POSN                              0x3
#define _CCPTMRS0_C2TSEL0_POSITION                          0x3
#define _CCPTMRS0_C2TSEL0_SIZE                              0x1
#define _CCPTMRS0_C2TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL0_MASK                              0x8
#define _CCPTMRS0_C2TSEL1_POSN                              0x4
#define _CCPTMRS0_C2TSEL1_POSITION                          0x4
#define _CCPTMRS0_C2TSEL1_SIZE                              0x1
#define _CCPTMRS0_C2TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL1_MASK                              0x10
#define _CCPTMRS0_C2TSEL2_POSN                              0x5
#define _CCPTMRS0_C2TSEL2_POSITION                          0x5
#define _CCPTMRS0_C2TSEL2_SIZE                              0x1
#define _CCPTMRS0_C2TSEL2_LENGTH                            0x1
#define _CCPTMRS0_C2TSEL2_MASK                              0x20
#define _CCPTMRS0_C3TSEL0_POSN                              0x6
#define _CCPTMRS0_C3TSEL0_POSITION                          0x6
#define _CCPTMRS0_C3TSEL0_SIZE                              0x1
#define _CCPTMRS0_C3TSEL0_LENGTH                            0x1
#define _CCPTMRS0_C3TSEL0_MASK                              0x40
#define _CCPTMRS0_C3TSEL1_POSN                              0x7
#define _CCPTMRS0_C3TSEL1_POSITION                          0x7
#define _CCPTMRS0_C3TSEL1_SIZE                              0x1
#define _CCPTMRS0_C3TSEL1_LENGTH                            0x1
#define _CCPTMRS0_C3TSEL1_MASK                              0x80

// Register: CVRCON
extern volatile unsigned char           CVRCON              @ 0xF53;
#ifndef _LIB_BUILD
asm("CVRCON equ 0F53h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CVR                    :4;
        unsigned CVRSS                  :1;
        unsigned CVRR                   :1;
        unsigned CVROE                  :1;
        unsigned CVREN                  :1;
    };
    struct {
        unsigned CVR0                   :1;
        unsigned CVR1                   :1;
        unsigned CVR2                   :1;
        unsigned CVR3                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned CVROEN                 :1;
    };
} CVRCONbits_t;
extern volatile CVRCONbits_t CVRCONbits @ 0xF53;
// bitfield macros
#define _CVRCON_CVR_POSN                                    0x0
#define _CVRCON_CVR_POSITION                                0x0
#define _CVRCON_CVR_SIZE                                    0x4
#define _CVRCON_CVR_LENGTH                                  0x4
#define _CVRCON_CVR_MASK                                    0xF
#define _CVRCON_CVRSS_POSN                                  0x4
#define _CVRCON_CVRSS_POSITION                              0x4
#define _CVRCON_CVRSS_SIZE                                  0x1
#define _CVRCON_CVRSS_LENGTH                                0x1
#define _CVRCON_CVRSS_MASK                                  0x10
#define _CVRCON_CVRR_POSN                                   0x5
#define _CVRCON_CVRR_POSITION                               0x5
#define _CVRCON_CVRR_SIZE                                   0x1
#define _CVRCON_CVRR_LENGTH                                 0x1
#define _CVRCON_CVRR_MASK                                   0x20
#define _CVRCON_CVROE_POSN                                  0x6
#define _CVRCON_CVROE_POSITION                              0x6
#define _CVRCON_CVROE_SIZE                                  0x1
#define _CVRCON_CVROE_LENGTH                                0x1
#define _CVRCON_CVROE_MASK                                  0x40
#define _CVRCON_CVREN_POSN                                  0x7
#define _CVRCON_CVREN_POSITION                              0x7
#define _CVRCON_CVREN_SIZE                                  0x1
#define _CVRCON_CVREN_LENGTH                                0x1
#define _CVRCON_CVREN_MASK                                  0x80
#define _CVRCON_CVR0_POSN                                   0x0
#define _CVRCON_CVR0_POSITION                               0x0
#define _CVRCON_CVR0_SIZE                                   0x1
#define _CVRCON_CVR0_LENGTH                                 0x1
#define _CVRCON_CVR0_MASK                                   0x1
#define _CVRCON_CVR1_POSN                                   0x1
#define _CVRCON_CVR1_POSITION                               0x1
#define _CVRCON_CVR1_SIZE                                   0x1
#define _CVRCON_CVR1_LENGTH                                 0x1
#define _CVRCON_CVR1_MASK                                   0x2
#define _CVRCON_CVR2_POSN                                   0x2
#define _CVRCON_CVR2_POSITION                               0x2
#define _CVRCON_CVR2_SIZE                                   0x1
#define _CVRCON_CVR2_LENGTH                                 0x1
#define _CVRCON_CVR2_MASK                                   0x4
#define _CVRCON_CVR3_POSN                                   0x3
#define _CVRCON_CVR3_POSITION                               0x3
#define _CVRCON_CVR3_SIZE                                   0x1
#define _CVRCON_CVR3_LENGTH                                 0x1
#define _CVRCON_CVR3_MASK                                   0x8
#define _CVRCON_CVROEN_POSN                                 0x6
#define _CVRCON_CVROEN_POSITION                             0x6
#define _CVRCON_CVROEN_SIZE                                 0x1
#define _CVRCON_CVROEN_LENGTH                               0x1
#define _CVRCON_CVROEN_MASK                                 0x40

// Register: UFRM
extern volatile unsigned short          UFRM                @ 0xF60;
#ifndef _LIB_BUILD
asm("UFRM equ 0F60h");
#endif

// Register: UFRML
extern volatile unsigned char           UFRML               @ 0xF60;
#ifndef _LIB_BUILD
asm("UFRML equ 0F60h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FRM                    :8;
    };
    struct {
        unsigned FRM0                   :1;
        unsigned FRM1                   :1;
        unsigned FRM2                   :1;
        unsigned FRM3                   :1;
        unsigned FRM4                   :1;
        unsigned FRM5                   :1;
        unsigned FRM6                   :1;
        unsigned FRM7                   :1;
    };
    struct {
        unsigned FRML                   :8;
    };
} UFRMLbits_t;
extern volatile UFRMLbits_t UFRMLbits @ 0xF60;
// bitfield macros
#define _UFRML_FRM_POSN                                     0x0
#define _UFRML_FRM_POSITION                                 0x0
#define _UFRML_FRM_SIZE                                     0x8
#define _UFRML_FRM_LENGTH                                   0x8
#define _UFRML_FRM_MASK                                     0xFF
#define _UFRML_FRM0_POSN                                    0x0
#define _UFRML_FRM0_POSITION                                0x0
#define _UFRML_FRM0_SIZE                                    0x1
#define _UFRML_FRM0_LENGTH                                  0x1
#define _UFRML_FRM0_MASK                                    0x1
#define _UFRML_FRM1_POSN                                    0x1
#define _UFRML_FRM1_POSITION                                0x1
#define _UFRML_FRM1_SIZE                                    0x1
#define _UFRML_FRM1_LENGTH                                  0x1
#define _UFRML_FRM1_MASK                                    0x2
#define _UFRML_FRM2_POSN                                    0x2
#define _UFRML_FRM2_POSITION                                0x2
#define _UFRML_FRM2_SIZE                                    0x1
#define _UFRML_FRM2_LENGTH                                  0x1
#define _UFRML_FRM2_MASK                                    0x4
#define _UFRML_FRM3_POSN                                    0x3
#define _UFRML_FRM3_POSITION                                0x3
#define _UFRML_FRM3_SIZE                                    0x1
#define _UFRML_FRM3_LENGTH                                  0x1
#define _UFRML_FRM3_MASK                                    0x8
#define _UFRML_FRM4_POSN                                    0x4
#define _UFRML_FRM4_POSITION                                0x4
#define _UFRML_FRM4_SIZE                                    0x1
#define _UFRML_FRM4_LENGTH                                  0x1
#define _UFRML_FRM4_MASK                                    0x10
#define _UFRML_FRM5_POSN                                    0x5
#define _UFRML_FRM5_POSITION                                0x5
#define _UFRML_FRM5_SIZE                                    0x1
#define _UFRML_FRM5_LENGTH                                  0x1
#define _UFRML_FRM5_MASK                                    0x20
#define _UFRML_FRM6_POSN                                    0x6
#define _UFRML_FRM6_POSITION                                0x6
#define _UFRML_FRM6_SIZE                                    0x1
#define _UFRML_FRM6_LENGTH                                  0x1
#define _UFRML_FRM6_MASK                                    0x40
#define _UFRML_FRM7_POSN                                    0x7
#define _UFRML_FRM7_POSITION                                0x7
#define _UFRML_FRM7_SIZE                                    0x1
#define _UFRML_FRM7_LENGTH                                  0x1
#define _UFRML_FRM7_MASK                                    0x80
#define _UFRML_FRML_POSN                                    0x0
#define _UFRML_FRML_POSITION                                0x0
#define _UFRML_FRML_SIZE                                    0x8
#define _UFRML_FRML_LENGTH                                  0x8
#define _UFRML_FRML_MASK                                    0xFF

// Register: UFRMH
extern volatile unsigned char           UFRMH               @ 0xF61;
#ifndef _LIB_BUILD
asm("UFRMH equ 0F61h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FRM                    :3;
    };
    struct {
        unsigned FRM8                   :1;
        unsigned FRM9                   :1;
        unsigned FRM10                  :1;
    };
} UFRMHbits_t;
extern volatile UFRMHbits_t UFRMHbits @ 0xF61;
// bitfield macros
#define _UFRMH_FRM_POSN                                     0x0
#define _UFRMH_FRM_POSITION                                 0x0
#define _UFRMH_FRM_SIZE                                     0x3
#define _UFRMH_FRM_LENGTH                                   0x3
#define _UFRMH_FRM_MASK                                     0x7
#define _UFRMH_FRM8_POSN                                    0x0
#define _UFRMH_FRM8_POSITION                                0x0
#define _UFRMH_FRM8_SIZE                                    0x1
#define _UFRMH_FRM8_LENGTH                                  0x1
#define _UFRMH_FRM8_MASK                                    0x1
#define _UFRMH_FRM9_POSN                                    0x1
#define _UFRMH_FRM9_POSITION                                0x1
#define _UFRMH_FRM9_SIZE                                    0x1
#define _UFRMH_FRM9_LENGTH                                  0x1
#define _UFRMH_FRM9_MASK                                    0x2
#define _UFRMH_FRM10_POSN                                   0x2
#define _UFRMH_FRM10_POSITION                               0x2
#define _UFRMH_FRM10_SIZE                                   0x1
#define _UFRMH_FRM10_LENGTH                                 0x1
#define _UFRMH_FRM10_MASK                                   0x4

// Register: UIR
extern volatile unsigned char           UIR                 @ 0xF62;
#ifndef _LIB_BUILD
asm("UIR equ 0F62h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned URSTIF                 :1;
        unsigned UERRIF                 :1;
        unsigned ACTVIF                 :1;
        unsigned TRNIF                  :1;
        unsigned IDLEIF                 :1;
        unsigned STALLIF                :1;
        unsigned SOFIF                  :1;
    };
} UIRbits_t;
extern volatile UIRbits_t UIRbits @ 0xF62;
// bitfield macros
#define _UIR_URSTIF_POSN                                    0x0
#define _UIR_URSTIF_POSITION                                0x0
#define _UIR_URSTIF_SIZE                                    0x1
#define _UIR_URSTIF_LENGTH                                  0x1
#define _UIR_URSTIF_MASK                                    0x1
#define _UIR_UERRIF_POSN                                    0x1
#define _UIR_UERRIF_POSITION                                0x1
#define _UIR_UERRIF_SIZE                                    0x1
#define _UIR_UERRIF_LENGTH                                  0x1
#define _UIR_UERRIF_MASK                                    0x2
#define _UIR_ACTVIF_POSN                                    0x2
#define _UIR_ACTVIF_POSITION                                0x2
#define _UIR_ACTVIF_SIZE                                    0x1
#define _UIR_ACTVIF_LENGTH                                  0x1
#define _UIR_ACTVIF_MASK                                    0x4
#define _UIR_TRNIF_POSN                                     0x3
#define _UIR_TRNIF_POSITION                                 0x3
#define _UIR_TRNIF_SIZE                                     0x1
#define _UIR_TRNIF_LENGTH                                   0x1
#define _UIR_TRNIF_MASK                                     0x8
#define _UIR_IDLEIF_POSN                                    0x4
#define _UIR_IDLEIF_POSITION                                0x4
#define _UIR_IDLEIF_SIZE                                    0x1
#define _UIR_IDLEIF_LENGTH                                  0x1
#define _UIR_IDLEIF_MASK                                    0x10
#define _UIR_STALLIF_POSN                                   0x5
#define _UIR_STALLIF_POSITION                               0x5
#define _UIR_STALLIF_SIZE                                   0x1
#define _UIR_STALLIF_LENGTH                                 0x1
#define _UIR_STALLIF_MASK                                   0x20
#define _UIR_SOFIF_POSN                                     0x6
#define _UIR_SOFIF_POSITION                                 0x6
#define _UIR_SOFIF_SIZE                                     0x1
#define _UIR_SOFIF_LENGTH                                   0x1
#define _UIR_SOFIF_MASK                                     0x40

// Register: UEIR
extern volatile unsigned char           UEIR                @ 0xF63;
#ifndef _LIB_BUILD
asm("UEIR equ 0F63h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PIDEF                  :1;
        unsigned CRC5EF                 :1;
        unsigned CRC16EF                :1;
        unsigned DFN8EF                 :1;
        unsigned BTOEF                  :1;
        unsigned                        :2;
        unsigned BTSEF                  :1;
    };
} UEIRbits_t;
extern volatile UEIRbits_t UEIRbits @ 0xF63;
// bitfield macros
#define _UEIR_PIDEF_POSN                                    0x0
#define _UEIR_PIDEF_POSITION                                0x0
#define _UEIR_PIDEF_SIZE                                    0x1
#define _UEIR_PIDEF_LENGTH                                  0x1
#define _UEIR_PIDEF_MASK                                    0x1
#define _UEIR_CRC5EF_POSN                                   0x1
#define _UEIR_CRC5EF_POSITION                               0x1
#define _UEIR_CRC5EF_SIZE                                   0x1
#define _UEIR_CRC5EF_LENGTH                                 0x1
#define _UEIR_CRC5EF_MASK                                   0x2
#define _UEIR_CRC16EF_POSN                                  0x2
#define _UEIR_CRC16EF_POSITION                              0x2
#define _UEIR_CRC16EF_SIZE                                  0x1
#define _UEIR_CRC16EF_LENGTH                                0x1
#define _UEIR_CRC16EF_MASK                                  0x4
#define _UEIR_DFN8EF_POSN                                   0x3
#define _UEIR_DFN8EF_POSITION                               0x3
#define _UEIR_DFN8EF_SIZE                                   0x1
#define _UEIR_DFN8EF_LENGTH                                 0x1
#define _UEIR_DFN8EF_MASK                                   0x8
#define _UEIR_BTOEF_POSN                                    0x4
#define _UEIR_BTOEF_POSITION                                0x4
#define _UEIR_BTOEF_SIZE                                    0x1
#define _UEIR_BTOEF_LENGTH                                  0x1
#define _UEIR_BTOEF_MASK                                    0x10
#define _UEIR_BTSEF_POSN                                    0x7
#define _UEIR_BTSEF_POSITION                                0x7
#define _UEIR_BTSEF_SIZE                                    0x1
#define _UEIR_BTSEF_LENGTH                                  0x1
#define _UEIR_BTSEF_MASK                                    0x80

// Register: USTAT
extern volatile unsigned char           USTAT               @ 0xF64;
#ifndef _LIB_BUILD
asm("USTAT equ 0F64h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned PPBI                   :1;
        unsigned DIR                    :1;
        unsigned ENDP                   :4;
    };
    struct {
        unsigned                        :3;
        unsigned ENDP0                  :1;
        unsigned ENDP1                  :1;
        unsigned ENDP2                  :1;
        unsigned ENDP3                  :1;
    };
} USTATbits_t;
extern volatile USTATbits_t USTATbits @ 0xF64;
// bitfield macros
#define _USTAT_PPBI_POSN                                    0x1
#define _USTAT_PPBI_POSITION                                0x1
#define _USTAT_PPBI_SIZE                                    0x1
#define _USTAT_PPBI_LENGTH                                  0x1
#define _USTAT_PPBI_MASK                                    0x2
#define _USTAT_DIR_POSN                                     0x2
#define _USTAT_DIR_POSITION                                 0x2
#define _USTAT_DIR_SIZE                                     0x1
#define _USTAT_DIR_LENGTH                                   0x1
#define _USTAT_DIR_MASK                                     0x4
#define _USTAT_ENDP_POSN                                    0x3
#define _USTAT_ENDP_POSITION                                0x3
#define _USTAT_ENDP_SIZE                                    0x4
#define _USTAT_ENDP_LENGTH                                  0x4
#define _USTAT_ENDP_MASK                                    0x78
#define _USTAT_ENDP0_POSN                                   0x3
#define _USTAT_ENDP0_POSITION                               0x3
#define _USTAT_ENDP0_SIZE                                   0x1
#define _USTAT_ENDP0_LENGTH                                 0x1
#define _USTAT_ENDP0_MASK                                   0x8
#define _USTAT_ENDP1_POSN                                   0x4
#define _USTAT_ENDP1_POSITION                               0x4
#define _USTAT_ENDP1_SIZE                                   0x1
#define _USTAT_ENDP1_LENGTH                                 0x1
#define _USTAT_ENDP1_MASK                                   0x10
#define _USTAT_ENDP2_POSN                                   0x5
#define _USTAT_ENDP2_POSITION                               0x5
#define _USTAT_ENDP2_SIZE                                   0x1
#define _USTAT_ENDP2_LENGTH                                 0x1
#define _USTAT_ENDP2_MASK                                   0x20
#define _USTAT_ENDP3_POSN                                   0x6
#define _USTAT_ENDP3_POSITION                               0x6
#define _USTAT_ENDP3_SIZE                                   0x1
#define _USTAT_ENDP3_LENGTH                                 0x1
#define _USTAT_ENDP3_MASK                                   0x40

// Register: UCON
extern volatile unsigned char           UCON                @ 0xF65;
#ifndef _LIB_BUILD
asm("UCON equ 0F65h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned SUSPND                 :1;
        unsigned RESUME                 :1;
        unsigned USBEN                  :1;
        unsigned PKTDIS                 :1;
        unsigned SE0                    :1;
        unsigned PPBRST                 :1;
    };
} UCONbits_t;
extern volatile UCONbits_t UCONbits @ 0xF65;
// bitfield macros
#define _UCON_SUSPND_POSN                                   0x1
#define _UCON_SUSPND_POSITION                               0x1
#define _UCON_SUSPND_SIZE                                   0x1
#define _UCON_SUSPND_LENGTH                                 0x1
#define _UCON_SUSPND_MASK                                   0x2
#define _UCON_RESUME_POSN                                   0x2
#define _UCON_RESUME_POSITION                               0x2
#define _UCON_RESUME_SIZE                                   0x1
#define _UCON_RESUME_LENGTH                                 0x1
#define _UCON_RESUME_MASK                                   0x4
#define _UCON_USBEN_POSN                                    0x3
#define _UCON_USBEN_POSITION                                0x3
#define _UCON_USBEN_SIZE                                    0x1
#define _UCON_USBEN_LENGTH                                  0x1
#define _UCON_USBEN_MASK                                    0x8
#define _UCON_PKTDIS_POSN                                   0x4
#define _UCON_PKTDIS_POSITION                               0x4
#define _UCON_PKTDIS_SIZE                                   0x1
#define _UCON_PKTDIS_LENGTH                                 0x1
#define _UCON_PKTDIS_MASK                                   0x10
#define _UCON_SE0_POSN                                      0x5
#define _UCON_SE0_POSITION                                  0x5
#define _UCON_SE0_SIZE                                      0x1
#define _UCON_SE0_LENGTH                                    0x1
#define _UCON_SE0_MASK                                      0x20
#define _UCON_PPBRST_POSN                                   0x6
#define _UCON_PPBRST_POSITION                               0x6
#define _UCON_PPBRST_SIZE                                   0x1
#define _UCON_PPBRST_LENGTH                                 0x1
#define _UCON_PPBRST_MASK                                   0x40

// Register: DMABCH
extern volatile unsigned char           DMABCH              @ 0xF66;
#ifndef _LIB_BUILD
asm("DMABCH equ 0F66h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMACNTHB               :2;
    };
} DMABCHbits_t;
extern volatile DMABCHbits_t DMABCHbits @ 0xF66;
// bitfield macros
#define _DMABCH_DMACNTHB_POSN                               0x0
#define _DMABCH_DMACNTHB_POSITION                           0x0
#define _DMABCH_DMACNTHB_SIZE                               0x2
#define _DMABCH_DMACNTHB_LENGTH                             0x2
#define _DMABCH_DMACNTHB_MASK                               0x3

// Register: DMABCL
extern volatile unsigned char           DMABCL              @ 0xF67;
#ifndef _LIB_BUILD
asm("DMABCL equ 0F67h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMACNTLB               :8;
    };
} DMABCLbits_t;
extern volatile DMABCLbits_t DMABCLbits @ 0xF67;
// bitfield macros
#define _DMABCL_DMACNTLB_POSN                               0x0
#define _DMABCL_DMACNTLB_POSITION                           0x0
#define _DMABCL_DMACNTLB_SIZE                               0x8
#define _DMABCL_DMACNTLB_LENGTH                             0x8
#define _DMABCL_DMACNTLB_MASK                               0xFF

// Register: RXADDRH
extern volatile unsigned char           RXADDRH             @ 0xF68;
#ifndef _LIB_BUILD
asm("RXADDRH equ 0F68h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMARCVPTRHB            :4;
    };
} RXADDRHbits_t;
extern volatile RXADDRHbits_t RXADDRHbits @ 0xF68;
// bitfield macros
#define _RXADDRH_DMARCVPTRHB_POSN                           0x0
#define _RXADDRH_DMARCVPTRHB_POSITION                       0x0
#define _RXADDRH_DMARCVPTRHB_SIZE                           0x4
#define _RXADDRH_DMARCVPTRHB_LENGTH                         0x4
#define _RXADDRH_DMARCVPTRHB_MASK                           0xF

// Register: RXADDRL
extern volatile unsigned char           RXADDRL             @ 0xF69;
#ifndef _LIB_BUILD
asm("RXADDRL equ 0F69h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMARCVPTRLB            :8;
    };
} RXADDRLbits_t;
extern volatile RXADDRLbits_t RXADDRLbits @ 0xF69;
// bitfield macros
#define _RXADDRL_DMARCVPTRLB_POSN                           0x0
#define _RXADDRL_DMARCVPTRLB_POSITION                       0x0
#define _RXADDRL_DMARCVPTRLB_SIZE                           0x8
#define _RXADDRL_DMARCVPTRLB_LENGTH                         0x8
#define _RXADDRL_DMARCVPTRLB_MASK                           0xFF

// Register: TXADDRH
extern volatile unsigned char           TXADDRH             @ 0xF6A;
#ifndef _LIB_BUILD
asm("TXADDRH equ 0F6Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMATXPTRHB             :4;
    };
} TXADDRHbits_t;
extern volatile TXADDRHbits_t TXADDRHbits @ 0xF6A;
// bitfield macros
#define _TXADDRH_DMATXPTRHB_POSN                            0x0
#define _TXADDRH_DMATXPTRHB_POSITION                        0x0
#define _TXADDRH_DMATXPTRHB_SIZE                            0x4
#define _TXADDRH_DMATXPTRHB_LENGTH                          0x4
#define _TXADDRH_DMATXPTRHB_MASK                            0xF

// Register: TXADDRL
extern volatile unsigned char           TXADDRL             @ 0xF6B;
#ifndef _LIB_BUILD
asm("TXADDRL equ 0F6Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMATXPTRLB             :8;
    };
} TXADDRLbits_t;
extern volatile TXADDRLbits_t TXADDRLbits @ 0xF6B;
// bitfield macros
#define _TXADDRL_DMATXPTRLB_POSN                            0x0
#define _TXADDRL_DMATXPTRLB_POSITION                        0x0
#define _TXADDRL_DMATXPTRLB_SIZE                            0x8
#define _TXADDRL_DMATXPTRLB_LENGTH                          0x8
#define _TXADDRL_DMATXPTRLB_MASK                            0xFF

// Register: CMSTAT
extern volatile unsigned char           CMSTAT              @ 0xF70;
#ifndef _LIB_BUILD
asm("CMSTAT equ 0F70h");
#endif
// aliases
extern volatile unsigned char           CMSTATUS            @ 0xF70;
#ifndef _LIB_BUILD
asm("CMSTATUS equ 0F70h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned COUT1                  :1;
        unsigned COUT2                  :1;
        unsigned COUT3                  :1;
    };
} CMSTATbits_t;
extern volatile CMSTATbits_t CMSTATbits @ 0xF70;
// bitfield macros
#define _CMSTAT_COUT1_POSN                                  0x0
#define _CMSTAT_COUT1_POSITION                              0x0
#define _CMSTAT_COUT1_SIZE                                  0x1
#define _CMSTAT_COUT1_LENGTH                                0x1
#define _CMSTAT_COUT1_MASK                                  0x1
#define _CMSTAT_COUT2_POSN                                  0x1
#define _CMSTAT_COUT2_POSITION                              0x1
#define _CMSTAT_COUT2_SIZE                                  0x1
#define _CMSTAT_COUT2_LENGTH                                0x1
#define _CMSTAT_COUT2_MASK                                  0x2
#define _CMSTAT_COUT3_POSN                                  0x2
#define _CMSTAT_COUT3_POSITION                              0x2
#define _CMSTAT_COUT3_SIZE                                  0x1
#define _CMSTAT_COUT3_LENGTH                                0x1
#define _CMSTAT_COUT3_MASK                                  0x4
// alias bitfield definitions
typedef union {
    struct {
        unsigned COUT1                  :1;
        unsigned COUT2                  :1;
        unsigned COUT3                  :1;
    };
} CMSTATUSbits_t;
extern volatile CMSTATUSbits_t CMSTATUSbits @ 0xF70;
// bitfield macros
#define _CMSTATUS_COUT1_POSN                                0x0
#define _CMSTATUS_COUT1_POSITION                            0x0
#define _CMSTATUS_COUT1_SIZE                                0x1
#define _CMSTATUS_COUT1_LENGTH                              0x1
#define _CMSTATUS_COUT1_MASK                                0x1
#define _CMSTATUS_COUT2_POSN                                0x1
#define _CMSTATUS_COUT2_POSITION                            0x1
#define _CMSTATUS_COUT2_SIZE                                0x1
#define _CMSTATUS_COUT2_LENGTH                              0x1
#define _CMSTATUS_COUT2_MASK                                0x2
#define _CMSTATUS_COUT3_POSN                                0x2
#define _CMSTATUS_COUT3_POSITION                            0x2
#define _CMSTATUS_COUT3_SIZE                                0x1
#define _CMSTATUS_COUT3_LENGTH                              0x1
#define _CMSTATUS_COUT3_MASK                                0x4

// Register: SSP2CON2
extern volatile unsigned char           SSP2CON2            @ 0xF71;
#ifndef _LIB_BUILD
asm("SSP2CON2 equ 0F71h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned ACKDT2                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned ACKEN2                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned ACKSTAT2               :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK12                :1;
    };
    struct {
        unsigned                        :2;
        unsigned ADMSK22                :1;
    };
    struct {
        unsigned                        :3;
        unsigned ADMSK32                :1;
    };
    struct {
        unsigned                        :4;
        unsigned ADMSK42                :1;
    };
    struct {
        unsigned                        :5;
        unsigned ADMSK52                :1;
    };
    struct {
        unsigned                        :7;
        unsigned GCEN2                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned PEN2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned RCEN2                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN2                  :1;
    };
    struct {
        unsigned SEN2                   :1;
    };
} SSP2CON2bits_t;
extern volatile SSP2CON2bits_t SSP2CON2bits @ 0xF71;
// bitfield macros
#define _SSP2CON2_SEN_POSN                                  0x0
#define _SSP2CON2_SEN_POSITION                              0x0
#define _SSP2CON2_SEN_SIZE                                  0x1
#define _SSP2CON2_SEN_LENGTH                                0x1
#define _SSP2CON2_SEN_MASK                                  0x1
#define _SSP2CON2_RSEN_POSN                                 0x1
#define _SSP2CON2_RSEN_POSITION                             0x1
#define _SSP2CON2_RSEN_SIZE                                 0x1
#define _SSP2CON2_RSEN_LENGTH                               0x1
#define _SSP2CON2_RSEN_MASK                                 0x2
#define _SSP2CON2_PEN_POSN                                  0x2
#define _SSP2CON2_PEN_POSITION                              0x2
#define _SSP2CON2_PEN_SIZE                                  0x1
#define _SSP2CON2_PEN_LENGTH                                0x1
#define _SSP2CON2_PEN_MASK                                  0x4
#define _SSP2CON2_RCEN_POSN                                 0x3
#define _SSP2CON2_RCEN_POSITION                             0x3
#define _SSP2CON2_RCEN_SIZE                                 0x1
#define _SSP2CON2_RCEN_LENGTH                               0x1
#define _SSP2CON2_RCEN_MASK                                 0x8
#define _SSP2CON2_ACKEN_POSN                                0x4
#define _SSP2CON2_ACKEN_POSITION                            0x4
#define _SSP2CON2_ACKEN_SIZE                                0x1
#define _SSP2CON2_ACKEN_LENGTH                              0x1
#define _SSP2CON2_ACKEN_MASK                                0x10
#define _SSP2CON2_ACKDT_POSN                                0x5
#define _SSP2CON2_ACKDT_POSITION                            0x5
#define _SSP2CON2_ACKDT_SIZE                                0x1
#define _SSP2CON2_ACKDT_LENGTH                              0x1
#define _SSP2CON2_ACKDT_MASK                                0x20
#define _SSP2CON2_ACKSTAT_POSN                              0x6
#define _SSP2CON2_ACKSTAT_POSITION                          0x6
#define _SSP2CON2_ACKSTAT_SIZE                              0x1
#define _SSP2CON2_ACKSTAT_LENGTH                            0x1
#define _SSP2CON2_ACKSTAT_MASK                              0x40
#define _SSP2CON2_GCEN_POSN                                 0x7
#define _SSP2CON2_GCEN_POSITION                             0x7
#define _SSP2CON2_GCEN_SIZE                                 0x1
#define _SSP2CON2_GCEN_LENGTH                               0x1
#define _SSP2CON2_GCEN_MASK                                 0x80
#define _SSP2CON2_ADMSK1_POSN                               0x1
#define _SSP2CON2_ADMSK1_POSITION                           0x1
#define _SSP2CON2_ADMSK1_SIZE                               0x1
#define _SSP2CON2_ADMSK1_LENGTH                             0x1
#define _SSP2CON2_ADMSK1_MASK                               0x2
#define _SSP2CON2_ADMSK2_POSN                               0x2
#define _SSP2CON2_ADMSK2_POSITION                           0x2
#define _SSP2CON2_ADMSK2_SIZE                               0x1
#define _SSP2CON2_ADMSK2_LENGTH                             0x1
#define _SSP2CON2_ADMSK2_MASK                               0x4
#define _SSP2CON2_ADMSK3_POSN                               0x3
#define _SSP2CON2_ADMSK3_POSITION                           0x3
#define _SSP2CON2_ADMSK3_SIZE                               0x1
#define _SSP2CON2_ADMSK3_LENGTH                             0x1
#define _SSP2CON2_ADMSK3_MASK                               0x8
#define _SSP2CON2_ADMSK4_POSN                               0x4
#define _SSP2CON2_ADMSK4_POSITION                           0x4
#define _SSP2CON2_ADMSK4_SIZE                               0x1
#define _SSP2CON2_ADMSK4_LENGTH                             0x1
#define _SSP2CON2_ADMSK4_MASK                               0x10
#define _SSP2CON2_ADMSK5_POSN                               0x5
#define _SSP2CON2_ADMSK5_POSITION                           0x5
#define _SSP2CON2_ADMSK5_SIZE                               0x1
#define _SSP2CON2_ADMSK5_LENGTH                             0x1
#define _SSP2CON2_ADMSK5_MASK                               0x20
#define _SSP2CON2_ACKDT2_POSN                               0x5
#define _SSP2CON2_ACKDT2_POSITION                           0x5
#define _SSP2CON2_ACKDT2_SIZE                               0x1
#define _SSP2CON2_ACKDT2_LENGTH                             0x1
#define _SSP2CON2_ACKDT2_MASK                               0x20
#define _SSP2CON2_ACKEN2_POSN                               0x4
#define _SSP2CON2_ACKEN2_POSITION                           0x4
#define _SSP2CON2_ACKEN2_SIZE                               0x1
#define _SSP2CON2_ACKEN2_LENGTH                             0x1
#define _SSP2CON2_ACKEN2_MASK                               0x10
#define _SSP2CON2_ACKSTAT2_POSN                             0x6
#define _SSP2CON2_ACKSTAT2_POSITION                         0x6
#define _SSP2CON2_ACKSTAT2_SIZE                             0x1
#define _SSP2CON2_ACKSTAT2_LENGTH                           0x1
#define _SSP2CON2_ACKSTAT2_MASK                             0x40
#define _SSP2CON2_ADMSK12_POSN                              0x1
#define _SSP2CON2_ADMSK12_POSITION                          0x1
#define _SSP2CON2_ADMSK12_SIZE                              0x1
#define _SSP2CON2_ADMSK12_LENGTH                            0x1
#define _SSP2CON2_ADMSK12_MASK                              0x2
#define _SSP2CON2_ADMSK22_POSN                              0x2
#define _SSP2CON2_ADMSK22_POSITION                          0x2
#define _SSP2CON2_ADMSK22_SIZE                              0x1
#define _SSP2CON2_ADMSK22_LENGTH                            0x1
#define _SSP2CON2_ADMSK22_MASK                              0x4
#define _SSP2CON2_ADMSK32_POSN                              0x3
#define _SSP2CON2_ADMSK32_POSITION                          0x3
#define _SSP2CON2_ADMSK32_SIZE                              0x1
#define _SSP2CON2_ADMSK32_LENGTH                            0x1
#define _SSP2CON2_ADMSK32_MASK                              0x8
#define _SSP2CON2_ADMSK42_POSN                              0x4
#define _SSP2CON2_ADMSK42_POSITION                          0x4
#define _SSP2CON2_ADMSK42_SIZE                              0x1
#define _SSP2CON2_ADMSK42_LENGTH                            0x1
#define _SSP2CON2_ADMSK42_MASK                              0x10
#define _SSP2CON2_ADMSK52_POSN                              0x5
#define _SSP2CON2_ADMSK52_POSITION                          0x5
#define _SSP2CON2_ADMSK52_SIZE                              0x1
#define _SSP2CON2_ADMSK52_LENGTH                            0x1
#define _SSP2CON2_ADMSK52_MASK                              0x20
#define _SSP2CON2_GCEN2_POSN                                0x7
#define _SSP2CON2_GCEN2_POSITION                            0x7
#define _SSP2CON2_GCEN2_SIZE                                0x1
#define _SSP2CON2_GCEN2_LENGTH                              0x1
#define _SSP2CON2_GCEN2_MASK                                0x80
#define _SSP2CON2_PEN2_POSN                                 0x2
#define _SSP2CON2_PEN2_POSITION                             0x2
#define _SSP2CON2_PEN2_SIZE                                 0x1
#define _SSP2CON2_PEN2_LENGTH                               0x1
#define _SSP2CON2_PEN2_MASK                                 0x4
#define _SSP2CON2_RCEN2_POSN                                0x3
#define _SSP2CON2_RCEN2_POSITION                            0x3
#define _SSP2CON2_RCEN2_SIZE                                0x1
#define _SSP2CON2_RCEN2_LENGTH                              0x1
#define _SSP2CON2_RCEN2_MASK                                0x8
#define _SSP2CON2_RSEN2_POSN                                0x1
#define _SSP2CON2_RSEN2_POSITION                            0x1
#define _SSP2CON2_RSEN2_SIZE                                0x1
#define _SSP2CON2_RSEN2_LENGTH                              0x1
#define _SSP2CON2_RSEN2_MASK                                0x2
#define _SSP2CON2_SEN2_POSN                                 0x0
#define _SSP2CON2_SEN2_POSITION                             0x0
#define _SSP2CON2_SEN2_SIZE                                 0x1
#define _SSP2CON2_SEN2_LENGTH                               0x1
#define _SSP2CON2_SEN2_MASK                                 0x1

// Register: SSP2CON1
extern volatile unsigned char           SSP2CON1            @ 0xF72;
#ifndef _LIB_BUILD
asm("SSP2CON1 equ 0F72h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKP2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SSPEN2                 :1;
    };
    struct {
        unsigned SSPM02                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned SSPM12                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned SSPM22                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPM32                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned SSPOV2                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned WCOL2                  :1;
    };
} SSP2CON1bits_t;
extern volatile SSP2CON1bits_t SSP2CON1bits @ 0xF72;
// bitfield macros
#define _SSP2CON1_SSPM_POSN                                 0x0
#define _SSP2CON1_SSPM_POSITION                             0x0
#define _SSP2CON1_SSPM_SIZE                                 0x4
#define _SSP2CON1_SSPM_LENGTH                               0x4
#define _SSP2CON1_SSPM_MASK                                 0xF
#define _SSP2CON1_CKP_POSN                                  0x4
#define _SSP2CON1_CKP_POSITION                              0x4
#define _SSP2CON1_CKP_SIZE                                  0x1
#define _SSP2CON1_CKP_LENGTH                                0x1
#define _SSP2CON1_CKP_MASK                                  0x10
#define _SSP2CON1_SSPEN_POSN                                0x5
#define _SSP2CON1_SSPEN_POSITION                            0x5
#define _SSP2CON1_SSPEN_SIZE                                0x1
#define _SSP2CON1_SSPEN_LENGTH                              0x1
#define _SSP2CON1_SSPEN_MASK                                0x20
#define _SSP2CON1_SSPOV_POSN                                0x6
#define _SSP2CON1_SSPOV_POSITION                            0x6
#define _SSP2CON1_SSPOV_SIZE                                0x1
#define _SSP2CON1_SSPOV_LENGTH                              0x1
#define _SSP2CON1_SSPOV_MASK                                0x40
#define _SSP2CON1_WCOL_POSN                                 0x7
#define _SSP2CON1_WCOL_POSITION                             0x7
#define _SSP2CON1_WCOL_SIZE                                 0x1
#define _SSP2CON1_WCOL_LENGTH                               0x1
#define _SSP2CON1_WCOL_MASK                                 0x80
#define _SSP2CON1_SSPM0_POSN                                0x0
#define _SSP2CON1_SSPM0_POSITION                            0x0
#define _SSP2CON1_SSPM0_SIZE                                0x1
#define _SSP2CON1_SSPM0_LENGTH                              0x1
#define _SSP2CON1_SSPM0_MASK                                0x1
#define _SSP2CON1_SSPM1_POSN                                0x1
#define _SSP2CON1_SSPM1_POSITION                            0x1
#define _SSP2CON1_SSPM1_SIZE                                0x1
#define _SSP2CON1_SSPM1_LENGTH                              0x1
#define _SSP2CON1_SSPM1_MASK                                0x2
#define _SSP2CON1_SSPM2_POSN                                0x2
#define _SSP2CON1_SSPM2_POSITION                            0x2
#define _SSP2CON1_SSPM2_SIZE                                0x1
#define _SSP2CON1_SSPM2_LENGTH                              0x1
#define _SSP2CON1_SSPM2_MASK                                0x4
#define _SSP2CON1_SSPM3_POSN                                0x3
#define _SSP2CON1_SSPM3_POSITION                            0x3
#define _SSP2CON1_SSPM3_SIZE                                0x1
#define _SSP2CON1_SSPM3_LENGTH                              0x1
#define _SSP2CON1_SSPM3_MASK                                0x8
#define _SSP2CON1_CKP2_POSN                                 0x4
#define _SSP2CON1_CKP2_POSITION                             0x4
#define _SSP2CON1_CKP2_SIZE                                 0x1
#define _SSP2CON1_CKP2_LENGTH                               0x1
#define _SSP2CON1_CKP2_MASK                                 0x10
#define _SSP2CON1_SSPEN2_POSN                               0x5
#define _SSP2CON1_SSPEN2_POSITION                           0x5
#define _SSP2CON1_SSPEN2_SIZE                               0x1
#define _SSP2CON1_SSPEN2_LENGTH                             0x1
#define _SSP2CON1_SSPEN2_MASK                               0x20
#define _SSP2CON1_SSPM02_POSN                               0x0
#define _SSP2CON1_SSPM02_POSITION                           0x0
#define _SSP2CON1_SSPM02_SIZE                               0x1
#define _SSP2CON1_SSPM02_LENGTH                             0x1
#define _SSP2CON1_SSPM02_MASK                               0x1
#define _SSP2CON1_SSPM12_POSN                               0x1
#define _SSP2CON1_SSPM12_POSITION                           0x1
#define _SSP2CON1_SSPM12_SIZE                               0x1
#define _SSP2CON1_SSPM12_LENGTH                             0x1
#define _SSP2CON1_SSPM12_MASK                               0x2
#define _SSP2CON1_SSPM22_POSN                               0x2
#define _SSP2CON1_SSPM22_POSITION                           0x2
#define _SSP2CON1_SSPM22_SIZE                               0x1
#define _SSP2CON1_SSPM22_LENGTH                             0x1
#define _SSP2CON1_SSPM22_MASK                               0x4
#define _SSP2CON1_SSPM32_POSN                               0x3
#define _SSP2CON1_SSPM32_POSITION                           0x3
#define _SSP2CON1_SSPM32_SIZE                               0x1
#define _SSP2CON1_SSPM32_LENGTH                             0x1
#define _SSP2CON1_SSPM32_MASK                               0x8
#define _SSP2CON1_SSPOV2_POSN                               0x6
#define _SSP2CON1_SSPOV2_POSITION                           0x6
#define _SSP2CON1_SSPOV2_SIZE                               0x1
#define _SSP2CON1_SSPOV2_LENGTH                             0x1
#define _SSP2CON1_SSPOV2_MASK                               0x40
#define _SSP2CON1_WCOL2_POSN                                0x7
#define _SSP2CON1_WCOL2_POSITION                            0x7
#define _SSP2CON1_WCOL2_SIZE                                0x1
#define _SSP2CON1_WCOL2_LENGTH                              0x1
#define _SSP2CON1_WCOL2_MASK                                0x80

// Register: SSP2STAT
extern volatile unsigned char           SSP2STAT            @ 0xF73;
#ifndef _LIB_BUILD
asm("SSP2STAT equ 0F73h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned BF2                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned CKE2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned DA2                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned DATA_ADDRESS2          :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_A2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_nA2                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned I2C_DAT2               :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ2              :1;
    };
    struct {
        unsigned                        :3;
        unsigned I2C_START2             :1;
    };
    struct {
        unsigned                        :4;
        unsigned I2C_STOP2              :1;
    };
    struct {
        unsigned                        :4;
        unsigned P2                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE2            :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW2                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_nW2                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned S2                     :1;
    };
    struct {
        unsigned                        :7;
        unsigned SMP2                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned START2                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned STOP2                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned UA2                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned nA2                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned nADDRESS2              :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW2                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE2                :1;
    };
} SSP2STATbits_t;
extern volatile SSP2STATbits_t SSP2STATbits @ 0xF73;
// bitfield macros
#define _SSP2STAT_R_NOT_W_POSN                              0x2
#define _SSP2STAT_R_NOT_W_POSITION                          0x2
#define _SSP2STAT_R_NOT_W_SIZE                              0x1
#define _SSP2STAT_R_NOT_W_LENGTH                            0x1
#define _SSP2STAT_R_NOT_W_MASK                              0x4
#define _SSP2STAT_D_NOT_A_POSN                              0x5
#define _SSP2STAT_D_NOT_A_POSITION                          0x5
#define _SSP2STAT_D_NOT_A_SIZE                              0x1
#define _SSP2STAT_D_NOT_A_LENGTH                            0x1
#define _SSP2STAT_D_NOT_A_MASK                              0x20
#define _SSP2STAT_BF_POSN                                   0x0
#define _SSP2STAT_BF_POSITION                               0x0
#define _SSP2STAT_BF_SIZE                                   0x1
#define _SSP2STAT_BF_LENGTH                                 0x1
#define _SSP2STAT_BF_MASK                                   0x1
#define _SSP2STAT_UA_POSN                                   0x1
#define _SSP2STAT_UA_POSITION                               0x1
#define _SSP2STAT_UA_SIZE                                   0x1
#define _SSP2STAT_UA_LENGTH                                 0x1
#define _SSP2STAT_UA_MASK                                   0x2
#define _SSP2STAT_R_nW_POSN                                 0x2
#define _SSP2STAT_R_nW_POSITION                             0x2
#define _SSP2STAT_R_nW_SIZE                                 0x1
#define _SSP2STAT_R_nW_LENGTH                               0x1
#define _SSP2STAT_R_nW_MASK                                 0x4
#define _SSP2STAT_S_POSN                                    0x3
#define _SSP2STAT_S_POSITION                                0x3
#define _SSP2STAT_S_SIZE                                    0x1
#define _SSP2STAT_S_LENGTH                                  0x1
#define _SSP2STAT_S_MASK                                    0x8
#define _SSP2STAT_P_POSN                                    0x4
#define _SSP2STAT_P_POSITION                                0x4
#define _SSP2STAT_P_SIZE                                    0x1
#define _SSP2STAT_P_LENGTH                                  0x1
#define _SSP2STAT_P_MASK                                    0x10
#define _SSP2STAT_D_nA_POSN                                 0x5
#define _SSP2STAT_D_nA_POSITION                             0x5
#define _SSP2STAT_D_nA_SIZE                                 0x1
#define _SSP2STAT_D_nA_LENGTH                               0x1
#define _SSP2STAT_D_nA_MASK                                 0x20
#define _SSP2STAT_CKE_POSN                                  0x6
#define _SSP2STAT_CKE_POSITION                              0x6
#define _SSP2STAT_CKE_SIZE                                  0x1
#define _SSP2STAT_CKE_LENGTH                                0x1
#define _SSP2STAT_CKE_MASK                                  0x40
#define _SSP2STAT_SMP_POSN                                  0x7
#define _SSP2STAT_SMP_POSITION                              0x7
#define _SSP2STAT_SMP_SIZE                                  0x1
#define _SSP2STAT_SMP_LENGTH                                0x1
#define _SSP2STAT_SMP_MASK                                  0x80
#define _SSP2STAT_BF2_POSN                                  0x0
#define _SSP2STAT_BF2_POSITION                              0x0
#define _SSP2STAT_BF2_SIZE                                  0x1
#define _SSP2STAT_BF2_LENGTH                                0x1
#define _SSP2STAT_BF2_MASK                                  0x1
#define _SSP2STAT_CKE2_POSN                                 0x6
#define _SSP2STAT_CKE2_POSITION                             0x6
#define _SSP2STAT_CKE2_SIZE                                 0x1
#define _SSP2STAT_CKE2_LENGTH                               0x1
#define _SSP2STAT_CKE2_MASK                                 0x40
#define _SSP2STAT_DA2_POSN                                  0x5
#define _SSP2STAT_DA2_POSITION                              0x5
#define _SSP2STAT_DA2_SIZE                                  0x1
#define _SSP2STAT_DA2_LENGTH                                0x1
#define _SSP2STAT_DA2_MASK                                  0x20
#define _SSP2STAT_DATA_ADDRESS2_POSN                        0x5
#define _SSP2STAT_DATA_ADDRESS2_POSITION                    0x5
#define _SSP2STAT_DATA_ADDRESS2_SIZE                        0x1
#define _SSP2STAT_DATA_ADDRESS2_LENGTH                      0x1
#define _SSP2STAT_DATA_ADDRESS2_MASK                        0x20
#define _SSP2STAT_D_A2_POSN                                 0x5
#define _SSP2STAT_D_A2_POSITION                             0x5
#define _SSP2STAT_D_A2_SIZE                                 0x1
#define _SSP2STAT_D_A2_LENGTH                               0x1
#define _SSP2STAT_D_A2_MASK                                 0x20
#define _SSP2STAT_D_nA2_POSN                                0x5
#define _SSP2STAT_D_nA2_POSITION                            0x5
#define _SSP2STAT_D_nA2_SIZE                                0x1
#define _SSP2STAT_D_nA2_LENGTH                              0x1
#define _SSP2STAT_D_nA2_MASK                                0x20
#define _SSP2STAT_I2C_DAT2_POSN                             0x5
#define _SSP2STAT_I2C_DAT2_POSITION                         0x5
#define _SSP2STAT_I2C_DAT2_SIZE                             0x1
#define _SSP2STAT_I2C_DAT2_LENGTH                           0x1
#define _SSP2STAT_I2C_DAT2_MASK                             0x20
#define _SSP2STAT_I2C_READ2_POSN                            0x2
#define _SSP2STAT_I2C_READ2_POSITION                        0x2
#define _SSP2STAT_I2C_READ2_SIZE                            0x1
#define _SSP2STAT_I2C_READ2_LENGTH                          0x1
#define _SSP2STAT_I2C_READ2_MASK                            0x4
#define _SSP2STAT_I2C_START2_POSN                           0x3
#define _SSP2STAT_I2C_START2_POSITION                       0x3
#define _SSP2STAT_I2C_START2_SIZE                           0x1
#define _SSP2STAT_I2C_START2_LENGTH                         0x1
#define _SSP2STAT_I2C_START2_MASK                           0x8
#define _SSP2STAT_I2C_STOP2_POSN                            0x4
#define _SSP2STAT_I2C_STOP2_POSITION                        0x4
#define _SSP2STAT_I2C_STOP2_SIZE                            0x1
#define _SSP2STAT_I2C_STOP2_LENGTH                          0x1
#define _SSP2STAT_I2C_STOP2_MASK                            0x10
#define _SSP2STAT_P2_POSN                                   0x4
#define _SSP2STAT_P2_POSITION                               0x4
#define _SSP2STAT_P2_SIZE                                   0x1
#define _SSP2STAT_P2_LENGTH                                 0x1
#define _SSP2STAT_P2_MASK                                   0x10
#define _SSP2STAT_READ_WRITE2_POSN                          0x2
#define _SSP2STAT_READ_WRITE2_POSITION                      0x2
#define _SSP2STAT_READ_WRITE2_SIZE                          0x1
#define _SSP2STAT_READ_WRITE2_LENGTH                        0x1
#define _SSP2STAT_READ_WRITE2_MASK                          0x4
#define _SSP2STAT_RW2_POSN                                  0x2
#define _SSP2STAT_RW2_POSITION                              0x2
#define _SSP2STAT_RW2_SIZE                                  0x1
#define _SSP2STAT_RW2_LENGTH                                0x1
#define _SSP2STAT_RW2_MASK                                  0x4
#define _SSP2STAT_R_W2_POSN                                 0x2
#define _SSP2STAT_R_W2_POSITION                             0x2
#define _SSP2STAT_R_W2_SIZE                                 0x1
#define _SSP2STAT_R_W2_LENGTH                               0x1
#define _SSP2STAT_R_W2_MASK                                 0x4
#define _SSP2STAT_R_nW2_POSN                                0x2
#define _SSP2STAT_R_nW2_POSITION                            0x2
#define _SSP2STAT_R_nW2_SIZE                                0x1
#define _SSP2STAT_R_nW2_LENGTH                              0x1
#define _SSP2STAT_R_nW2_MASK                                0x4
#define _SSP2STAT_S2_POSN                                   0x3
#define _SSP2STAT_S2_POSITION                               0x3
#define _SSP2STAT_S2_SIZE                                   0x1
#define _SSP2STAT_S2_LENGTH                                 0x1
#define _SSP2STAT_S2_MASK                                   0x8
#define _SSP2STAT_SMP2_POSN                                 0x7
#define _SSP2STAT_SMP2_POSITION                             0x7
#define _SSP2STAT_SMP2_SIZE                                 0x1
#define _SSP2STAT_SMP2_LENGTH                               0x1
#define _SSP2STAT_SMP2_MASK                                 0x80
#define _SSP2STAT_START2_POSN                               0x3
#define _SSP2STAT_START2_POSITION                           0x3
#define _SSP2STAT_START2_SIZE                               0x1
#define _SSP2STAT_START2_LENGTH                             0x1
#define _SSP2STAT_START2_MASK                               0x8
#define _SSP2STAT_STOP2_POSN                                0x4
#define _SSP2STAT_STOP2_POSITION                            0x4
#define _SSP2STAT_STOP2_SIZE                                0x1
#define _SSP2STAT_STOP2_LENGTH                              0x1
#define _SSP2STAT_STOP2_MASK                                0x10
#define _SSP2STAT_UA2_POSN                                  0x1
#define _SSP2STAT_UA2_POSITION                              0x1
#define _SSP2STAT_UA2_SIZE                                  0x1
#define _SSP2STAT_UA2_LENGTH                                0x1
#define _SSP2STAT_UA2_MASK                                  0x2
#define _SSP2STAT_nA2_POSN                                  0x5
#define _SSP2STAT_nA2_POSITION                              0x5
#define _SSP2STAT_nA2_SIZE                                  0x1
#define _SSP2STAT_nA2_LENGTH                                0x1
#define _SSP2STAT_nA2_MASK                                  0x20
#define _SSP2STAT_nADDRESS2_POSN                            0x5
#define _SSP2STAT_nADDRESS2_POSITION                        0x5
#define _SSP2STAT_nADDRESS2_SIZE                            0x1
#define _SSP2STAT_nADDRESS2_LENGTH                          0x1
#define _SSP2STAT_nADDRESS2_MASK                            0x20
#define _SSP2STAT_nW2_POSN                                  0x2
#define _SSP2STAT_nW2_POSITION                              0x2
#define _SSP2STAT_nW2_SIZE                                  0x1
#define _SSP2STAT_nW2_LENGTH                                0x1
#define _SSP2STAT_nW2_MASK                                  0x4
#define _SSP2STAT_nWRITE2_POSN                              0x2
#define _SSP2STAT_nWRITE2_POSITION                          0x2
#define _SSP2STAT_nWRITE2_SIZE                              0x1
#define _SSP2STAT_nWRITE2_LENGTH                            0x1
#define _SSP2STAT_nWRITE2_MASK                              0x4

// Register: SSP2ADD
extern volatile unsigned char           SSP2ADD             @ 0xF74;
#ifndef _LIB_BUILD
asm("SSP2ADD equ 0F74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPADD                 :8;
    };
    struct {
        unsigned MSK02                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned MSK12                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned MSK22                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned MSK32                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned MSK42                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned MSK52                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned MSK62                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned MSK72                  :1;
    };
} SSP2ADDbits_t;
extern volatile SSP2ADDbits_t SSP2ADDbits @ 0xF74;
// bitfield macros
#define _SSP2ADD_SSPADD_POSN                                0x0
#define _SSP2ADD_SSPADD_POSITION                            0x0
#define _SSP2ADD_SSPADD_SIZE                                0x8
#define _SSP2ADD_SSPADD_LENGTH                              0x8
#define _SSP2ADD_SSPADD_MASK                                0xFF
#define _SSP2ADD_MSK02_POSN                                 0x0
#define _SSP2ADD_MSK02_POSITION                             0x0
#define _SSP2ADD_MSK02_SIZE                                 0x1
#define _SSP2ADD_MSK02_LENGTH                               0x1
#define _SSP2ADD_MSK02_MASK                                 0x1
#define _SSP2ADD_MSK12_POSN                                 0x1
#define _SSP2ADD_MSK12_POSITION                             0x1
#define _SSP2ADD_MSK12_SIZE                                 0x1
#define _SSP2ADD_MSK12_LENGTH                               0x1
#define _SSP2ADD_MSK12_MASK                                 0x2
#define _SSP2ADD_MSK22_POSN                                 0x2
#define _SSP2ADD_MSK22_POSITION                             0x2
#define _SSP2ADD_MSK22_SIZE                                 0x1
#define _SSP2ADD_MSK22_LENGTH                               0x1
#define _SSP2ADD_MSK22_MASK                                 0x4
#define _SSP2ADD_MSK32_POSN                                 0x3
#define _SSP2ADD_MSK32_POSITION                             0x3
#define _SSP2ADD_MSK32_SIZE                                 0x1
#define _SSP2ADD_MSK32_LENGTH                               0x1
#define _SSP2ADD_MSK32_MASK                                 0x8
#define _SSP2ADD_MSK42_POSN                                 0x4
#define _SSP2ADD_MSK42_POSITION                             0x4
#define _SSP2ADD_MSK42_SIZE                                 0x1
#define _SSP2ADD_MSK42_LENGTH                               0x1
#define _SSP2ADD_MSK42_MASK                                 0x10
#define _SSP2ADD_MSK52_POSN                                 0x5
#define _SSP2ADD_MSK52_POSITION                             0x5
#define _SSP2ADD_MSK52_SIZE                                 0x1
#define _SSP2ADD_MSK52_LENGTH                               0x1
#define _SSP2ADD_MSK52_MASK                                 0x20
#define _SSP2ADD_MSK62_POSN                                 0x6
#define _SSP2ADD_MSK62_POSITION                             0x6
#define _SSP2ADD_MSK62_SIZE                                 0x1
#define _SSP2ADD_MSK62_LENGTH                               0x1
#define _SSP2ADD_MSK62_MASK                                 0x40
#define _SSP2ADD_MSK72_POSN                                 0x7
#define _SSP2ADD_MSK72_POSITION                             0x7
#define _SSP2ADD_MSK72_SIZE                                 0x1
#define _SSP2ADD_MSK72_LENGTH                               0x1
#define _SSP2ADD_MSK72_MASK                                 0x80

// Register: SSP2MSK
extern volatile unsigned char           SSP2MSK             @ 0xF74;
#ifndef _LIB_BUILD
asm("SSP2MSK equ 0F74h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
} SSP2MSKbits_t;
extern volatile SSP2MSKbits_t SSP2MSKbits @ 0xF74;
// bitfield macros
#define _SSP2MSK_MSK0_POSN                                  0x0
#define _SSP2MSK_MSK0_POSITION                              0x0
#define _SSP2MSK_MSK0_SIZE                                  0x1
#define _SSP2MSK_MSK0_LENGTH                                0x1
#define _SSP2MSK_MSK0_MASK                                  0x1
#define _SSP2MSK_MSK1_POSN                                  0x1
#define _SSP2MSK_MSK1_POSITION                              0x1
#define _SSP2MSK_MSK1_SIZE                                  0x1
#define _SSP2MSK_MSK1_LENGTH                                0x1
#define _SSP2MSK_MSK1_MASK                                  0x2
#define _SSP2MSK_MSK2_POSN                                  0x2
#define _SSP2MSK_MSK2_POSITION                              0x2
#define _SSP2MSK_MSK2_SIZE                                  0x1
#define _SSP2MSK_MSK2_LENGTH                                0x1
#define _SSP2MSK_MSK2_MASK                                  0x4
#define _SSP2MSK_MSK3_POSN                                  0x3
#define _SSP2MSK_MSK3_POSITION                              0x3
#define _SSP2MSK_MSK3_SIZE                                  0x1
#define _SSP2MSK_MSK3_LENGTH                                0x1
#define _SSP2MSK_MSK3_MASK                                  0x8
#define _SSP2MSK_MSK4_POSN                                  0x4
#define _SSP2MSK_MSK4_POSITION                              0x4
#define _SSP2MSK_MSK4_SIZE                                  0x1
#define _SSP2MSK_MSK4_LENGTH                                0x1
#define _SSP2MSK_MSK4_MASK                                  0x10
#define _SSP2MSK_MSK5_POSN                                  0x5
#define _SSP2MSK_MSK5_POSITION                              0x5
#define _SSP2MSK_MSK5_SIZE                                  0x1
#define _SSP2MSK_MSK5_LENGTH                                0x1
#define _SSP2MSK_MSK5_MASK                                  0x20
#define _SSP2MSK_MSK6_POSN                                  0x6
#define _SSP2MSK_MSK6_POSITION                              0x6
#define _SSP2MSK_MSK6_SIZE                                  0x1
#define _SSP2MSK_MSK6_LENGTH                                0x1
#define _SSP2MSK_MSK6_MASK                                  0x40
#define _SSP2MSK_MSK7_POSN                                  0x7
#define _SSP2MSK_MSK7_POSITION                              0x7
#define _SSP2MSK_MSK7_SIZE                                  0x1
#define _SSP2MSK_MSK7_LENGTH                                0x1
#define _SSP2MSK_MSK7_MASK                                  0x80

// Register: SSP2BUF
extern volatile unsigned char           SSP2BUF             @ 0xF75;
#ifndef _LIB_BUILD
asm("SSP2BUF equ 0F75h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPBUF                 :8;
    };
} SSP2BUFbits_t;
extern volatile SSP2BUFbits_t SSP2BUFbits @ 0xF75;
// bitfield macros
#define _SSP2BUF_SSPBUF_POSN                                0x0
#define _SSP2BUF_SSPBUF_POSITION                            0x0
#define _SSP2BUF_SSPBUF_SIZE                                0x8
#define _SSP2BUF_SSPBUF_LENGTH                              0x8
#define _SSP2BUF_SSPBUF_MASK                                0xFF

// Register: T4CON
extern volatile unsigned char           T4CON               @ 0xF76;
#ifndef _LIB_BUILD
asm("T4CON equ 0F76h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T4CKPS                 :2;
        unsigned TMR4ON                 :1;
        unsigned T4OUTPS                :4;
    };
    struct {
        unsigned T4CKPS0                :1;
        unsigned T4CKPS1                :1;
        unsigned                        :1;
        unsigned T4OUTPS0               :1;
        unsigned T4OUTPS1               :1;
        unsigned T4OUTPS2               :1;
        unsigned T4OUTPS3               :1;
    };
} T4CONbits_t;
extern volatile T4CONbits_t T4CONbits @ 0xF76;
// bitfield macros
#define _T4CON_T4CKPS_POSN                                  0x0
#define _T4CON_T4CKPS_POSITION                              0x0
#define _T4CON_T4CKPS_SIZE                                  0x2
#define _T4CON_T4CKPS_LENGTH                                0x2
#define _T4CON_T4CKPS_MASK                                  0x3
#define _T4CON_TMR4ON_POSN                                  0x2
#define _T4CON_TMR4ON_POSITION                              0x2
#define _T4CON_TMR4ON_SIZE                                  0x1
#define _T4CON_TMR4ON_LENGTH                                0x1
#define _T4CON_TMR4ON_MASK                                  0x4
#define _T4CON_T4OUTPS_POSN                                 0x3
#define _T4CON_T4OUTPS_POSITION                             0x3
#define _T4CON_T4OUTPS_SIZE                                 0x4
#define _T4CON_T4OUTPS_LENGTH                               0x4
#define _T4CON_T4OUTPS_MASK                                 0x78
#define _T4CON_T4CKPS0_POSN                                 0x0
#define _T4CON_T4CKPS0_POSITION                             0x0
#define _T4CON_T4CKPS0_SIZE                                 0x1
#define _T4CON_T4CKPS0_LENGTH                               0x1
#define _T4CON_T4CKPS0_MASK                                 0x1
#define _T4CON_T4CKPS1_POSN                                 0x1
#define _T4CON_T4CKPS1_POSITION                             0x1
#define _T4CON_T4CKPS1_SIZE                                 0x1
#define _T4CON_T4CKPS1_LENGTH                               0x1
#define _T4CON_T4CKPS1_MASK                                 0x2
#define _T4CON_T4OUTPS0_POSN                                0x3
#define _T4CON_T4OUTPS0_POSITION                            0x3
#define _T4CON_T4OUTPS0_SIZE                                0x1
#define _T4CON_T4OUTPS0_LENGTH                              0x1
#define _T4CON_T4OUTPS0_MASK                                0x8
#define _T4CON_T4OUTPS1_POSN                                0x4
#define _T4CON_T4OUTPS1_POSITION                            0x4
#define _T4CON_T4OUTPS1_SIZE                                0x1
#define _T4CON_T4OUTPS1_LENGTH                              0x1
#define _T4CON_T4OUTPS1_MASK                                0x10
#define _T4CON_T4OUTPS2_POSN                                0x5
#define _T4CON_T4OUTPS2_POSITION                            0x5
#define _T4CON_T4OUTPS2_SIZE                                0x1
#define _T4CON_T4OUTPS2_LENGTH                              0x1
#define _T4CON_T4OUTPS2_MASK                                0x20
#define _T4CON_T4OUTPS3_POSN                                0x6
#define _T4CON_T4OUTPS3_POSITION                            0x6
#define _T4CON_T4OUTPS3_SIZE                                0x1
#define _T4CON_T4OUTPS3_LENGTH                              0x1
#define _T4CON_T4OUTPS3_MASK                                0x40

// Register: PR4
extern volatile unsigned char           PR4                 @ 0xF77;
#ifndef _LIB_BUILD
asm("PR4 equ 0F77h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR4                    :8;
    };
} PR4bits_t;
extern volatile PR4bits_t PR4bits @ 0xF77;
// bitfield macros
#define _PR4_PR4_POSN                                       0x0
#define _PR4_PR4_POSITION                                   0x0
#define _PR4_PR4_SIZE                                       0x8
#define _PR4_PR4_LENGTH                                     0x8
#define _PR4_PR4_MASK                                       0xFF

// Register: TMR4
extern volatile unsigned char           TMR4                @ 0xF78;
#ifndef _LIB_BUILD
asm("TMR4 equ 0F78h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR4                   :8;
    };
} TMR4bits_t;
extern volatile TMR4bits_t TMR4bits @ 0xF78;
// bitfield macros
#define _TMR4_TMR4_POSN                                     0x0
#define _TMR4_TMR4_POSITION                                 0x0
#define _TMR4_TMR4_SIZE                                     0x8
#define _TMR4_TMR4_LENGTH                                   0x8
#define _TMR4_TMR4_MASK                                     0xFF

// Register: T3CON
extern volatile unsigned char           T3CON               @ 0xF79;
#ifndef _LIB_BUILD
asm("T3CON equ 0F79h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T3SYNC             :1;
    };
    struct {
        unsigned TMR3ON                 :1;
        unsigned RD16                   :1;
        unsigned nT3SYNC                :1;
        unsigned T3OSCEN                :1;
        unsigned T3CKPS                 :2;
        unsigned TMR3CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T3CKPS0                :1;
        unsigned T3CKPS1                :1;
        unsigned TMR3CS0                :1;
        unsigned TMR3CS1                :1;
    };
    struct {
        unsigned                        :7;
        unsigned RD163                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN3                :1;
    };
    struct {
        unsigned                        :7;
        unsigned T3RD16                 :1;
    };
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits @ 0xF79;
// bitfield macros
#define _T3CON_NOT_T3SYNC_POSN                              0x2
#define _T3CON_NOT_T3SYNC_POSITION                          0x2
#define _T3CON_NOT_T3SYNC_SIZE                              0x1
#define _T3CON_NOT_T3SYNC_LENGTH                            0x1
#define _T3CON_NOT_T3SYNC_MASK                              0x4
#define _T3CON_TMR3ON_POSN                                  0x0
#define _T3CON_TMR3ON_POSITION                              0x0
#define _T3CON_TMR3ON_SIZE                                  0x1
#define _T3CON_TMR3ON_LENGTH                                0x1
#define _T3CON_TMR3ON_MASK                                  0x1
#define _T3CON_RD16_POSN                                    0x1
#define _T3CON_RD16_POSITION                                0x1
#define _T3CON_RD16_SIZE                                    0x1
#define _T3CON_RD16_LENGTH                                  0x1
#define _T3CON_RD16_MASK                                    0x2
#define _T3CON_nT3SYNC_POSN                                 0x2
#define _T3CON_nT3SYNC_POSITION                             0x2
#define _T3CON_nT3SYNC_SIZE                                 0x1
#define _T3CON_nT3SYNC_LENGTH                               0x1
#define _T3CON_nT3SYNC_MASK                                 0x4
#define _T3CON_T3OSCEN_POSN                                 0x3
#define _T3CON_T3OSCEN_POSITION                             0x3
#define _T3CON_T3OSCEN_SIZE                                 0x1
#define _T3CON_T3OSCEN_LENGTH                               0x1
#define _T3CON_T3OSCEN_MASK                                 0x8
#define _T3CON_T3CKPS_POSN                                  0x4
#define _T3CON_T3CKPS_POSITION                              0x4
#define _T3CON_T3CKPS_SIZE                                  0x2
#define _T3CON_T3CKPS_LENGTH                                0x2
#define _T3CON_T3CKPS_MASK                                  0x30
#define _T3CON_TMR3CS_POSN                                  0x6
#define _T3CON_TMR3CS_POSITION                              0x6
#define _T3CON_TMR3CS_SIZE                                  0x2
#define _T3CON_TMR3CS_LENGTH                                0x2
#define _T3CON_TMR3CS_MASK                                  0xC0
#define _T3CON_T3CKPS0_POSN                                 0x4
#define _T3CON_T3CKPS0_POSITION                             0x4
#define _T3CON_T3CKPS0_SIZE                                 0x1
#define _T3CON_T3CKPS0_LENGTH                               0x1
#define _T3CON_T3CKPS0_MASK                                 0x10
#define _T3CON_T3CKPS1_POSN                                 0x5
#define _T3CON_T3CKPS1_POSITION                             0x5
#define _T3CON_T3CKPS1_SIZE                                 0x1
#define _T3CON_T3CKPS1_LENGTH                               0x1
#define _T3CON_T3CKPS1_MASK                                 0x20
#define _T3CON_TMR3CS0_POSN                                 0x6
#define _T3CON_TMR3CS0_POSITION                             0x6
#define _T3CON_TMR3CS0_SIZE                                 0x1
#define _T3CON_TMR3CS0_LENGTH                               0x1
#define _T3CON_TMR3CS0_MASK                                 0x40
#define _T3CON_TMR3CS1_POSN                                 0x7
#define _T3CON_TMR3CS1_POSITION                             0x7
#define _T3CON_TMR3CS1_SIZE                                 0x1
#define _T3CON_TMR3CS1_LENGTH                               0x1
#define _T3CON_TMR3CS1_MASK                                 0x80
#define _T3CON_RD163_POSN                                   0x7
#define _T3CON_RD163_POSITION                               0x7
#define _T3CON_RD163_SIZE                                   0x1
#define _T3CON_RD163_LENGTH                                 0x1
#define _T3CON_RD163_MASK                                   0x80
#define _T3CON_SOSCEN3_POSN                                 0x3
#define _T3CON_SOSCEN3_POSITION                             0x3
#define _T3CON_SOSCEN3_SIZE                                 0x1
#define _T3CON_SOSCEN3_LENGTH                               0x1
#define _T3CON_SOSCEN3_MASK                                 0x8
#define _T3CON_T3RD16_POSN                                  0x7
#define _T3CON_T3RD16_POSITION                              0x7
#define _T3CON_T3RD16_SIZE                                  0x1
#define _T3CON_T3RD16_LENGTH                                0x1
#define _T3CON_T3RD16_MASK                                  0x80

// Register: TMR3
extern volatile unsigned short          TMR3                @ 0xF7A;
#ifndef _LIB_BUILD
asm("TMR3 equ 0F7Ah");
#endif

// Register: TMR3L
extern volatile unsigned char           TMR3L               @ 0xF7A;
#ifndef _LIB_BUILD
asm("TMR3L equ 0F7Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3L                  :8;
    };
} TMR3Lbits_t;
extern volatile TMR3Lbits_t TMR3Lbits @ 0xF7A;
// bitfield macros
#define _TMR3L_TMR3L_POSN                                   0x0
#define _TMR3L_TMR3L_POSITION                               0x0
#define _TMR3L_TMR3L_SIZE                                   0x8
#define _TMR3L_TMR3L_LENGTH                                 0x8
#define _TMR3L_TMR3L_MASK                                   0xFF

// Register: TMR3H
extern volatile unsigned char           TMR3H               @ 0xF7B;
#ifndef _LIB_BUILD
asm("TMR3H equ 0F7Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR3H                  :8;
    };
} TMR3Hbits_t;
extern volatile TMR3Hbits_t TMR3Hbits @ 0xF7B;
// bitfield macros
#define _TMR3H_TMR3H_POSN                                   0x0
#define _TMR3H_TMR3H_POSITION                               0x0
#define _TMR3H_TMR3H_SIZE                                   0x8
#define _TMR3H_TMR3H_LENGTH                                 0x8
#define _TMR3H_TMR3H_MASK                                   0xFF

// Register: BAUDCON2
extern volatile unsigned char           BAUDCON2            @ 0xF7C;
#ifndef _LIB_BUILD
asm("BAUDCON2 equ 0F7Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN2                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned ABDOVF2                :1;
    };
    struct {
        unsigned                        :3;
        unsigned BRG162                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP2                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCIDL2                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT2                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXDTP2                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP2                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP2                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WUE2                   :1;
    };
} BAUDCON2bits_t;
extern volatile BAUDCON2bits_t BAUDCON2bits @ 0xF7C;
// bitfield macros
#define _BAUDCON2_ABDEN_POSN                                0x0
#define _BAUDCON2_ABDEN_POSITION                            0x0
#define _BAUDCON2_ABDEN_SIZE                                0x1
#define _BAUDCON2_ABDEN_LENGTH                              0x1
#define _BAUDCON2_ABDEN_MASK                                0x1
#define _BAUDCON2_WUE_POSN                                  0x1
#define _BAUDCON2_WUE_POSITION                              0x1
#define _BAUDCON2_WUE_SIZE                                  0x1
#define _BAUDCON2_WUE_LENGTH                                0x1
#define _BAUDCON2_WUE_MASK                                  0x2
#define _BAUDCON2_BRG16_POSN                                0x3
#define _BAUDCON2_BRG16_POSITION                            0x3
#define _BAUDCON2_BRG16_SIZE                                0x1
#define _BAUDCON2_BRG16_LENGTH                              0x1
#define _BAUDCON2_BRG16_MASK                                0x8
#define _BAUDCON2_TXCKP_POSN                                0x4
#define _BAUDCON2_TXCKP_POSITION                            0x4
#define _BAUDCON2_TXCKP_SIZE                                0x1
#define _BAUDCON2_TXCKP_LENGTH                              0x1
#define _BAUDCON2_TXCKP_MASK                                0x10
#define _BAUDCON2_RXDTP_POSN                                0x5
#define _BAUDCON2_RXDTP_POSITION                            0x5
#define _BAUDCON2_RXDTP_SIZE                                0x1
#define _BAUDCON2_RXDTP_LENGTH                              0x1
#define _BAUDCON2_RXDTP_MASK                                0x20
#define _BAUDCON2_RCIDL_POSN                                0x6
#define _BAUDCON2_RCIDL_POSITION                            0x6
#define _BAUDCON2_RCIDL_SIZE                                0x1
#define _BAUDCON2_RCIDL_LENGTH                              0x1
#define _BAUDCON2_RCIDL_MASK                                0x40
#define _BAUDCON2_ABDOVF_POSN                               0x7
#define _BAUDCON2_ABDOVF_POSITION                           0x7
#define _BAUDCON2_ABDOVF_SIZE                               0x1
#define _BAUDCON2_ABDOVF_LENGTH                             0x1
#define _BAUDCON2_ABDOVF_MASK                               0x80
#define _BAUDCON2_ABDEN2_POSN                               0x0
#define _BAUDCON2_ABDEN2_POSITION                           0x0
#define _BAUDCON2_ABDEN2_SIZE                               0x1
#define _BAUDCON2_ABDEN2_LENGTH                             0x1
#define _BAUDCON2_ABDEN2_MASK                               0x1
#define _BAUDCON2_ABDOVF2_POSN                              0x7
#define _BAUDCON2_ABDOVF2_POSITION                          0x7
#define _BAUDCON2_ABDOVF2_SIZE                              0x1
#define _BAUDCON2_ABDOVF2_LENGTH                            0x1
#define _BAUDCON2_ABDOVF2_MASK                              0x80
#define _BAUDCON2_BRG162_POSN                               0x3
#define _BAUDCON2_BRG162_POSITION                           0x3
#define _BAUDCON2_BRG162_SIZE                               0x1
#define _BAUDCON2_BRG162_LENGTH                             0x1
#define _BAUDCON2_BRG162_MASK                               0x8
#define _BAUDCON2_DTRXP2_POSN                               0x5
#define _BAUDCON2_DTRXP2_POSITION                           0x5
#define _BAUDCON2_DTRXP2_SIZE                               0x1
#define _BAUDCON2_DTRXP2_LENGTH                             0x1
#define _BAUDCON2_DTRXP2_MASK                               0x20
#define _BAUDCON2_RCIDL2_POSN                               0x6
#define _BAUDCON2_RCIDL2_POSITION                           0x6
#define _BAUDCON2_RCIDL2_SIZE                               0x1
#define _BAUDCON2_RCIDL2_LENGTH                             0x1
#define _BAUDCON2_RCIDL2_MASK                               0x40
#define _BAUDCON2_RCMT2_POSN                                0x6
#define _BAUDCON2_RCMT2_POSITION                            0x6
#define _BAUDCON2_RCMT2_SIZE                                0x1
#define _BAUDCON2_RCMT2_LENGTH                              0x1
#define _BAUDCON2_RCMT2_MASK                                0x40
#define _BAUDCON2_RXDTP2_POSN                               0x5
#define _BAUDCON2_RXDTP2_POSITION                           0x5
#define _BAUDCON2_RXDTP2_SIZE                               0x1
#define _BAUDCON2_RXDTP2_LENGTH                             0x1
#define _BAUDCON2_RXDTP2_MASK                               0x20
#define _BAUDCON2_SCKP2_POSN                                0x4
#define _BAUDCON2_SCKP2_POSITION                            0x4
#define _BAUDCON2_SCKP2_SIZE                                0x1
#define _BAUDCON2_SCKP2_LENGTH                              0x1
#define _BAUDCON2_SCKP2_MASK                                0x10
#define _BAUDCON2_TXCKP2_POSN                               0x4
#define _BAUDCON2_TXCKP2_POSITION                           0x4
#define _BAUDCON2_TXCKP2_SIZE                               0x1
#define _BAUDCON2_TXCKP2_LENGTH                             0x1
#define _BAUDCON2_TXCKP2_MASK                               0x10
#define _BAUDCON2_WUE2_POSN                                 0x1
#define _BAUDCON2_WUE2_POSITION                             0x1
#define _BAUDCON2_WUE2_SIZE                                 0x1
#define _BAUDCON2_WUE2_LENGTH                               0x1
#define _BAUDCON2_WUE2_MASK                                 0x2

// Register: SPBRGH2
extern volatile unsigned char           SPBRGH2             @ 0xF7D;
#ifndef _LIB_BUILD
asm("SPBRGH2 equ 0F7Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRGH2                :8;
    };
} SPBRGH2bits_t;
extern volatile SPBRGH2bits_t SPBRGH2bits @ 0xF7D;
// bitfield macros
#define _SPBRGH2_SPBRGH2_POSN                               0x0
#define _SPBRGH2_SPBRGH2_POSITION                           0x0
#define _SPBRGH2_SPBRGH2_SIZE                               0x8
#define _SPBRGH2_SPBRGH2_LENGTH                             0x8
#define _SPBRGH2_SPBRGH2_MASK                               0xFF

// Register: BAUDCON1
extern volatile unsigned char           BAUDCON1            @ 0xF7E;
#ifndef _LIB_BUILD
asm("BAUDCON1 equ 0F7Eh");
#endif
// aliases
extern volatile unsigned char           BAUDCON             @ 0xF7E;
#ifndef _LIB_BUILD
asm("BAUDCON equ 0F7Eh");
#endif
extern volatile unsigned char           BAUDCTL             @ 0xF7E;
#ifndef _LIB_BUILD
asm("BAUDCTL equ 0F7Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :3;
        unsigned BRG161                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKTXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCIDL1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXDTP1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WUE1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
} BAUDCON1bits_t;
extern volatile BAUDCON1bits_t BAUDCON1bits @ 0xF7E;
// bitfield macros
#define _BAUDCON1_ABDEN_POSN                                0x0
#define _BAUDCON1_ABDEN_POSITION                            0x0
#define _BAUDCON1_ABDEN_SIZE                                0x1
#define _BAUDCON1_ABDEN_LENGTH                              0x1
#define _BAUDCON1_ABDEN_MASK                                0x1
#define _BAUDCON1_WUE_POSN                                  0x1
#define _BAUDCON1_WUE_POSITION                              0x1
#define _BAUDCON1_WUE_SIZE                                  0x1
#define _BAUDCON1_WUE_LENGTH                                0x1
#define _BAUDCON1_WUE_MASK                                  0x2
#define _BAUDCON1_BRG16_POSN                                0x3
#define _BAUDCON1_BRG16_POSITION                            0x3
#define _BAUDCON1_BRG16_SIZE                                0x1
#define _BAUDCON1_BRG16_LENGTH                              0x1
#define _BAUDCON1_BRG16_MASK                                0x8
#define _BAUDCON1_TXCKP_POSN                                0x4
#define _BAUDCON1_TXCKP_POSITION                            0x4
#define _BAUDCON1_TXCKP_SIZE                                0x1
#define _BAUDCON1_TXCKP_LENGTH                              0x1
#define _BAUDCON1_TXCKP_MASK                                0x10
#define _BAUDCON1_RXDTP_POSN                                0x5
#define _BAUDCON1_RXDTP_POSITION                            0x5
#define _BAUDCON1_RXDTP_SIZE                                0x1
#define _BAUDCON1_RXDTP_LENGTH                              0x1
#define _BAUDCON1_RXDTP_MASK                                0x20
#define _BAUDCON1_RCIDL_POSN                                0x6
#define _BAUDCON1_RCIDL_POSITION                            0x6
#define _BAUDCON1_RCIDL_SIZE                                0x1
#define _BAUDCON1_RCIDL_LENGTH                              0x1
#define _BAUDCON1_RCIDL_MASK                                0x40
#define _BAUDCON1_ABDOVF_POSN                               0x7
#define _BAUDCON1_ABDOVF_POSITION                           0x7
#define _BAUDCON1_ABDOVF_SIZE                               0x1
#define _BAUDCON1_ABDOVF_LENGTH                             0x1
#define _BAUDCON1_ABDOVF_MASK                               0x80
#define _BAUDCON1_ABDEN1_POSN                               0x0
#define _BAUDCON1_ABDEN1_POSITION                           0x0
#define _BAUDCON1_ABDEN1_SIZE                               0x1
#define _BAUDCON1_ABDEN1_LENGTH                             0x1
#define _BAUDCON1_ABDEN1_MASK                               0x1
#define _BAUDCON1_ABDOVF1_POSN                              0x7
#define _BAUDCON1_ABDOVF1_POSITION                          0x7
#define _BAUDCON1_ABDOVF1_SIZE                              0x1
#define _BAUDCON1_ABDOVF1_LENGTH                            0x1
#define _BAUDCON1_ABDOVF1_MASK                              0x80
#define _BAUDCON1_BRG161_POSN                               0x3
#define _BAUDCON1_BRG161_POSITION                           0x3
#define _BAUDCON1_BRG161_SIZE                               0x1
#define _BAUDCON1_BRG161_LENGTH                             0x1
#define _BAUDCON1_BRG161_MASK                               0x8
#define _BAUDCON1_CKTXP_POSN                                0x4
#define _BAUDCON1_CKTXP_POSITION                            0x4
#define _BAUDCON1_CKTXP_SIZE                                0x1
#define _BAUDCON1_CKTXP_LENGTH                              0x1
#define _BAUDCON1_CKTXP_MASK                                0x10
#define _BAUDCON1_DTRXP_POSN                                0x5
#define _BAUDCON1_DTRXP_POSITION                            0x5
#define _BAUDCON1_DTRXP_SIZE                                0x1
#define _BAUDCON1_DTRXP_LENGTH                              0x1
#define _BAUDCON1_DTRXP_MASK                                0x20
#define _BAUDCON1_DTRXP1_POSN                               0x5
#define _BAUDCON1_DTRXP1_POSITION                           0x5
#define _BAUDCON1_DTRXP1_SIZE                               0x1
#define _BAUDCON1_DTRXP1_LENGTH                             0x1
#define _BAUDCON1_DTRXP1_MASK                               0x20
#define _BAUDCON1_RCIDL1_POSN                               0x6
#define _BAUDCON1_RCIDL1_POSITION                           0x6
#define _BAUDCON1_RCIDL1_SIZE                               0x1
#define _BAUDCON1_RCIDL1_LENGTH                             0x1
#define _BAUDCON1_RCIDL1_MASK                               0x40
#define _BAUDCON1_RCMT_POSN                                 0x6
#define _BAUDCON1_RCMT_POSITION                             0x6
#define _BAUDCON1_RCMT_SIZE                                 0x1
#define _BAUDCON1_RCMT_LENGTH                               0x1
#define _BAUDCON1_RCMT_MASK                                 0x40
#define _BAUDCON1_RCMT1_POSN                                0x6
#define _BAUDCON1_RCMT1_POSITION                            0x6
#define _BAUDCON1_RCMT1_SIZE                                0x1
#define _BAUDCON1_RCMT1_LENGTH                              0x1
#define _BAUDCON1_RCMT1_MASK                                0x40
#define _BAUDCON1_RXDTP1_POSN                               0x5
#define _BAUDCON1_RXDTP1_POSITION                           0x5
#define _BAUDCON1_RXDTP1_SIZE                               0x1
#define _BAUDCON1_RXDTP1_LENGTH                             0x1
#define _BAUDCON1_RXDTP1_MASK                               0x20
#define _BAUDCON1_SCKP_POSN                                 0x4
#define _BAUDCON1_SCKP_POSITION                             0x4
#define _BAUDCON1_SCKP_SIZE                                 0x1
#define _BAUDCON1_SCKP_LENGTH                               0x1
#define _BAUDCON1_SCKP_MASK                                 0x10
#define _BAUDCON1_SCKP1_POSN                                0x4
#define _BAUDCON1_SCKP1_POSITION                            0x4
#define _BAUDCON1_SCKP1_SIZE                                0x1
#define _BAUDCON1_SCKP1_LENGTH                              0x1
#define _BAUDCON1_SCKP1_MASK                                0x10
#define _BAUDCON1_TXCKP1_POSN                               0x4
#define _BAUDCON1_TXCKP1_POSITION                           0x4
#define _BAUDCON1_TXCKP1_SIZE                               0x1
#define _BAUDCON1_TXCKP1_LENGTH                             0x1
#define _BAUDCON1_TXCKP1_MASK                               0x10
#define _BAUDCON1_WUE1_POSN                                 0x1
#define _BAUDCON1_WUE1_POSITION                             0x1
#define _BAUDCON1_WUE1_SIZE                                 0x1
#define _BAUDCON1_WUE1_LENGTH                               0x1
#define _BAUDCON1_WUE1_MASK                                 0x2
#define _BAUDCON1_RXCKP_POSN                                0x5
#define _BAUDCON1_RXCKP_POSITION                            0x5
#define _BAUDCON1_RXCKP_SIZE                                0x1
#define _BAUDCON1_RXCKP_LENGTH                              0x1
#define _BAUDCON1_RXCKP_MASK                                0x20
#define _BAUDCON1_W4E_POSN                                  0x1
#define _BAUDCON1_W4E_POSITION                              0x1
#define _BAUDCON1_W4E_SIZE                                  0x1
#define _BAUDCON1_W4E_LENGTH                                0x1
#define _BAUDCON1_W4E_MASK                                  0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :3;
        unsigned BRG161                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKTXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCIDL1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXDTP1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WUE1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits @ 0xF7E;
// bitfield macros
#define _BAUDCON_ABDEN_POSN                                 0x0
#define _BAUDCON_ABDEN_POSITION                             0x0
#define _BAUDCON_ABDEN_SIZE                                 0x1
#define _BAUDCON_ABDEN_LENGTH                               0x1
#define _BAUDCON_ABDEN_MASK                                 0x1
#define _BAUDCON_WUE_POSN                                   0x1
#define _BAUDCON_WUE_POSITION                               0x1
#define _BAUDCON_WUE_SIZE                                   0x1
#define _BAUDCON_WUE_LENGTH                                 0x1
#define _BAUDCON_WUE_MASK                                   0x2
#define _BAUDCON_BRG16_POSN                                 0x3
#define _BAUDCON_BRG16_POSITION                             0x3
#define _BAUDCON_BRG16_SIZE                                 0x1
#define _BAUDCON_BRG16_LENGTH                               0x1
#define _BAUDCON_BRG16_MASK                                 0x8
#define _BAUDCON_TXCKP_POSN                                 0x4
#define _BAUDCON_TXCKP_POSITION                             0x4
#define _BAUDCON_TXCKP_SIZE                                 0x1
#define _BAUDCON_TXCKP_LENGTH                               0x1
#define _BAUDCON_TXCKP_MASK                                 0x10
#define _BAUDCON_RXDTP_POSN                                 0x5
#define _BAUDCON_RXDTP_POSITION                             0x5
#define _BAUDCON_RXDTP_SIZE                                 0x1
#define _BAUDCON_RXDTP_LENGTH                               0x1
#define _BAUDCON_RXDTP_MASK                                 0x20
#define _BAUDCON_RCIDL_POSN                                 0x6
#define _BAUDCON_RCIDL_POSITION                             0x6
#define _BAUDCON_RCIDL_SIZE                                 0x1
#define _BAUDCON_RCIDL_LENGTH                               0x1
#define _BAUDCON_RCIDL_MASK                                 0x40
#define _BAUDCON_ABDOVF_POSN                                0x7
#define _BAUDCON_ABDOVF_POSITION                            0x7
#define _BAUDCON_ABDOVF_SIZE                                0x1
#define _BAUDCON_ABDOVF_LENGTH                              0x1
#define _BAUDCON_ABDOVF_MASK                                0x80
#define _BAUDCON_ABDEN1_POSN                                0x0
#define _BAUDCON_ABDEN1_POSITION                            0x0
#define _BAUDCON_ABDEN1_SIZE                                0x1
#define _BAUDCON_ABDEN1_LENGTH                              0x1
#define _BAUDCON_ABDEN1_MASK                                0x1
#define _BAUDCON_ABDOVF1_POSN                               0x7
#define _BAUDCON_ABDOVF1_POSITION                           0x7
#define _BAUDCON_ABDOVF1_SIZE                               0x1
#define _BAUDCON_ABDOVF1_LENGTH                             0x1
#define _BAUDCON_ABDOVF1_MASK                               0x80
#define _BAUDCON_BRG161_POSN                                0x3
#define _BAUDCON_BRG161_POSITION                            0x3
#define _BAUDCON_BRG161_SIZE                                0x1
#define _BAUDCON_BRG161_LENGTH                              0x1
#define _BAUDCON_BRG161_MASK                                0x8
#define _BAUDCON_CKTXP_POSN                                 0x4
#define _BAUDCON_CKTXP_POSITION                             0x4
#define _BAUDCON_CKTXP_SIZE                                 0x1
#define _BAUDCON_CKTXP_LENGTH                               0x1
#define _BAUDCON_CKTXP_MASK                                 0x10
#define _BAUDCON_DTRXP_POSN                                 0x5
#define _BAUDCON_DTRXP_POSITION                             0x5
#define _BAUDCON_DTRXP_SIZE                                 0x1
#define _BAUDCON_DTRXP_LENGTH                               0x1
#define _BAUDCON_DTRXP_MASK                                 0x20
#define _BAUDCON_DTRXP1_POSN                                0x5
#define _BAUDCON_DTRXP1_POSITION                            0x5
#define _BAUDCON_DTRXP1_SIZE                                0x1
#define _BAUDCON_DTRXP1_LENGTH                              0x1
#define _BAUDCON_DTRXP1_MASK                                0x20
#define _BAUDCON_RCIDL1_POSN                                0x6
#define _BAUDCON_RCIDL1_POSITION                            0x6
#define _BAUDCON_RCIDL1_SIZE                                0x1
#define _BAUDCON_RCIDL1_LENGTH                              0x1
#define _BAUDCON_RCIDL1_MASK                                0x40
#define _BAUDCON_RCMT_POSN                                  0x6
#define _BAUDCON_RCMT_POSITION                              0x6
#define _BAUDCON_RCMT_SIZE                                  0x1
#define _BAUDCON_RCMT_LENGTH                                0x1
#define _BAUDCON_RCMT_MASK                                  0x40
#define _BAUDCON_RCMT1_POSN                                 0x6
#define _BAUDCON_RCMT1_POSITION                             0x6
#define _BAUDCON_RCMT1_SIZE                                 0x1
#define _BAUDCON_RCMT1_LENGTH                               0x1
#define _BAUDCON_RCMT1_MASK                                 0x40
#define _BAUDCON_RXDTP1_POSN                                0x5
#define _BAUDCON_RXDTP1_POSITION                            0x5
#define _BAUDCON_RXDTP1_SIZE                                0x1
#define _BAUDCON_RXDTP1_LENGTH                              0x1
#define _BAUDCON_RXDTP1_MASK                                0x20
#define _BAUDCON_SCKP_POSN                                  0x4
#define _BAUDCON_SCKP_POSITION                              0x4
#define _BAUDCON_SCKP_SIZE                                  0x1
#define _BAUDCON_SCKP_LENGTH                                0x1
#define _BAUDCON_SCKP_MASK                                  0x10
#define _BAUDCON_SCKP1_POSN                                 0x4
#define _BAUDCON_SCKP1_POSITION                             0x4
#define _BAUDCON_SCKP1_SIZE                                 0x1
#define _BAUDCON_SCKP1_LENGTH                               0x1
#define _BAUDCON_SCKP1_MASK                                 0x10
#define _BAUDCON_TXCKP1_POSN                                0x4
#define _BAUDCON_TXCKP1_POSITION                            0x4
#define _BAUDCON_TXCKP1_SIZE                                0x1
#define _BAUDCON_TXCKP1_LENGTH                              0x1
#define _BAUDCON_TXCKP1_MASK                                0x10
#define _BAUDCON_WUE1_POSN                                  0x1
#define _BAUDCON_WUE1_POSITION                              0x1
#define _BAUDCON_WUE1_SIZE                                  0x1
#define _BAUDCON_WUE1_LENGTH                                0x1
#define _BAUDCON_WUE1_MASK                                  0x2
#define _BAUDCON_RXCKP_POSN                                 0x5
#define _BAUDCON_RXCKP_POSITION                             0x5
#define _BAUDCON_RXCKP_SIZE                                 0x1
#define _BAUDCON_RXCKP_LENGTH                               0x1
#define _BAUDCON_RXCKP_MASK                                 0x20
#define _BAUDCON_W4E_POSN                                   0x1
#define _BAUDCON_W4E_POSITION                               0x1
#define _BAUDCON_W4E_SIZE                                   0x1
#define _BAUDCON_W4E_LENGTH                                 0x1
#define _BAUDCON_W4E_MASK                                   0x2
typedef union {
    struct {
        unsigned ABDEN                  :1;
        unsigned WUE                    :1;
        unsigned                        :1;
        unsigned BRG16                  :1;
        unsigned TXCKP                  :1;
        unsigned RXDTP                  :1;
        unsigned RCIDL                  :1;
        unsigned ABDOVF                 :1;
    };
    struct {
        unsigned ABDEN1                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned ABDOVF1                :1;
    };
    struct {
        unsigned                        :3;
        unsigned BRG161                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKTXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned DTRXP1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCIDL1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RCMT1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXDTP1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned SCKP1                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXCKP1                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned WUE1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned RXCKP                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned W4E                    :1;
    };
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits @ 0xF7E;
// bitfield macros
#define _BAUDCTL_ABDEN_POSN                                 0x0
#define _BAUDCTL_ABDEN_POSITION                             0x0
#define _BAUDCTL_ABDEN_SIZE                                 0x1
#define _BAUDCTL_ABDEN_LENGTH                               0x1
#define _BAUDCTL_ABDEN_MASK                                 0x1
#define _BAUDCTL_WUE_POSN                                   0x1
#define _BAUDCTL_WUE_POSITION                               0x1
#define _BAUDCTL_WUE_SIZE                                   0x1
#define _BAUDCTL_WUE_LENGTH                                 0x1
#define _BAUDCTL_WUE_MASK                                   0x2
#define _BAUDCTL_BRG16_POSN                                 0x3
#define _BAUDCTL_BRG16_POSITION                             0x3
#define _BAUDCTL_BRG16_SIZE                                 0x1
#define _BAUDCTL_BRG16_LENGTH                               0x1
#define _BAUDCTL_BRG16_MASK                                 0x8
#define _BAUDCTL_TXCKP_POSN                                 0x4
#define _BAUDCTL_TXCKP_POSITION                             0x4
#define _BAUDCTL_TXCKP_SIZE                                 0x1
#define _BAUDCTL_TXCKP_LENGTH                               0x1
#define _BAUDCTL_TXCKP_MASK                                 0x10
#define _BAUDCTL_RXDTP_POSN                                 0x5
#define _BAUDCTL_RXDTP_POSITION                             0x5
#define _BAUDCTL_RXDTP_SIZE                                 0x1
#define _BAUDCTL_RXDTP_LENGTH                               0x1
#define _BAUDCTL_RXDTP_MASK                                 0x20
#define _BAUDCTL_RCIDL_POSN                                 0x6
#define _BAUDCTL_RCIDL_POSITION                             0x6
#define _BAUDCTL_RCIDL_SIZE                                 0x1
#define _BAUDCTL_RCIDL_LENGTH                               0x1
#define _BAUDCTL_RCIDL_MASK                                 0x40
#define _BAUDCTL_ABDOVF_POSN                                0x7
#define _BAUDCTL_ABDOVF_POSITION                            0x7
#define _BAUDCTL_ABDOVF_SIZE                                0x1
#define _BAUDCTL_ABDOVF_LENGTH                              0x1
#define _BAUDCTL_ABDOVF_MASK                                0x80
#define _BAUDCTL_ABDEN1_POSN                                0x0
#define _BAUDCTL_ABDEN1_POSITION                            0x0
#define _BAUDCTL_ABDEN1_SIZE                                0x1
#define _BAUDCTL_ABDEN1_LENGTH                              0x1
#define _BAUDCTL_ABDEN1_MASK                                0x1
#define _BAUDCTL_ABDOVF1_POSN                               0x7
#define _BAUDCTL_ABDOVF1_POSITION                           0x7
#define _BAUDCTL_ABDOVF1_SIZE                               0x1
#define _BAUDCTL_ABDOVF1_LENGTH                             0x1
#define _BAUDCTL_ABDOVF1_MASK                               0x80
#define _BAUDCTL_BRG161_POSN                                0x3
#define _BAUDCTL_BRG161_POSITION                            0x3
#define _BAUDCTL_BRG161_SIZE                                0x1
#define _BAUDCTL_BRG161_LENGTH                              0x1
#define _BAUDCTL_BRG161_MASK                                0x8
#define _BAUDCTL_CKTXP_POSN                                 0x4
#define _BAUDCTL_CKTXP_POSITION                             0x4
#define _BAUDCTL_CKTXP_SIZE                                 0x1
#define _BAUDCTL_CKTXP_LENGTH                               0x1
#define _BAUDCTL_CKTXP_MASK                                 0x10
#define _BAUDCTL_DTRXP_POSN                                 0x5
#define _BAUDCTL_DTRXP_POSITION                             0x5
#define _BAUDCTL_DTRXP_SIZE                                 0x1
#define _BAUDCTL_DTRXP_LENGTH                               0x1
#define _BAUDCTL_DTRXP_MASK                                 0x20
#define _BAUDCTL_DTRXP1_POSN                                0x5
#define _BAUDCTL_DTRXP1_POSITION                            0x5
#define _BAUDCTL_DTRXP1_SIZE                                0x1
#define _BAUDCTL_DTRXP1_LENGTH                              0x1
#define _BAUDCTL_DTRXP1_MASK                                0x20
#define _BAUDCTL_RCIDL1_POSN                                0x6
#define _BAUDCTL_RCIDL1_POSITION                            0x6
#define _BAUDCTL_RCIDL1_SIZE                                0x1
#define _BAUDCTL_RCIDL1_LENGTH                              0x1
#define _BAUDCTL_RCIDL1_MASK                                0x40
#define _BAUDCTL_RCMT_POSN                                  0x6
#define _BAUDCTL_RCMT_POSITION                              0x6
#define _BAUDCTL_RCMT_SIZE                                  0x1
#define _BAUDCTL_RCMT_LENGTH                                0x1
#define _BAUDCTL_RCMT_MASK                                  0x40
#define _BAUDCTL_RCMT1_POSN                                 0x6
#define _BAUDCTL_RCMT1_POSITION                             0x6
#define _BAUDCTL_RCMT1_SIZE                                 0x1
#define _BAUDCTL_RCMT1_LENGTH                               0x1
#define _BAUDCTL_RCMT1_MASK                                 0x40
#define _BAUDCTL_RXDTP1_POSN                                0x5
#define _BAUDCTL_RXDTP1_POSITION                            0x5
#define _BAUDCTL_RXDTP1_SIZE                                0x1
#define _BAUDCTL_RXDTP1_LENGTH                              0x1
#define _BAUDCTL_RXDTP1_MASK                                0x20
#define _BAUDCTL_SCKP_POSN                                  0x4
#define _BAUDCTL_SCKP_POSITION                              0x4
#define _BAUDCTL_SCKP_SIZE                                  0x1
#define _BAUDCTL_SCKP_LENGTH                                0x1
#define _BAUDCTL_SCKP_MASK                                  0x10
#define _BAUDCTL_SCKP1_POSN                                 0x4
#define _BAUDCTL_SCKP1_POSITION                             0x4
#define _BAUDCTL_SCKP1_SIZE                                 0x1
#define _BAUDCTL_SCKP1_LENGTH                               0x1
#define _BAUDCTL_SCKP1_MASK                                 0x10
#define _BAUDCTL_TXCKP1_POSN                                0x4
#define _BAUDCTL_TXCKP1_POSITION                            0x4
#define _BAUDCTL_TXCKP1_SIZE                                0x1
#define _BAUDCTL_TXCKP1_LENGTH                              0x1
#define _BAUDCTL_TXCKP1_MASK                                0x10
#define _BAUDCTL_WUE1_POSN                                  0x1
#define _BAUDCTL_WUE1_POSITION                              0x1
#define _BAUDCTL_WUE1_SIZE                                  0x1
#define _BAUDCTL_WUE1_LENGTH                                0x1
#define _BAUDCTL_WUE1_MASK                                  0x2
#define _BAUDCTL_RXCKP_POSN                                 0x5
#define _BAUDCTL_RXCKP_POSITION                             0x5
#define _BAUDCTL_RXCKP_SIZE                                 0x1
#define _BAUDCTL_RXCKP_LENGTH                               0x1
#define _BAUDCTL_RXCKP_MASK                                 0x20
#define _BAUDCTL_W4E_POSN                                   0x1
#define _BAUDCTL_W4E_POSITION                               0x1
#define _BAUDCTL_W4E_SIZE                                   0x1
#define _BAUDCTL_W4E_LENGTH                                 0x1
#define _BAUDCTL_W4E_MASK                                   0x2

// Register: SPBRGH1
extern volatile unsigned char           SPBRGH1             @ 0xF7F;
#ifndef _LIB_BUILD
asm("SPBRGH1 equ 0F7Fh");
#endif
// aliases
extern volatile unsigned char           SPBRGH              @ 0xF7F;
#ifndef _LIB_BUILD
asm("SPBRGH equ 0F7Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRGH1                :8;
    };
} SPBRGH1bits_t;
extern volatile SPBRGH1bits_t SPBRGH1bits @ 0xF7F;
// bitfield macros
#define _SPBRGH1_SPBRGH1_POSN                               0x0
#define _SPBRGH1_SPBRGH1_POSITION                           0x0
#define _SPBRGH1_SPBRGH1_SIZE                               0x8
#define _SPBRGH1_SPBRGH1_LENGTH                             0x8
#define _SPBRGH1_SPBRGH1_MASK                               0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SPBRGH1                :8;
    };
} SPBRGHbits_t;
extern volatile SPBRGHbits_t SPBRGHbits @ 0xF7F;
// bitfield macros
#define _SPBRGH_SPBRGH1_POSN                                0x0
#define _SPBRGH_SPBRGH1_POSITION                            0x0
#define _SPBRGH_SPBRGH1_SIZE                                0x8
#define _SPBRGH_SPBRGH1_LENGTH                              0x8
#define _SPBRGH_SPBRGH1_MASK                                0xFF

// Register: PORTA
extern volatile unsigned char           PORTA               @ 0xF80;
#ifndef _LIB_BUILD
asm("PORTA equ 0F80h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RA0                    :1;
        unsigned RA1                    :1;
        unsigned RA2                    :1;
        unsigned RA3                    :1;
        unsigned                        :1;
        unsigned RA5                    :1;
        unsigned RA6                    :1;
        unsigned RA7                    :1;
    };
    struct {
        unsigned AN0                    :1;
        unsigned AN1                    :1;
        unsigned AN2                    :1;
        unsigned AN3                    :1;
        unsigned                        :1;
        unsigned AN4                    :1;
        unsigned OSC2                   :1;
        unsigned OSC1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_SS1                :1;
    };
    struct {
        unsigned C1INA                  :1;
        unsigned C2INA                  :1;
        unsigned VREF_MINUS             :1;
        unsigned VREF_PLUS              :1;
        unsigned                        :1;
        unsigned nSS1                   :1;
        unsigned CLKO                   :1;
        unsigned CLKI                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned CVREF                  :1;
        unsigned C1INB                  :1;
        unsigned                        :1;
        unsigned HLVDIN                 :1;
    };
    struct {
        unsigned RP0                    :1;
        unsigned RP1                    :1;
        unsigned C2INB                  :1;
        unsigned                        :2;
        unsigned RCV                    :1;
    };
    struct {
        unsigned ULPWU                  :1;
        unsigned VBG                    :1;
        unsigned C1IND                  :1;
        unsigned                        :2;
        unsigned RP2                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned C3INB                  :1;
        unsigned                        :2;
        unsigned C1INC                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned LVDIN                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned RJPU                   :1;
    };
    struct {
        unsigned ULPWUIN                :1;
    };
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0xF80;
// bitfield macros
#define _PORTA_RA0_POSN                                     0x0
#define _PORTA_RA0_POSITION                                 0x0
#define _PORTA_RA0_SIZE                                     0x1
#define _PORTA_RA0_LENGTH                                   0x1
#define _PORTA_RA0_MASK                                     0x1
#define _PORTA_RA1_POSN                                     0x1
#define _PORTA_RA1_POSITION                                 0x1
#define _PORTA_RA1_SIZE                                     0x1
#define _PORTA_RA1_LENGTH                                   0x1
#define _PORTA_RA1_MASK                                     0x2
#define _PORTA_RA2_POSN                                     0x2
#define _PORTA_RA2_POSITION                                 0x2
#define _PORTA_RA2_SIZE                                     0x1
#define _PORTA_RA2_LENGTH                                   0x1
#define _PORTA_RA2_MASK                                     0x4
#define _PORTA_RA3_POSN                                     0x3
#define _PORTA_RA3_POSITION                                 0x3
#define _PORTA_RA3_SIZE                                     0x1
#define _PORTA_RA3_LENGTH                                   0x1
#define _PORTA_RA3_MASK                                     0x8
#define _PORTA_RA5_POSN                                     0x5
#define _PORTA_RA5_POSITION                                 0x5
#define _PORTA_RA5_SIZE                                     0x1
#define _PORTA_RA5_LENGTH                                   0x1
#define _PORTA_RA5_MASK                                     0x20
#define _PORTA_RA6_POSN                                     0x6
#define _PORTA_RA6_POSITION                                 0x6
#define _PORTA_RA6_SIZE                                     0x1
#define _PORTA_RA6_LENGTH                                   0x1
#define _PORTA_RA6_MASK                                     0x40
#define _PORTA_RA7_POSN                                     0x7
#define _PORTA_RA7_POSITION                                 0x7
#define _PORTA_RA7_SIZE                                     0x1
#define _PORTA_RA7_LENGTH                                   0x1
#define _PORTA_RA7_MASK                                     0x80
#define _PORTA_AN0_POSN                                     0x0
#define _PORTA_AN0_POSITION                                 0x0
#define _PORTA_AN0_SIZE                                     0x1
#define _PORTA_AN0_LENGTH                                   0x1
#define _PORTA_AN0_MASK                                     0x1
#define _PORTA_AN1_POSN                                     0x1
#define _PORTA_AN1_POSITION                                 0x1
#define _PORTA_AN1_SIZE                                     0x1
#define _PORTA_AN1_LENGTH                                   0x1
#define _PORTA_AN1_MASK                                     0x2
#define _PORTA_AN2_POSN                                     0x2
#define _PORTA_AN2_POSITION                                 0x2
#define _PORTA_AN2_SIZE                                     0x1
#define _PORTA_AN2_LENGTH                                   0x1
#define _PORTA_AN2_MASK                                     0x4
#define _PORTA_AN3_POSN                                     0x3
#define _PORTA_AN3_POSITION                                 0x3
#define _PORTA_AN3_SIZE                                     0x1
#define _PORTA_AN3_LENGTH                                   0x1
#define _PORTA_AN3_MASK                                     0x8
#define _PORTA_AN4_POSN                                     0x5
#define _PORTA_AN4_POSITION                                 0x5
#define _PORTA_AN4_SIZE                                     0x1
#define _PORTA_AN4_LENGTH                                   0x1
#define _PORTA_AN4_MASK                                     0x20
#define _PORTA_OSC2_POSN                                    0x6
#define _PORTA_OSC2_POSITION                                0x6
#define _PORTA_OSC2_SIZE                                    0x1
#define _PORTA_OSC2_LENGTH                                  0x1
#define _PORTA_OSC2_MASK                                    0x40
#define _PORTA_OSC1_POSN                                    0x7
#define _PORTA_OSC1_POSITION                                0x7
#define _PORTA_OSC1_SIZE                                    0x1
#define _PORTA_OSC1_LENGTH                                  0x1
#define _PORTA_OSC1_MASK                                    0x80
#define _PORTA_NOT_SS1_POSN                                 0x5
#define _PORTA_NOT_SS1_POSITION                             0x5
#define _PORTA_NOT_SS1_SIZE                                 0x1
#define _PORTA_NOT_SS1_LENGTH                               0x1
#define _PORTA_NOT_SS1_MASK                                 0x20
#define _PORTA_C1INA_POSN                                   0x0
#define _PORTA_C1INA_POSITION                               0x0
#define _PORTA_C1INA_SIZE                                   0x1
#define _PORTA_C1INA_LENGTH                                 0x1
#define _PORTA_C1INA_MASK                                   0x1
#define _PORTA_C2INA_POSN                                   0x1
#define _PORTA_C2INA_POSITION                               0x1
#define _PORTA_C2INA_SIZE                                   0x1
#define _PORTA_C2INA_LENGTH                                 0x1
#define _PORTA_C2INA_MASK                                   0x2
#define _PORTA_VREF_MINUS_POSN                              0x2
#define _PORTA_VREF_MINUS_POSITION                          0x2
#define _PORTA_VREF_MINUS_SIZE                              0x1
#define _PORTA_VREF_MINUS_LENGTH                            0x1
#define _PORTA_VREF_MINUS_MASK                              0x4
#define _PORTA_VREF_PLUS_POSN                               0x3
#define _PORTA_VREF_PLUS_POSITION                           0x3
#define _PORTA_VREF_PLUS_SIZE                               0x1
#define _PORTA_VREF_PLUS_LENGTH                             0x1
#define _PORTA_VREF_PLUS_MASK                               0x8
#define _PORTA_nSS1_POSN                                    0x5
#define _PORTA_nSS1_POSITION                                0x5
#define _PORTA_nSS1_SIZE                                    0x1
#define _PORTA_nSS1_LENGTH                                  0x1
#define _PORTA_nSS1_MASK                                    0x20
#define _PORTA_CLKO_POSN                                    0x6
#define _PORTA_CLKO_POSITION                                0x6
#define _PORTA_CLKO_SIZE                                    0x1
#define _PORTA_CLKO_LENGTH                                  0x1
#define _PORTA_CLKO_MASK                                    0x40
#define _PORTA_CLKI_POSN                                    0x7
#define _PORTA_CLKI_POSITION                                0x7
#define _PORTA_CLKI_SIZE                                    0x1
#define _PORTA_CLKI_LENGTH                                  0x1
#define _PORTA_CLKI_MASK                                    0x80
#define _PORTA_CVREF_POSN                                   0x2
#define _PORTA_CVREF_POSITION                               0x2
#define _PORTA_CVREF_SIZE                                   0x1
#define _PORTA_CVREF_LENGTH                                 0x1
#define _PORTA_CVREF_MASK                                   0x4
#define _PORTA_C1INB_POSN                                   0x3
#define _PORTA_C1INB_POSITION                               0x3
#define _PORTA_C1INB_SIZE                                   0x1
#define _PORTA_C1INB_LENGTH                                 0x1
#define _PORTA_C1INB_MASK                                   0x8
#define _PORTA_HLVDIN_POSN                                  0x5
#define _PORTA_HLVDIN_POSITION                              0x5
#define _PORTA_HLVDIN_SIZE                                  0x1
#define _PORTA_HLVDIN_LENGTH                                0x1
#define _PORTA_HLVDIN_MASK                                  0x20
#define _PORTA_RP0_POSN                                     0x0
#define _PORTA_RP0_POSITION                                 0x0
#define _PORTA_RP0_SIZE                                     0x1
#define _PORTA_RP0_LENGTH                                   0x1
#define _PORTA_RP0_MASK                                     0x1
#define _PORTA_RP1_POSN                                     0x1
#define _PORTA_RP1_POSITION                                 0x1
#define _PORTA_RP1_SIZE                                     0x1
#define _PORTA_RP1_LENGTH                                   0x1
#define _PORTA_RP1_MASK                                     0x2
#define _PORTA_C2INB_POSN                                   0x2
#define _PORTA_C2INB_POSITION                               0x2
#define _PORTA_C2INB_SIZE                                   0x1
#define _PORTA_C2INB_LENGTH                                 0x1
#define _PORTA_C2INB_MASK                                   0x4
#define _PORTA_RCV_POSN                                     0x5
#define _PORTA_RCV_POSITION                                 0x5
#define _PORTA_RCV_SIZE                                     0x1
#define _PORTA_RCV_LENGTH                                   0x1
#define _PORTA_RCV_MASK                                     0x20
#define _PORTA_ULPWU_POSN                                   0x0
#define _PORTA_ULPWU_POSITION                               0x0
#define _PORTA_ULPWU_SIZE                                   0x1
#define _PORTA_ULPWU_LENGTH                                 0x1
#define _PORTA_ULPWU_MASK                                   0x1
#define _PORTA_VBG_POSN                                     0x1
#define _PORTA_VBG_POSITION                                 0x1
#define _PORTA_VBG_SIZE                                     0x1
#define _PORTA_VBG_LENGTH                                   0x1
#define _PORTA_VBG_MASK                                     0x2
#define _PORTA_C1IND_POSN                                   0x2
#define _PORTA_C1IND_POSITION                               0x2
#define _PORTA_C1IND_SIZE                                   0x1
#define _PORTA_C1IND_LENGTH                                 0x1
#define _PORTA_C1IND_MASK                                   0x4
#define _PORTA_RP2_POSN                                     0x5
#define _PORTA_RP2_POSITION                                 0x5
#define _PORTA_RP2_SIZE                                     0x1
#define _PORTA_RP2_LENGTH                                   0x1
#define _PORTA_RP2_MASK                                     0x20
#define _PORTA_C3INB_POSN                                   0x2
#define _PORTA_C3INB_POSITION                               0x2
#define _PORTA_C3INB_SIZE                                   0x1
#define _PORTA_C3INB_LENGTH                                 0x1
#define _PORTA_C3INB_MASK                                   0x4
#define _PORTA_C1INC_POSN                                   0x5
#define _PORTA_C1INC_POSITION                               0x5
#define _PORTA_C1INC_SIZE                                   0x1
#define _PORTA_C1INC_LENGTH                                 0x1
#define _PORTA_C1INC_MASK                                   0x20
#define _PORTA_LVDIN_POSN                                   0x5
#define _PORTA_LVDIN_POSITION                               0x5
#define _PORTA_LVDIN_SIZE                                   0x1
#define _PORTA_LVDIN_LENGTH                                 0x1
#define _PORTA_LVDIN_MASK                                   0x20
#define _PORTA_RJPU_POSN                                    0x7
#define _PORTA_RJPU_POSITION                                0x7
#define _PORTA_RJPU_SIZE                                    0x1
#define _PORTA_RJPU_LENGTH                                  0x1
#define _PORTA_RJPU_MASK                                    0x80
#define _PORTA_ULPWUIN_POSN                                 0x0
#define _PORTA_ULPWUIN_POSITION                             0x0
#define _PORTA_ULPWUIN_SIZE                                 0x1
#define _PORTA_ULPWUIN_LENGTH                               0x1
#define _PORTA_ULPWUIN_MASK                                 0x1

// Register: PORTB
extern volatile unsigned char           PORTB               @ 0xF81;
#ifndef _LIB_BUILD
asm("PORTB equ 0F81h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RB0                    :1;
        unsigned RB1                    :1;
        unsigned RB2                    :1;
        unsigned RB3                    :1;
        unsigned RB4                    :1;
        unsigned RB5                    :1;
        unsigned RB6                    :1;
        unsigned RB7                    :1;
    };
    struct {
        unsigned AN12                   :1;
        unsigned AN10                   :1;
        unsigned AN8                    :1;
        unsigned AN9                    :1;
        unsigned                        :2;
        unsigned KBI2                   :1;
        unsigned KBI3                   :1;
    };
    struct {
        unsigned INT0                   :1;
        unsigned                        :1;
        unsigned CTED1                  :1;
        unsigned CTED2                  :1;
        unsigned KBI0                   :1;
        unsigned KBI1                   :1;
        unsigned PGC                    :1;
        unsigned PGD                    :1;
    };
    struct {
        unsigned RP3                    :1;
        unsigned RTCC                   :1;
        unsigned                        :2;
        unsigned SCK1                   :1;
        unsigned SDI1                   :1;
        unsigned RP9                    :1;
        unsigned RP10                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned RP4                    :1;
        unsigned VMO                    :1;
        unsigned VPO                    :1;
        unsigned SCL1                   :1;
        unsigned SDA1                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned REFO                   :1;
        unsigned RP6                    :1;
        unsigned RP7                    :1;
        unsigned RP8                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned C3INC                  :1;
        unsigned RP5                    :1;
        unsigned C3INA                  :1;
        unsigned CCP4                   :1;
        unsigned CCP5                   :1;
        unsigned CCP6                   :1;
        unsigned CCP7                   :1;
    };
    struct {
        unsigned C3IND                  :1;
        unsigned                        :1;
        unsigned C2INC                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned CCP2_PA2               :1;
    };
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits @ 0xF81;
// bitfield macros
#define _PORTB_RB0_POSN                                     0x0
#define _PORTB_RB0_POSITION                                 0x0
#define _PORTB_RB0_SIZE                                     0x1
#define _PORTB_RB0_LENGTH                                   0x1
#define _PORTB_RB0_MASK                                     0x1
#define _PORTB_RB1_POSN                                     0x1
#define _PORTB_RB1_POSITION                                 0x1
#define _PORTB_RB1_SIZE                                     0x1
#define _PORTB_RB1_LENGTH                                   0x1
#define _PORTB_RB1_MASK                                     0x2
#define _PORTB_RB2_POSN                                     0x2
#define _PORTB_RB2_POSITION                                 0x2
#define _PORTB_RB2_SIZE                                     0x1
#define _PORTB_RB2_LENGTH                                   0x1
#define _PORTB_RB2_MASK                                     0x4
#define _PORTB_RB3_POSN                                     0x3
#define _PORTB_RB3_POSITION                                 0x3
#define _PORTB_RB3_SIZE                                     0x1
#define _PORTB_RB3_LENGTH                                   0x1
#define _PORTB_RB3_MASK                                     0x8
#define _PORTB_RB4_POSN                                     0x4
#define _PORTB_RB4_POSITION                                 0x4
#define _PORTB_RB4_SIZE                                     0x1
#define _PORTB_RB4_LENGTH                                   0x1
#define _PORTB_RB4_MASK                                     0x10
#define _PORTB_RB5_POSN                                     0x5
#define _PORTB_RB5_POSITION                                 0x5
#define _PORTB_RB5_SIZE                                     0x1
#define _PORTB_RB5_LENGTH                                   0x1
#define _PORTB_RB5_MASK                                     0x20
#define _PORTB_RB6_POSN                                     0x6
#define _PORTB_RB6_POSITION                                 0x6
#define _PORTB_RB6_SIZE                                     0x1
#define _PORTB_RB6_LENGTH                                   0x1
#define _PORTB_RB6_MASK                                     0x40
#define _PORTB_RB7_POSN                                     0x7
#define _PORTB_RB7_POSITION                                 0x7
#define _PORTB_RB7_SIZE                                     0x1
#define _PORTB_RB7_LENGTH                                   0x1
#define _PORTB_RB7_MASK                                     0x80
#define _PORTB_AN12_POSN                                    0x0
#define _PORTB_AN12_POSITION                                0x0
#define _PORTB_AN12_SIZE                                    0x1
#define _PORTB_AN12_LENGTH                                  0x1
#define _PORTB_AN12_MASK                                    0x1
#define _PORTB_AN10_POSN                                    0x1
#define _PORTB_AN10_POSITION                                0x1
#define _PORTB_AN10_SIZE                                    0x1
#define _PORTB_AN10_LENGTH                                  0x1
#define _PORTB_AN10_MASK                                    0x2
#define _PORTB_AN8_POSN                                     0x2
#define _PORTB_AN8_POSITION                                 0x2
#define _PORTB_AN8_SIZE                                     0x1
#define _PORTB_AN8_LENGTH                                   0x1
#define _PORTB_AN8_MASK                                     0x4
#define _PORTB_AN9_POSN                                     0x3
#define _PORTB_AN9_POSITION                                 0x3
#define _PORTB_AN9_SIZE                                     0x1
#define _PORTB_AN9_LENGTH                                   0x1
#define _PORTB_AN9_MASK                                     0x8
#define _PORTB_KBI2_POSN                                    0x6
#define _PORTB_KBI2_POSITION                                0x6
#define _PORTB_KBI2_SIZE                                    0x1
#define _PORTB_KBI2_LENGTH                                  0x1
#define _PORTB_KBI2_MASK                                    0x40
#define _PORTB_KBI3_POSN                                    0x7
#define _PORTB_KBI3_POSITION                                0x7
#define _PORTB_KBI3_SIZE                                    0x1
#define _PORTB_KBI3_LENGTH                                  0x1
#define _PORTB_KBI3_MASK                                    0x80
#define _PORTB_INT0_POSN                                    0x0
#define _PORTB_INT0_POSITION                                0x0
#define _PORTB_INT0_SIZE                                    0x1
#define _PORTB_INT0_LENGTH                                  0x1
#define _PORTB_INT0_MASK                                    0x1
#define _PORTB_CTED1_POSN                                   0x2
#define _PORTB_CTED1_POSITION                               0x2
#define _PORTB_CTED1_SIZE                                   0x1
#define _PORTB_CTED1_LENGTH                                 0x1
#define _PORTB_CTED1_MASK                                   0x4
#define _PORTB_CTED2_POSN                                   0x3
#define _PORTB_CTED2_POSITION                               0x3
#define _PORTB_CTED2_SIZE                                   0x1
#define _PORTB_CTED2_LENGTH                                 0x1
#define _PORTB_CTED2_MASK                                   0x8
#define _PORTB_KBI0_POSN                                    0x4
#define _PORTB_KBI0_POSITION                                0x4
#define _PORTB_KBI0_SIZE                                    0x1
#define _PORTB_KBI0_LENGTH                                  0x1
#define _PORTB_KBI0_MASK                                    0x10
#define _PORTB_KBI1_POSN                                    0x5
#define _PORTB_KBI1_POSITION                                0x5
#define _PORTB_KBI1_SIZE                                    0x1
#define _PORTB_KBI1_LENGTH                                  0x1
#define _PORTB_KBI1_MASK                                    0x20
#define _PORTB_PGC_POSN                                     0x6
#define _PORTB_PGC_POSITION                                 0x6
#define _PORTB_PGC_SIZE                                     0x1
#define _PORTB_PGC_LENGTH                                   0x1
#define _PORTB_PGC_MASK                                     0x40
#define _PORTB_PGD_POSN                                     0x7
#define _PORTB_PGD_POSITION                                 0x7
#define _PORTB_PGD_SIZE                                     0x1
#define _PORTB_PGD_LENGTH                                   0x1
#define _PORTB_PGD_MASK                                     0x80
#define _PORTB_RP3_POSN                                     0x0
#define _PORTB_RP3_POSITION                                 0x0
#define _PORTB_RP3_SIZE                                     0x1
#define _PORTB_RP3_LENGTH                                   0x1
#define _PORTB_RP3_MASK                                     0x1
#define _PORTB_RTCC_POSN                                    0x1
#define _PORTB_RTCC_POSITION                                0x1
#define _PORTB_RTCC_SIZE                                    0x1
#define _PORTB_RTCC_LENGTH                                  0x1
#define _PORTB_RTCC_MASK                                    0x2
#define _PORTB_SCK1_POSN                                    0x4
#define _PORTB_SCK1_POSITION                                0x4
#define _PORTB_SCK1_SIZE                                    0x1
#define _PORTB_SCK1_LENGTH                                  0x1
#define _PORTB_SCK1_MASK                                    0x10
#define _PORTB_SDI1_POSN                                    0x5
#define _PORTB_SDI1_POSITION                                0x5
#define _PORTB_SDI1_SIZE                                    0x1
#define _PORTB_SDI1_LENGTH                                  0x1
#define _PORTB_SDI1_MASK                                    0x20
#define _PORTB_RP9_POSN                                     0x6
#define _PORTB_RP9_POSITION                                 0x6
#define _PORTB_RP9_SIZE                                     0x1
#define _PORTB_RP9_LENGTH                                   0x1
#define _PORTB_RP9_MASK                                     0x40
#define _PORTB_RP10_POSN                                    0x7
#define _PORTB_RP10_POSITION                                0x7
#define _PORTB_RP10_SIZE                                    0x1
#define _PORTB_RP10_LENGTH                                  0x1
#define _PORTB_RP10_MASK                                    0x80
#define _PORTB_RP4_POSN                                     0x1
#define _PORTB_RP4_POSITION                                 0x1
#define _PORTB_RP4_SIZE                                     0x1
#define _PORTB_RP4_LENGTH                                   0x1
#define _PORTB_RP4_MASK                                     0x2
#define _PORTB_VMO_POSN                                     0x2
#define _PORTB_VMO_POSITION                                 0x2
#define _PORTB_VMO_SIZE                                     0x1
#define _PORTB_VMO_LENGTH                                   0x1
#define _PORTB_VMO_MASK                                     0x4
#define _PORTB_VPO_POSN                                     0x3
#define _PORTB_VPO_POSITION                                 0x3
#define _PORTB_VPO_SIZE                                     0x1
#define _PORTB_VPO_LENGTH                                   0x1
#define _PORTB_VPO_MASK                                     0x8
#define _PORTB_SCL1_POSN                                    0x4
#define _PORTB_SCL1_POSITION                                0x4
#define _PORTB_SCL1_SIZE                                    0x1
#define _PORTB_SCL1_LENGTH                                  0x1
#define _PORTB_SCL1_MASK                                    0x10
#define _PORTB_SDA1_POSN                                    0x5
#define _PORTB_SDA1_POSITION                                0x5
#define _PORTB_SDA1_SIZE                                    0x1
#define _PORTB_SDA1_LENGTH                                  0x1
#define _PORTB_SDA1_MASK                                    0x20
#define _PORTB_REFO_POSN                                    0x2
#define _PORTB_REFO_POSITION                                0x2
#define _PORTB_REFO_SIZE                                    0x1
#define _PORTB_REFO_LENGTH                                  0x1
#define _PORTB_REFO_MASK                                    0x4
#define _PORTB_RP6_POSN                                     0x3
#define _PORTB_RP6_POSITION                                 0x3
#define _PORTB_RP6_SIZE                                     0x1
#define _PORTB_RP6_LENGTH                                   0x1
#define _PORTB_RP6_MASK                                     0x8
#define _PORTB_RP7_POSN                                     0x4
#define _PORTB_RP7_POSITION                                 0x4
#define _PORTB_RP7_SIZE                                     0x1
#define _PORTB_RP7_LENGTH                                   0x1
#define _PORTB_RP7_MASK                                     0x10
#define _PORTB_RP8_POSN                                     0x5
#define _PORTB_RP8_POSITION                                 0x5
#define _PORTB_RP8_SIZE                                     0x1
#define _PORTB_RP8_LENGTH                                   0x1
#define _PORTB_RP8_MASK                                     0x20
#define _PORTB_C3INC_POSN                                   0x1
#define _PORTB_C3INC_POSITION                               0x1
#define _PORTB_C3INC_SIZE                                   0x1
#define _PORTB_C3INC_LENGTH                                 0x1
#define _PORTB_C3INC_MASK                                   0x2
#define _PORTB_RP5_POSN                                     0x2
#define _PORTB_RP5_POSITION                                 0x2
#define _PORTB_RP5_SIZE                                     0x1
#define _PORTB_RP5_LENGTH                                   0x1
#define _PORTB_RP5_MASK                                     0x4
#define _PORTB_C3INA_POSN                                   0x3
#define _PORTB_C3INA_POSITION                               0x3
#define _PORTB_C3INA_SIZE                                   0x1
#define _PORTB_C3INA_LENGTH                                 0x1
#define _PORTB_C3INA_MASK                                   0x8
#define _PORTB_CCP4_POSN                                    0x4
#define _PORTB_CCP4_POSITION                                0x4
#define _PORTB_CCP4_SIZE                                    0x1
#define _PORTB_CCP4_LENGTH                                  0x1
#define _PORTB_CCP4_MASK                                    0x10
#define _PORTB_CCP5_POSN                                    0x5
#define _PORTB_CCP5_POSITION                                0x5
#define _PORTB_CCP5_SIZE                                    0x1
#define _PORTB_CCP5_LENGTH                                  0x1
#define _PORTB_CCP5_MASK                                    0x20
#define _PORTB_CCP6_POSN                                    0x6
#define _PORTB_CCP6_POSITION                                0x6
#define _PORTB_CCP6_SIZE                                    0x1
#define _PORTB_CCP6_LENGTH                                  0x1
#define _PORTB_CCP6_MASK                                    0x40
#define _PORTB_CCP7_POSN                                    0x7
#define _PORTB_CCP7_POSITION                                0x7
#define _PORTB_CCP7_SIZE                                    0x1
#define _PORTB_CCP7_LENGTH                                  0x1
#define _PORTB_CCP7_MASK                                    0x80
#define _PORTB_C3IND_POSN                                   0x0
#define _PORTB_C3IND_POSITION                               0x0
#define _PORTB_C3IND_SIZE                                   0x1
#define _PORTB_C3IND_LENGTH                                 0x1
#define _PORTB_C3IND_MASK                                   0x1
#define _PORTB_C2INC_POSN                                   0x2
#define _PORTB_C2INC_POSITION                               0x2
#define _PORTB_C2INC_SIZE                                   0x1
#define _PORTB_C2INC_LENGTH                                 0x1
#define _PORTB_C2INC_MASK                                   0x4
#define _PORTB_CCP2_PA2_POSN                                0x3
#define _PORTB_CCP2_PA2_POSITION                            0x3
#define _PORTB_CCP2_PA2_SIZE                                0x1
#define _PORTB_CCP2_PA2_LENGTH                              0x1
#define _PORTB_CCP2_PA2_MASK                                0x8

// Register: PORTC
extern volatile unsigned char           PORTC               @ 0xF82;
#ifndef _LIB_BUILD
asm("PORTC equ 0F82h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RC0                    :1;
        unsigned RC1                    :1;
        unsigned RC2                    :1;
        unsigned                        :1;
        unsigned RC4                    :1;
        unsigned RC5                    :1;
        unsigned RC6                    :1;
        unsigned RC7                    :1;
    };
    struct {
        unsigned T1OSO                  :1;
        unsigned T1OSI                  :1;
        unsigned AN11                   :1;
        unsigned                        :1;
        unsigned D_MINUS                :1;
        unsigned D_PLUS                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_UOE                :1;
    };
    struct {
        unsigned T1CKI                  :1;
        unsigned nUOE                   :1;
        unsigned CTPLS                  :1;
        unsigned                        :1;
        unsigned VM                     :1;
        unsigned VP                     :1;
        unsigned TX1                    :1;
        unsigned RX1                    :1;
    };
    struct {
        unsigned RP11                   :1;
        unsigned RP12                   :1;
        unsigned RP13                   :1;
        unsigned                        :3;
        unsigned CK1                    :1;
        unsigned DT1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned RP17                   :1;
        unsigned SDO1                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned C2IND                  :1;
        unsigned                        :4;
        unsigned RP18                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCP8                   :1;
        unsigned                        :4;
        unsigned CCP9                   :1;
        unsigned CCP10                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCP2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned PA1                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned PA2                    :1;
    };
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0xF82;
// bitfield macros
#define _PORTC_RC0_POSN                                     0x0
#define _PORTC_RC0_POSITION                                 0x0
#define _PORTC_RC0_SIZE                                     0x1
#define _PORTC_RC0_LENGTH                                   0x1
#define _PORTC_RC0_MASK                                     0x1
#define _PORTC_RC1_POSN                                     0x1
#define _PORTC_RC1_POSITION                                 0x1
#define _PORTC_RC1_SIZE                                     0x1
#define _PORTC_RC1_LENGTH                                   0x1
#define _PORTC_RC1_MASK                                     0x2
#define _PORTC_RC2_POSN                                     0x2
#define _PORTC_RC2_POSITION                                 0x2
#define _PORTC_RC2_SIZE                                     0x1
#define _PORTC_RC2_LENGTH                                   0x1
#define _PORTC_RC2_MASK                                     0x4
#define _PORTC_RC4_POSN                                     0x4
#define _PORTC_RC4_POSITION                                 0x4
#define _PORTC_RC4_SIZE                                     0x1
#define _PORTC_RC4_LENGTH                                   0x1
#define _PORTC_RC4_MASK                                     0x10
#define _PORTC_RC5_POSN                                     0x5
#define _PORTC_RC5_POSITION                                 0x5
#define _PORTC_RC5_SIZE                                     0x1
#define _PORTC_RC5_LENGTH                                   0x1
#define _PORTC_RC5_MASK                                     0x20
#define _PORTC_RC6_POSN                                     0x6
#define _PORTC_RC6_POSITION                                 0x6
#define _PORTC_RC6_SIZE                                     0x1
#define _PORTC_RC6_LENGTH                                   0x1
#define _PORTC_RC6_MASK                                     0x40
#define _PORTC_RC7_POSN                                     0x7
#define _PORTC_RC7_POSITION                                 0x7
#define _PORTC_RC7_SIZE                                     0x1
#define _PORTC_RC7_LENGTH                                   0x1
#define _PORTC_RC7_MASK                                     0x80
#define _PORTC_T1OSO_POSN                                   0x0
#define _PORTC_T1OSO_POSITION                               0x0
#define _PORTC_T1OSO_SIZE                                   0x1
#define _PORTC_T1OSO_LENGTH                                 0x1
#define _PORTC_T1OSO_MASK                                   0x1
#define _PORTC_T1OSI_POSN                                   0x1
#define _PORTC_T1OSI_POSITION                               0x1
#define _PORTC_T1OSI_SIZE                                   0x1
#define _PORTC_T1OSI_LENGTH                                 0x1
#define _PORTC_T1OSI_MASK                                   0x2
#define _PORTC_AN11_POSN                                    0x2
#define _PORTC_AN11_POSITION                                0x2
#define _PORTC_AN11_SIZE                                    0x1
#define _PORTC_AN11_LENGTH                                  0x1
#define _PORTC_AN11_MASK                                    0x4
#define _PORTC_D_MINUS_POSN                                 0x4
#define _PORTC_D_MINUS_POSITION                             0x4
#define _PORTC_D_MINUS_SIZE                                 0x1
#define _PORTC_D_MINUS_LENGTH                               0x1
#define _PORTC_D_MINUS_MASK                                 0x10
#define _PORTC_D_PLUS_POSN                                  0x5
#define _PORTC_D_PLUS_POSITION                              0x5
#define _PORTC_D_PLUS_SIZE                                  0x1
#define _PORTC_D_PLUS_LENGTH                                0x1
#define _PORTC_D_PLUS_MASK                                  0x20
#define _PORTC_NOT_UOE_POSN                                 0x1
#define _PORTC_NOT_UOE_POSITION                             0x1
#define _PORTC_NOT_UOE_SIZE                                 0x1
#define _PORTC_NOT_UOE_LENGTH                               0x1
#define _PORTC_NOT_UOE_MASK                                 0x2
#define _PORTC_T1CKI_POSN                                   0x0
#define _PORTC_T1CKI_POSITION                               0x0
#define _PORTC_T1CKI_SIZE                                   0x1
#define _PORTC_T1CKI_LENGTH                                 0x1
#define _PORTC_T1CKI_MASK                                   0x1
#define _PORTC_nUOE_POSN                                    0x1
#define _PORTC_nUOE_POSITION                                0x1
#define _PORTC_nUOE_SIZE                                    0x1
#define _PORTC_nUOE_LENGTH                                  0x1
#define _PORTC_nUOE_MASK                                    0x2
#define _PORTC_CTPLS_POSN                                   0x2
#define _PORTC_CTPLS_POSITION                               0x2
#define _PORTC_CTPLS_SIZE                                   0x1
#define _PORTC_CTPLS_LENGTH                                 0x1
#define _PORTC_CTPLS_MASK                                   0x4
#define _PORTC_VM_POSN                                      0x4
#define _PORTC_VM_POSITION                                  0x4
#define _PORTC_VM_SIZE                                      0x1
#define _PORTC_VM_LENGTH                                    0x1
#define _PORTC_VM_MASK                                      0x10
#define _PORTC_VP_POSN                                      0x5
#define _PORTC_VP_POSITION                                  0x5
#define _PORTC_VP_SIZE                                      0x1
#define _PORTC_VP_LENGTH                                    0x1
#define _PORTC_VP_MASK                                      0x20
#define _PORTC_TX1_POSN                                     0x6
#define _PORTC_TX1_POSITION                                 0x6
#define _PORTC_TX1_SIZE                                     0x1
#define _PORTC_TX1_LENGTH                                   0x1
#define _PORTC_TX1_MASK                                     0x40
#define _PORTC_RX1_POSN                                     0x7
#define _PORTC_RX1_POSITION                                 0x7
#define _PORTC_RX1_SIZE                                     0x1
#define _PORTC_RX1_LENGTH                                   0x1
#define _PORTC_RX1_MASK                                     0x80
#define _PORTC_RP11_POSN                                    0x0
#define _PORTC_RP11_POSITION                                0x0
#define _PORTC_RP11_SIZE                                    0x1
#define _PORTC_RP11_LENGTH                                  0x1
#define _PORTC_RP11_MASK                                    0x1
#define _PORTC_RP12_POSN                                    0x1
#define _PORTC_RP12_POSITION                                0x1
#define _PORTC_RP12_SIZE                                    0x1
#define _PORTC_RP12_LENGTH                                  0x1
#define _PORTC_RP12_MASK                                    0x2
#define _PORTC_RP13_POSN                                    0x2
#define _PORTC_RP13_POSITION                                0x2
#define _PORTC_RP13_SIZE                                    0x1
#define _PORTC_RP13_LENGTH                                  0x1
#define _PORTC_RP13_MASK                                    0x4
#define _PORTC_CK1_POSN                                     0x6
#define _PORTC_CK1_POSITION                                 0x6
#define _PORTC_CK1_SIZE                                     0x1
#define _PORTC_CK1_LENGTH                                   0x1
#define _PORTC_CK1_MASK                                     0x40
#define _PORTC_DT1_POSN                                     0x7
#define _PORTC_DT1_POSITION                                 0x7
#define _PORTC_DT1_SIZE                                     0x1
#define _PORTC_DT1_LENGTH                                   0x1
#define _PORTC_DT1_MASK                                     0x80
#define _PORTC_RP17_POSN                                    0x6
#define _PORTC_RP17_POSITION                                0x6
#define _PORTC_RP17_SIZE                                    0x1
#define _PORTC_RP17_LENGTH                                  0x1
#define _PORTC_RP17_MASK                                    0x40
#define _PORTC_SDO1_POSN                                    0x7
#define _PORTC_SDO1_POSITION                                0x7
#define _PORTC_SDO1_SIZE                                    0x1
#define _PORTC_SDO1_LENGTH                                  0x1
#define _PORTC_SDO1_MASK                                    0x80
#define _PORTC_C2IND_POSN                                   0x2
#define _PORTC_C2IND_POSITION                               0x2
#define _PORTC_C2IND_SIZE                                   0x1
#define _PORTC_C2IND_LENGTH                                 0x1
#define _PORTC_C2IND_MASK                                   0x4
#define _PORTC_RP18_POSN                                    0x7
#define _PORTC_RP18_POSITION                                0x7
#define _PORTC_RP18_SIZE                                    0x1
#define _PORTC_RP18_LENGTH                                  0x1
#define _PORTC_RP18_MASK                                    0x80
#define _PORTC_CCP8_POSN                                    0x1
#define _PORTC_CCP8_POSITION                                0x1
#define _PORTC_CCP8_SIZE                                    0x1
#define _PORTC_CCP8_LENGTH                                  0x1
#define _PORTC_CCP8_MASK                                    0x2
#define _PORTC_CCP9_POSN                                    0x6
#define _PORTC_CCP9_POSITION                                0x6
#define _PORTC_CCP9_SIZE                                    0x1
#define _PORTC_CCP9_LENGTH                                  0x1
#define _PORTC_CCP9_MASK                                    0x40
#define _PORTC_CCP10_POSN                                   0x7
#define _PORTC_CCP10_POSITION                               0x7
#define _PORTC_CCP10_SIZE                                   0x1
#define _PORTC_CCP10_LENGTH                                 0x1
#define _PORTC_CCP10_MASK                                   0x80
#define _PORTC_CCP2_POSN                                    0x1
#define _PORTC_CCP2_POSITION                                0x1
#define _PORTC_CCP2_SIZE                                    0x1
#define _PORTC_CCP2_LENGTH                                  0x1
#define _PORTC_CCP2_MASK                                    0x2
#define _PORTC_PA1_POSN                                     0x2
#define _PORTC_PA1_POSITION                                 0x2
#define _PORTC_PA1_SIZE                                     0x1
#define _PORTC_PA1_LENGTH                                   0x1
#define _PORTC_PA1_MASK                                     0x4
#define _PORTC_PA2_POSN                                     0x1
#define _PORTC_PA2_POSITION                                 0x1
#define _PORTC_PA2_SIZE                                     0x1
#define _PORTC_PA2_LENGTH                                   0x1
#define _PORTC_PA2_MASK                                     0x2

// Register: HLVDCON
extern volatile unsigned char           HLVDCON             @ 0xF85;
#ifndef _LIB_BUILD
asm("HLVDCON equ 0F85h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned HLVDL                  :4;
        unsigned HLVDEN                 :1;
        unsigned IRVST                  :1;
        unsigned BGVST                  :1;
        unsigned VDIRMAG                :1;
    };
    struct {
        unsigned HLVDL0                 :1;
        unsigned HLVDL1                 :1;
        unsigned HLVDL2                 :1;
        unsigned HLVDL3                 :1;
    };
} HLVDCONbits_t;
extern volatile HLVDCONbits_t HLVDCONbits @ 0xF85;
// bitfield macros
#define _HLVDCON_HLVDL_POSN                                 0x0
#define _HLVDCON_HLVDL_POSITION                             0x0
#define _HLVDCON_HLVDL_SIZE                                 0x4
#define _HLVDCON_HLVDL_LENGTH                               0x4
#define _HLVDCON_HLVDL_MASK                                 0xF
#define _HLVDCON_HLVDEN_POSN                                0x4
#define _HLVDCON_HLVDEN_POSITION                            0x4
#define _HLVDCON_HLVDEN_SIZE                                0x1
#define _HLVDCON_HLVDEN_LENGTH                              0x1
#define _HLVDCON_HLVDEN_MASK                                0x10
#define _HLVDCON_IRVST_POSN                                 0x5
#define _HLVDCON_IRVST_POSITION                             0x5
#define _HLVDCON_IRVST_SIZE                                 0x1
#define _HLVDCON_IRVST_LENGTH                               0x1
#define _HLVDCON_IRVST_MASK                                 0x20
#define _HLVDCON_BGVST_POSN                                 0x6
#define _HLVDCON_BGVST_POSITION                             0x6
#define _HLVDCON_BGVST_SIZE                                 0x1
#define _HLVDCON_BGVST_LENGTH                               0x1
#define _HLVDCON_BGVST_MASK                                 0x40
#define _HLVDCON_VDIRMAG_POSN                               0x7
#define _HLVDCON_VDIRMAG_POSITION                           0x7
#define _HLVDCON_VDIRMAG_SIZE                               0x1
#define _HLVDCON_VDIRMAG_LENGTH                             0x1
#define _HLVDCON_VDIRMAG_MASK                               0x80
#define _HLVDCON_HLVDL0_POSN                                0x0
#define _HLVDCON_HLVDL0_POSITION                            0x0
#define _HLVDCON_HLVDL0_SIZE                                0x1
#define _HLVDCON_HLVDL0_LENGTH                              0x1
#define _HLVDCON_HLVDL0_MASK                                0x1
#define _HLVDCON_HLVDL1_POSN                                0x1
#define _HLVDCON_HLVDL1_POSITION                            0x1
#define _HLVDCON_HLVDL1_SIZE                                0x1
#define _HLVDCON_HLVDL1_LENGTH                              0x1
#define _HLVDCON_HLVDL1_MASK                                0x2
#define _HLVDCON_HLVDL2_POSN                                0x2
#define _HLVDCON_HLVDL2_POSITION                            0x2
#define _HLVDCON_HLVDL2_SIZE                                0x1
#define _HLVDCON_HLVDL2_LENGTH                              0x1
#define _HLVDCON_HLVDL2_MASK                                0x4
#define _HLVDCON_HLVDL3_POSN                                0x3
#define _HLVDCON_HLVDL3_POSITION                            0x3
#define _HLVDCON_HLVDL3_SIZE                                0x1
#define _HLVDCON_HLVDL3_LENGTH                              0x1
#define _HLVDCON_HLVDL3_MASK                                0x8

// Register: DMACON2
extern volatile unsigned char           DMACON2             @ 0xF86;
#ifndef _LIB_BUILD
asm("DMACON2 equ 0F86h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INTLVL                 :4;
        unsigned DLYCYC                 :4;
    };
    struct {
        unsigned INTLVL0                :1;
        unsigned INTLVL1                :1;
        unsigned INTLVL2                :1;
        unsigned INTLVL3                :1;
        unsigned DLYCYC0                :1;
        unsigned DLYCYC1                :1;
        unsigned DLYCYC2                :1;
        unsigned DLYCYC3                :1;
    };
} DMACON2bits_t;
extern volatile DMACON2bits_t DMACON2bits @ 0xF86;
// bitfield macros
#define _DMACON2_INTLVL_POSN                                0x0
#define _DMACON2_INTLVL_POSITION                            0x0
#define _DMACON2_INTLVL_SIZE                                0x4
#define _DMACON2_INTLVL_LENGTH                              0x4
#define _DMACON2_INTLVL_MASK                                0xF
#define _DMACON2_DLYCYC_POSN                                0x4
#define _DMACON2_DLYCYC_POSITION                            0x4
#define _DMACON2_DLYCYC_SIZE                                0x4
#define _DMACON2_DLYCYC_LENGTH                              0x4
#define _DMACON2_DLYCYC_MASK                                0xF0
#define _DMACON2_INTLVL0_POSN                               0x0
#define _DMACON2_INTLVL0_POSITION                           0x0
#define _DMACON2_INTLVL0_SIZE                               0x1
#define _DMACON2_INTLVL0_LENGTH                             0x1
#define _DMACON2_INTLVL0_MASK                               0x1
#define _DMACON2_INTLVL1_POSN                               0x1
#define _DMACON2_INTLVL1_POSITION                           0x1
#define _DMACON2_INTLVL1_SIZE                               0x1
#define _DMACON2_INTLVL1_LENGTH                             0x1
#define _DMACON2_INTLVL1_MASK                               0x2
#define _DMACON2_INTLVL2_POSN                               0x2
#define _DMACON2_INTLVL2_POSITION                           0x2
#define _DMACON2_INTLVL2_SIZE                               0x1
#define _DMACON2_INTLVL2_LENGTH                             0x1
#define _DMACON2_INTLVL2_MASK                               0x4
#define _DMACON2_INTLVL3_POSN                               0x3
#define _DMACON2_INTLVL3_POSITION                           0x3
#define _DMACON2_INTLVL3_SIZE                               0x1
#define _DMACON2_INTLVL3_LENGTH                             0x1
#define _DMACON2_INTLVL3_MASK                               0x8
#define _DMACON2_DLYCYC0_POSN                               0x4
#define _DMACON2_DLYCYC0_POSITION                           0x4
#define _DMACON2_DLYCYC0_SIZE                               0x1
#define _DMACON2_DLYCYC0_LENGTH                             0x1
#define _DMACON2_DLYCYC0_MASK                               0x10
#define _DMACON2_DLYCYC1_POSN                               0x5
#define _DMACON2_DLYCYC1_POSITION                           0x5
#define _DMACON2_DLYCYC1_SIZE                               0x1
#define _DMACON2_DLYCYC1_LENGTH                             0x1
#define _DMACON2_DLYCYC1_MASK                               0x20
#define _DMACON2_DLYCYC2_POSN                               0x6
#define _DMACON2_DLYCYC2_POSITION                           0x6
#define _DMACON2_DLYCYC2_SIZE                               0x1
#define _DMACON2_DLYCYC2_LENGTH                             0x1
#define _DMACON2_DLYCYC2_MASK                               0x40
#define _DMACON2_DLYCYC3_POSN                               0x7
#define _DMACON2_DLYCYC3_POSITION                           0x7
#define _DMACON2_DLYCYC3_SIZE                               0x1
#define _DMACON2_DLYCYC3_LENGTH                             0x1
#define _DMACON2_DLYCYC3_MASK                               0x80

// Register: OSCCON2
extern volatile unsigned char           OSCCON2             @ 0xF87;
#ifndef _LIB_BUILD
asm("OSCCON2 equ 0F87h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned PRISD                  :1;
        unsigned SOSCGO                 :1;
        unsigned SOSCDRV                :1;
        unsigned                        :1;
        unsigned SOSCRUN                :1;
    };
} OSCCON2bits_t;
extern volatile OSCCON2bits_t OSCCON2bits @ 0xF87;
// bitfield macros
#define _OSCCON2_PRISD_POSN                                 0x2
#define _OSCCON2_PRISD_POSITION                             0x2
#define _OSCCON2_PRISD_SIZE                                 0x1
#define _OSCCON2_PRISD_LENGTH                               0x1
#define _OSCCON2_PRISD_MASK                                 0x4
#define _OSCCON2_SOSCGO_POSN                                0x3
#define _OSCCON2_SOSCGO_POSITION                            0x3
#define _OSCCON2_SOSCGO_SIZE                                0x1
#define _OSCCON2_SOSCGO_LENGTH                              0x1
#define _OSCCON2_SOSCGO_MASK                                0x8
#define _OSCCON2_SOSCDRV_POSN                               0x4
#define _OSCCON2_SOSCDRV_POSITION                           0x4
#define _OSCCON2_SOSCDRV_SIZE                               0x1
#define _OSCCON2_SOSCDRV_LENGTH                             0x1
#define _OSCCON2_SOSCDRV_MASK                               0x10
#define _OSCCON2_SOSCRUN_POSN                               0x6
#define _OSCCON2_SOSCRUN_POSITION                           0x6
#define _OSCCON2_SOSCRUN_SIZE                               0x1
#define _OSCCON2_SOSCRUN_LENGTH                             0x1
#define _OSCCON2_SOSCRUN_MASK                               0x40

// Register: DMACON1
extern volatile unsigned char           DMACON1             @ 0xF88;
#ifndef _LIB_BUILD
asm("DMACON1 equ 0F88h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned DMAEN                  :1;
        unsigned DLYINTEN               :1;
        unsigned DUPLEX0                :1;
        unsigned DUPLEX1                :1;
        unsigned RXINC                  :1;
        unsigned TXINC                  :1;
        unsigned SSCON0                 :1;
        unsigned SSCON1                 :1;
    };
} DMACON1bits_t;
extern volatile DMACON1bits_t DMACON1bits @ 0xF88;
// bitfield macros
#define _DMACON1_DMAEN_POSN                                 0x0
#define _DMACON1_DMAEN_POSITION                             0x0
#define _DMACON1_DMAEN_SIZE                                 0x1
#define _DMACON1_DMAEN_LENGTH                               0x1
#define _DMACON1_DMAEN_MASK                                 0x1
#define _DMACON1_DLYINTEN_POSN                              0x1
#define _DMACON1_DLYINTEN_POSITION                          0x1
#define _DMACON1_DLYINTEN_SIZE                              0x1
#define _DMACON1_DLYINTEN_LENGTH                            0x1
#define _DMACON1_DLYINTEN_MASK                              0x2
#define _DMACON1_DUPLEX0_POSN                               0x2
#define _DMACON1_DUPLEX0_POSITION                           0x2
#define _DMACON1_DUPLEX0_SIZE                               0x1
#define _DMACON1_DUPLEX0_LENGTH                             0x1
#define _DMACON1_DUPLEX0_MASK                               0x4
#define _DMACON1_DUPLEX1_POSN                               0x3
#define _DMACON1_DUPLEX1_POSITION                           0x3
#define _DMACON1_DUPLEX1_SIZE                               0x1
#define _DMACON1_DUPLEX1_LENGTH                             0x1
#define _DMACON1_DUPLEX1_MASK                               0x8
#define _DMACON1_RXINC_POSN                                 0x4
#define _DMACON1_RXINC_POSITION                             0x4
#define _DMACON1_RXINC_SIZE                                 0x1
#define _DMACON1_RXINC_LENGTH                               0x1
#define _DMACON1_RXINC_MASK                                 0x10
#define _DMACON1_TXINC_POSN                                 0x5
#define _DMACON1_TXINC_POSITION                             0x5
#define _DMACON1_TXINC_SIZE                                 0x1
#define _DMACON1_TXINC_LENGTH                               0x1
#define _DMACON1_TXINC_MASK                                 0x20
#define _DMACON1_SSCON0_POSN                                0x6
#define _DMACON1_SSCON0_POSITION                            0x6
#define _DMACON1_SSCON0_SIZE                                0x1
#define _DMACON1_SSCON0_LENGTH                              0x1
#define _DMACON1_SSCON0_MASK                                0x40
#define _DMACON1_SSCON1_POSN                                0x7
#define _DMACON1_SSCON1_POSITION                            0x7
#define _DMACON1_SSCON1_SIZE                                0x1
#define _DMACON1_SSCON1_LENGTH                              0x1
#define _DMACON1_SSCON1_MASK                                0x80

// Register: LATA
extern volatile unsigned char           LATA                @ 0xF89;
#ifndef _LIB_BUILD
asm("LATA equ 0F89h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATA0                  :1;
        unsigned LATA1                  :1;
        unsigned LATA2                  :1;
        unsigned LATA3                  :1;
        unsigned                        :1;
        unsigned LATA5                  :1;
        unsigned LATA6                  :1;
        unsigned LATA7                  :1;
    };
    struct {
        unsigned LA0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned LA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned LA2                    :1;
    };
    struct {
        unsigned                        :3;
        unsigned LA3                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned LA5                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned LA6                    :1;
    };
    struct {
        unsigned                        :7;
        unsigned LA7                    :1;
    };
} LATAbits_t;
extern volatile LATAbits_t LATAbits @ 0xF89;
// bitfield macros
#define _LATA_LATA0_POSN                                    0x0
#define _LATA_LATA0_POSITION                                0x0
#define _LATA_LATA0_SIZE                                    0x1
#define _LATA_LATA0_LENGTH                                  0x1
#define _LATA_LATA0_MASK                                    0x1
#define _LATA_LATA1_POSN                                    0x1
#define _LATA_LATA1_POSITION                                0x1
#define _LATA_LATA1_SIZE                                    0x1
#define _LATA_LATA1_LENGTH                                  0x1
#define _LATA_LATA1_MASK                                    0x2
#define _LATA_LATA2_POSN                                    0x2
#define _LATA_LATA2_POSITION                                0x2
#define _LATA_LATA2_SIZE                                    0x1
#define _LATA_LATA2_LENGTH                                  0x1
#define _LATA_LATA2_MASK                                    0x4
#define _LATA_LATA3_POSN                                    0x3
#define _LATA_LATA3_POSITION                                0x3
#define _LATA_LATA3_SIZE                                    0x1
#define _LATA_LATA3_LENGTH                                  0x1
#define _LATA_LATA3_MASK                                    0x8
#define _LATA_LATA5_POSN                                    0x5
#define _LATA_LATA5_POSITION                                0x5
#define _LATA_LATA5_SIZE                                    0x1
#define _LATA_LATA5_LENGTH                                  0x1
#define _LATA_LATA5_MASK                                    0x20
#define _LATA_LATA6_POSN                                    0x6
#define _LATA_LATA6_POSITION                                0x6
#define _LATA_LATA6_SIZE                                    0x1
#define _LATA_LATA6_LENGTH                                  0x1
#define _LATA_LATA6_MASK                                    0x40
#define _LATA_LATA7_POSN                                    0x7
#define _LATA_LATA7_POSITION                                0x7
#define _LATA_LATA7_SIZE                                    0x1
#define _LATA_LATA7_LENGTH                                  0x1
#define _LATA_LATA7_MASK                                    0x80
#define _LATA_LA0_POSN                                      0x0
#define _LATA_LA0_POSITION                                  0x0
#define _LATA_LA0_SIZE                                      0x1
#define _LATA_LA0_LENGTH                                    0x1
#define _LATA_LA0_MASK                                      0x1
#define _LATA_LA1_POSN                                      0x1
#define _LATA_LA1_POSITION                                  0x1
#define _LATA_LA1_SIZE                                      0x1
#define _LATA_LA1_LENGTH                                    0x1
#define _LATA_LA1_MASK                                      0x2
#define _LATA_LA2_POSN                                      0x2
#define _LATA_LA2_POSITION                                  0x2
#define _LATA_LA2_SIZE                                      0x1
#define _LATA_LA2_LENGTH                                    0x1
#define _LATA_LA2_MASK                                      0x4
#define _LATA_LA3_POSN                                      0x3
#define _LATA_LA3_POSITION                                  0x3
#define _LATA_LA3_SIZE                                      0x1
#define _LATA_LA3_LENGTH                                    0x1
#define _LATA_LA3_MASK                                      0x8
#define _LATA_LA5_POSN                                      0x5
#define _LATA_LA5_POSITION                                  0x5
#define _LATA_LA5_SIZE                                      0x1
#define _LATA_LA5_LENGTH                                    0x1
#define _LATA_LA5_MASK                                      0x20
#define _LATA_LA6_POSN                                      0x6
#define _LATA_LA6_POSITION                                  0x6
#define _LATA_LA6_SIZE                                      0x1
#define _LATA_LA6_LENGTH                                    0x1
#define _LATA_LA6_MASK                                      0x40
#define _LATA_LA7_POSN                                      0x7
#define _LATA_LA7_POSITION                                  0x7
#define _LATA_LA7_SIZE                                      0x1
#define _LATA_LA7_LENGTH                                    0x1
#define _LATA_LA7_MASK                                      0x80

// Register: LATB
extern volatile unsigned char           LATB                @ 0xF8A;
#ifndef _LIB_BUILD
asm("LATB equ 0F8Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATB0                  :1;
        unsigned LATB1                  :1;
        unsigned LATB2                  :1;
        unsigned LATB3                  :1;
        unsigned LATB4                  :1;
        unsigned LATB5                  :1;
        unsigned LATB6                  :1;
        unsigned LATB7                  :1;
    };
    struct {
        unsigned LB0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned LB1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned LB2                    :1;
    };
    struct {
        unsigned                        :3;
        unsigned LB3                    :1;
    };
    struct {
        unsigned                        :4;
        unsigned LB4                    :1;
    };
    struct {
        unsigned                        :5;
        unsigned LB5                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned LB6                    :1;
    };
    struct {
        unsigned                        :7;
        unsigned LB7                    :1;
    };
} LATBbits_t;
extern volatile LATBbits_t LATBbits @ 0xF8A;
// bitfield macros
#define _LATB_LATB0_POSN                                    0x0
#define _LATB_LATB0_POSITION                                0x0
#define _LATB_LATB0_SIZE                                    0x1
#define _LATB_LATB0_LENGTH                                  0x1
#define _LATB_LATB0_MASK                                    0x1
#define _LATB_LATB1_POSN                                    0x1
#define _LATB_LATB1_POSITION                                0x1
#define _LATB_LATB1_SIZE                                    0x1
#define _LATB_LATB1_LENGTH                                  0x1
#define _LATB_LATB1_MASK                                    0x2
#define _LATB_LATB2_POSN                                    0x2
#define _LATB_LATB2_POSITION                                0x2
#define _LATB_LATB2_SIZE                                    0x1
#define _LATB_LATB2_LENGTH                                  0x1
#define _LATB_LATB2_MASK                                    0x4
#define _LATB_LATB3_POSN                                    0x3
#define _LATB_LATB3_POSITION                                0x3
#define _LATB_LATB3_SIZE                                    0x1
#define _LATB_LATB3_LENGTH                                  0x1
#define _LATB_LATB3_MASK                                    0x8
#define _LATB_LATB4_POSN                                    0x4
#define _LATB_LATB4_POSITION                                0x4
#define _LATB_LATB4_SIZE                                    0x1
#define _LATB_LATB4_LENGTH                                  0x1
#define _LATB_LATB4_MASK                                    0x10
#define _LATB_LATB5_POSN                                    0x5
#define _LATB_LATB5_POSITION                                0x5
#define _LATB_LATB5_SIZE                                    0x1
#define _LATB_LATB5_LENGTH                                  0x1
#define _LATB_LATB5_MASK                                    0x20
#define _LATB_LATB6_POSN                                    0x6
#define _LATB_LATB6_POSITION                                0x6
#define _LATB_LATB6_SIZE                                    0x1
#define _LATB_LATB6_LENGTH                                  0x1
#define _LATB_LATB6_MASK                                    0x40
#define _LATB_LATB7_POSN                                    0x7
#define _LATB_LATB7_POSITION                                0x7
#define _LATB_LATB7_SIZE                                    0x1
#define _LATB_LATB7_LENGTH                                  0x1
#define _LATB_LATB7_MASK                                    0x80
#define _LATB_LB0_POSN                                      0x0
#define _LATB_LB0_POSITION                                  0x0
#define _LATB_LB0_SIZE                                      0x1
#define _LATB_LB0_LENGTH                                    0x1
#define _LATB_LB0_MASK                                      0x1
#define _LATB_LB1_POSN                                      0x1
#define _LATB_LB1_POSITION                                  0x1
#define _LATB_LB1_SIZE                                      0x1
#define _LATB_LB1_LENGTH                                    0x1
#define _LATB_LB1_MASK                                      0x2
#define _LATB_LB2_POSN                                      0x2
#define _LATB_LB2_POSITION                                  0x2
#define _LATB_LB2_SIZE                                      0x1
#define _LATB_LB2_LENGTH                                    0x1
#define _LATB_LB2_MASK                                      0x4
#define _LATB_LB3_POSN                                      0x3
#define _LATB_LB3_POSITION                                  0x3
#define _LATB_LB3_SIZE                                      0x1
#define _LATB_LB3_LENGTH                                    0x1
#define _LATB_LB3_MASK                                      0x8
#define _LATB_LB4_POSN                                      0x4
#define _LATB_LB4_POSITION                                  0x4
#define _LATB_LB4_SIZE                                      0x1
#define _LATB_LB4_LENGTH                                    0x1
#define _LATB_LB4_MASK                                      0x10
#define _LATB_LB5_POSN                                      0x5
#define _LATB_LB5_POSITION                                  0x5
#define _LATB_LB5_SIZE                                      0x1
#define _LATB_LB5_LENGTH                                    0x1
#define _LATB_LB5_MASK                                      0x20
#define _LATB_LB6_POSN                                      0x6
#define _LATB_LB6_POSITION                                  0x6
#define _LATB_LB6_SIZE                                      0x1
#define _LATB_LB6_LENGTH                                    0x1
#define _LATB_LB6_MASK                                      0x40
#define _LATB_LB7_POSN                                      0x7
#define _LATB_LB7_POSITION                                  0x7
#define _LATB_LB7_SIZE                                      0x1
#define _LATB_LB7_LENGTH                                    0x1
#define _LATB_LB7_MASK                                      0x80

// Register: LATC
extern volatile unsigned char           LATC                @ 0xF8B;
#ifndef _LIB_BUILD
asm("LATC equ 0F8Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned LATC0                  :1;
        unsigned LATC1                  :1;
        unsigned LATC2                  :1;
        unsigned                        :3;
        unsigned LATC6                  :1;
        unsigned LATC7                  :1;
    };
    struct {
        unsigned LC0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned LC1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned LC2                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned LC6                    :1;
    };
    struct {
        unsigned                        :7;
        unsigned LC7                    :1;
    };
} LATCbits_t;
extern volatile LATCbits_t LATCbits @ 0xF8B;
// bitfield macros
#define _LATC_LATC0_POSN                                    0x0
#define _LATC_LATC0_POSITION                                0x0
#define _LATC_LATC0_SIZE                                    0x1
#define _LATC_LATC0_LENGTH                                  0x1
#define _LATC_LATC0_MASK                                    0x1
#define _LATC_LATC1_POSN                                    0x1
#define _LATC_LATC1_POSITION                                0x1
#define _LATC_LATC1_SIZE                                    0x1
#define _LATC_LATC1_LENGTH                                  0x1
#define _LATC_LATC1_MASK                                    0x2
#define _LATC_LATC2_POSN                                    0x2
#define _LATC_LATC2_POSITION                                0x2
#define _LATC_LATC2_SIZE                                    0x1
#define _LATC_LATC2_LENGTH                                  0x1
#define _LATC_LATC2_MASK                                    0x4
#define _LATC_LATC6_POSN                                    0x6
#define _LATC_LATC6_POSITION                                0x6
#define _LATC_LATC6_SIZE                                    0x1
#define _LATC_LATC6_LENGTH                                  0x1
#define _LATC_LATC6_MASK                                    0x40
#define _LATC_LATC7_POSN                                    0x7
#define _LATC_LATC7_POSITION                                0x7
#define _LATC_LATC7_SIZE                                    0x1
#define _LATC_LATC7_LENGTH                                  0x1
#define _LATC_LATC7_MASK                                    0x80
#define _LATC_LC0_POSN                                      0x0
#define _LATC_LC0_POSITION                                  0x0
#define _LATC_LC0_SIZE                                      0x1
#define _LATC_LC0_LENGTH                                    0x1
#define _LATC_LC0_MASK                                      0x1
#define _LATC_LC1_POSN                                      0x1
#define _LATC_LC1_POSITION                                  0x1
#define _LATC_LC1_SIZE                                      0x1
#define _LATC_LC1_LENGTH                                    0x1
#define _LATC_LC1_MASK                                      0x2
#define _LATC_LC2_POSN                                      0x2
#define _LATC_LC2_POSITION                                  0x2
#define _LATC_LC2_SIZE                                      0x1
#define _LATC_LC2_LENGTH                                    0x1
#define _LATC_LC2_MASK                                      0x4
#define _LATC_LC6_POSN                                      0x6
#define _LATC_LC6_POSITION                                  0x6
#define _LATC_LC6_SIZE                                      0x1
#define _LATC_LC6_LENGTH                                    0x1
#define _LATC_LC6_MASK                                      0x40
#define _LATC_LC7_POSN                                      0x7
#define _LATC_LC7_POSITION                                  0x7
#define _LATC_LC7_SIZE                                      0x1
#define _LATC_LC7_LENGTH                                    0x1
#define _LATC_LC7_MASK                                      0x80

// Register: PIE4
extern volatile unsigned char           PIE4                @ 0xF8E;
#ifndef _LIB_BUILD
asm("PIE4 equ 0F8Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IE                 :1;
        unsigned CCP4IE                 :1;
        unsigned CCP5IE                 :1;
        unsigned CCP6IE                 :1;
        unsigned CCP7IE                 :1;
        unsigned CCP8IE                 :1;
        unsigned CCP9IE                 :1;
        unsigned CCP10IE                :1;
    };
} PIE4bits_t;
extern volatile PIE4bits_t PIE4bits @ 0xF8E;
// bitfield macros
#define _PIE4_CCP3IE_POSN                                   0x0
#define _PIE4_CCP3IE_POSITION                               0x0
#define _PIE4_CCP3IE_SIZE                                   0x1
#define _PIE4_CCP3IE_LENGTH                                 0x1
#define _PIE4_CCP3IE_MASK                                   0x1
#define _PIE4_CCP4IE_POSN                                   0x1
#define _PIE4_CCP4IE_POSITION                               0x1
#define _PIE4_CCP4IE_SIZE                                   0x1
#define _PIE4_CCP4IE_LENGTH                                 0x1
#define _PIE4_CCP4IE_MASK                                   0x2
#define _PIE4_CCP5IE_POSN                                   0x2
#define _PIE4_CCP5IE_POSITION                               0x2
#define _PIE4_CCP5IE_SIZE                                   0x1
#define _PIE4_CCP5IE_LENGTH                                 0x1
#define _PIE4_CCP5IE_MASK                                   0x4
#define _PIE4_CCP6IE_POSN                                   0x3
#define _PIE4_CCP6IE_POSITION                               0x3
#define _PIE4_CCP6IE_SIZE                                   0x1
#define _PIE4_CCP6IE_LENGTH                                 0x1
#define _PIE4_CCP6IE_MASK                                   0x8
#define _PIE4_CCP7IE_POSN                                   0x4
#define _PIE4_CCP7IE_POSITION                               0x4
#define _PIE4_CCP7IE_SIZE                                   0x1
#define _PIE4_CCP7IE_LENGTH                                 0x1
#define _PIE4_CCP7IE_MASK                                   0x10
#define _PIE4_CCP8IE_POSN                                   0x5
#define _PIE4_CCP8IE_POSITION                               0x5
#define _PIE4_CCP8IE_SIZE                                   0x1
#define _PIE4_CCP8IE_LENGTH                                 0x1
#define _PIE4_CCP8IE_MASK                                   0x20
#define _PIE4_CCP9IE_POSN                                   0x6
#define _PIE4_CCP9IE_POSITION                               0x6
#define _PIE4_CCP9IE_SIZE                                   0x1
#define _PIE4_CCP9IE_LENGTH                                 0x1
#define _PIE4_CCP9IE_MASK                                   0x40
#define _PIE4_CCP10IE_POSN                                  0x7
#define _PIE4_CCP10IE_POSITION                              0x7
#define _PIE4_CCP10IE_SIZE                                  0x1
#define _PIE4_CCP10IE_LENGTH                                0x1
#define _PIE4_CCP10IE_MASK                                  0x80

// Register: PIR4
extern volatile unsigned char           PIR4                @ 0xF8F;
#ifndef _LIB_BUILD
asm("PIR4 equ 0F8Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IF                 :1;
        unsigned CCP4IF                 :1;
        unsigned CCP5IF                 :1;
        unsigned CCP6IF                 :1;
        unsigned CCP7IF                 :1;
        unsigned CCP8IF                 :1;
        unsigned CCP9IF                 :1;
        unsigned CCP10IF                :1;
    };
} PIR4bits_t;
extern volatile PIR4bits_t PIR4bits @ 0xF8F;
// bitfield macros
#define _PIR4_CCP3IF_POSN                                   0x0
#define _PIR4_CCP3IF_POSITION                               0x0
#define _PIR4_CCP3IF_SIZE                                   0x1
#define _PIR4_CCP3IF_LENGTH                                 0x1
#define _PIR4_CCP3IF_MASK                                   0x1
#define _PIR4_CCP4IF_POSN                                   0x1
#define _PIR4_CCP4IF_POSITION                               0x1
#define _PIR4_CCP4IF_SIZE                                   0x1
#define _PIR4_CCP4IF_LENGTH                                 0x1
#define _PIR4_CCP4IF_MASK                                   0x2
#define _PIR4_CCP5IF_POSN                                   0x2
#define _PIR4_CCP5IF_POSITION                               0x2
#define _PIR4_CCP5IF_SIZE                                   0x1
#define _PIR4_CCP5IF_LENGTH                                 0x1
#define _PIR4_CCP5IF_MASK                                   0x4
#define _PIR4_CCP6IF_POSN                                   0x3
#define _PIR4_CCP6IF_POSITION                               0x3
#define _PIR4_CCP6IF_SIZE                                   0x1
#define _PIR4_CCP6IF_LENGTH                                 0x1
#define _PIR4_CCP6IF_MASK                                   0x8
#define _PIR4_CCP7IF_POSN                                   0x4
#define _PIR4_CCP7IF_POSITION                               0x4
#define _PIR4_CCP7IF_SIZE                                   0x1
#define _PIR4_CCP7IF_LENGTH                                 0x1
#define _PIR4_CCP7IF_MASK                                   0x10
#define _PIR4_CCP8IF_POSN                                   0x5
#define _PIR4_CCP8IF_POSITION                               0x5
#define _PIR4_CCP8IF_SIZE                                   0x1
#define _PIR4_CCP8IF_LENGTH                                 0x1
#define _PIR4_CCP8IF_MASK                                   0x20
#define _PIR4_CCP9IF_POSN                                   0x6
#define _PIR4_CCP9IF_POSITION                               0x6
#define _PIR4_CCP9IF_SIZE                                   0x1
#define _PIR4_CCP9IF_LENGTH                                 0x1
#define _PIR4_CCP9IF_MASK                                   0x40
#define _PIR4_CCP10IF_POSN                                  0x7
#define _PIR4_CCP10IF_POSITION                              0x7
#define _PIR4_CCP10IF_SIZE                                  0x1
#define _PIR4_CCP10IF_LENGTH                                0x1
#define _PIR4_CCP10IF_MASK                                  0x80

// Register: IPR4
extern volatile unsigned char           IPR4                @ 0xF90;
#ifndef _LIB_BUILD
asm("IPR4 equ 0F90h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP3IP                 :1;
        unsigned CCP4IP                 :1;
        unsigned CCP5IP                 :1;
        unsigned CCP6IP                 :1;
        unsigned CCP7IP                 :1;
        unsigned CCP8IP                 :1;
        unsigned CCP9IP                 :1;
        unsigned CCP10IP                :1;
    };
    struct {
        unsigned CCIP3IP                :1;
    };
} IPR4bits_t;
extern volatile IPR4bits_t IPR4bits @ 0xF90;
// bitfield macros
#define _IPR4_CCP3IP_POSN                                   0x0
#define _IPR4_CCP3IP_POSITION                               0x0
#define _IPR4_CCP3IP_SIZE                                   0x1
#define _IPR4_CCP3IP_LENGTH                                 0x1
#define _IPR4_CCP3IP_MASK                                   0x1
#define _IPR4_CCP4IP_POSN                                   0x1
#define _IPR4_CCP4IP_POSITION                               0x1
#define _IPR4_CCP4IP_SIZE                                   0x1
#define _IPR4_CCP4IP_LENGTH                                 0x1
#define _IPR4_CCP4IP_MASK                                   0x2
#define _IPR4_CCP5IP_POSN                                   0x2
#define _IPR4_CCP5IP_POSITION                               0x2
#define _IPR4_CCP5IP_SIZE                                   0x1
#define _IPR4_CCP5IP_LENGTH                                 0x1
#define _IPR4_CCP5IP_MASK                                   0x4
#define _IPR4_CCP6IP_POSN                                   0x3
#define _IPR4_CCP6IP_POSITION                               0x3
#define _IPR4_CCP6IP_SIZE                                   0x1
#define _IPR4_CCP6IP_LENGTH                                 0x1
#define _IPR4_CCP6IP_MASK                                   0x8
#define _IPR4_CCP7IP_POSN                                   0x4
#define _IPR4_CCP7IP_POSITION                               0x4
#define _IPR4_CCP7IP_SIZE                                   0x1
#define _IPR4_CCP7IP_LENGTH                                 0x1
#define _IPR4_CCP7IP_MASK                                   0x10
#define _IPR4_CCP8IP_POSN                                   0x5
#define _IPR4_CCP8IP_POSITION                               0x5
#define _IPR4_CCP8IP_SIZE                                   0x1
#define _IPR4_CCP8IP_LENGTH                                 0x1
#define _IPR4_CCP8IP_MASK                                   0x20
#define _IPR4_CCP9IP_POSN                                   0x6
#define _IPR4_CCP9IP_POSITION                               0x6
#define _IPR4_CCP9IP_SIZE                                   0x1
#define _IPR4_CCP9IP_LENGTH                                 0x1
#define _IPR4_CCP9IP_MASK                                   0x40
#define _IPR4_CCP10IP_POSN                                  0x7
#define _IPR4_CCP10IP_POSITION                              0x7
#define _IPR4_CCP10IP_SIZE                                  0x1
#define _IPR4_CCP10IP_LENGTH                                0x1
#define _IPR4_CCP10IP_MASK                                  0x80
#define _IPR4_CCIP3IP_POSN                                  0x0
#define _IPR4_CCIP3IP_POSITION                              0x0
#define _IPR4_CCIP3IP_SIZE                                  0x1
#define _IPR4_CCIP3IP_LENGTH                                0x1
#define _IPR4_CCIP3IP_MASK                                  0x1

// Register: PIE5
extern volatile unsigned char           PIE5                @ 0xF91;
#ifndef _LIB_BUILD
asm("PIE5 equ 0F91h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1GIE                :1;
        unsigned TMR5GIE                :1;
        unsigned TMR5IE                 :1;
        unsigned TMR6IE                 :1;
        unsigned TMR8IE                 :1;
        unsigned CM3IE                  :1;
    };
} PIE5bits_t;
extern volatile PIE5bits_t PIE5bits @ 0xF91;
// bitfield macros
#define _PIE5_TMR1GIE_POSN                                  0x0
#define _PIE5_TMR1GIE_POSITION                              0x0
#define _PIE5_TMR1GIE_SIZE                                  0x1
#define _PIE5_TMR1GIE_LENGTH                                0x1
#define _PIE5_TMR1GIE_MASK                                  0x1
#define _PIE5_TMR5GIE_POSN                                  0x1
#define _PIE5_TMR5GIE_POSITION                              0x1
#define _PIE5_TMR5GIE_SIZE                                  0x1
#define _PIE5_TMR5GIE_LENGTH                                0x1
#define _PIE5_TMR5GIE_MASK                                  0x2
#define _PIE5_TMR5IE_POSN                                   0x2
#define _PIE5_TMR5IE_POSITION                               0x2
#define _PIE5_TMR5IE_SIZE                                   0x1
#define _PIE5_TMR5IE_LENGTH                                 0x1
#define _PIE5_TMR5IE_MASK                                   0x4
#define _PIE5_TMR6IE_POSN                                   0x3
#define _PIE5_TMR6IE_POSITION                               0x3
#define _PIE5_TMR6IE_SIZE                                   0x1
#define _PIE5_TMR6IE_LENGTH                                 0x1
#define _PIE5_TMR6IE_MASK                                   0x8
#define _PIE5_TMR8IE_POSN                                   0x4
#define _PIE5_TMR8IE_POSITION                               0x4
#define _PIE5_TMR8IE_SIZE                                   0x1
#define _PIE5_TMR8IE_LENGTH                                 0x1
#define _PIE5_TMR8IE_MASK                                   0x10
#define _PIE5_CM3IE_POSN                                    0x5
#define _PIE5_CM3IE_POSITION                                0x5
#define _PIE5_CM3IE_SIZE                                    0x1
#define _PIE5_CM3IE_LENGTH                                  0x1
#define _PIE5_CM3IE_MASK                                    0x20

// Register: TRISA
extern volatile unsigned char           TRISA               @ 0xF92;
#ifndef _LIB_BUILD
asm("TRISA equ 0F92h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISA0                 :1;
        unsigned TRISA1                 :1;
        unsigned TRISA2                 :1;
        unsigned TRISA3                 :1;
        unsigned                        :1;
        unsigned TRISA5                 :1;
        unsigned TRISA6                 :1;
        unsigned TRISA7                 :1;
    };
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0xF92;
// bitfield macros
#define _TRISA_TRISA0_POSN                                  0x0
#define _TRISA_TRISA0_POSITION                              0x0
#define _TRISA_TRISA0_SIZE                                  0x1
#define _TRISA_TRISA0_LENGTH                                0x1
#define _TRISA_TRISA0_MASK                                  0x1
#define _TRISA_TRISA1_POSN                                  0x1
#define _TRISA_TRISA1_POSITION                              0x1
#define _TRISA_TRISA1_SIZE                                  0x1
#define _TRISA_TRISA1_LENGTH                                0x1
#define _TRISA_TRISA1_MASK                                  0x2
#define _TRISA_TRISA2_POSN                                  0x2
#define _TRISA_TRISA2_POSITION                              0x2
#define _TRISA_TRISA2_SIZE                                  0x1
#define _TRISA_TRISA2_LENGTH                                0x1
#define _TRISA_TRISA2_MASK                                  0x4
#define _TRISA_TRISA3_POSN                                  0x3
#define _TRISA_TRISA3_POSITION                              0x3
#define _TRISA_TRISA3_SIZE                                  0x1
#define _TRISA_TRISA3_LENGTH                                0x1
#define _TRISA_TRISA3_MASK                                  0x8
#define _TRISA_TRISA5_POSN                                  0x5
#define _TRISA_TRISA5_POSITION                              0x5
#define _TRISA_TRISA5_SIZE                                  0x1
#define _TRISA_TRISA5_LENGTH                                0x1
#define _TRISA_TRISA5_MASK                                  0x20
#define _TRISA_TRISA6_POSN                                  0x6
#define _TRISA_TRISA6_POSITION                              0x6
#define _TRISA_TRISA6_SIZE                                  0x1
#define _TRISA_TRISA6_LENGTH                                0x1
#define _TRISA_TRISA6_MASK                                  0x40
#define _TRISA_TRISA7_POSN                                  0x7
#define _TRISA_TRISA7_POSITION                              0x7
#define _TRISA_TRISA7_SIZE                                  0x1
#define _TRISA_TRISA7_LENGTH                                0x1
#define _TRISA_TRISA7_MASK                                  0x80

// Register: TRISB
extern volatile unsigned char           TRISB               @ 0xF93;
#ifndef _LIB_BUILD
asm("TRISB equ 0F93h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISB0                 :1;
        unsigned TRISB1                 :1;
        unsigned TRISB2                 :1;
        unsigned TRISB3                 :1;
        unsigned TRISB4                 :1;
        unsigned TRISB5                 :1;
        unsigned TRISB6                 :1;
        unsigned TRISB7                 :1;
    };
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits @ 0xF93;
// bitfield macros
#define _TRISB_TRISB0_POSN                                  0x0
#define _TRISB_TRISB0_POSITION                              0x0
#define _TRISB_TRISB0_SIZE                                  0x1
#define _TRISB_TRISB0_LENGTH                                0x1
#define _TRISB_TRISB0_MASK                                  0x1
#define _TRISB_TRISB1_POSN                                  0x1
#define _TRISB_TRISB1_POSITION                              0x1
#define _TRISB_TRISB1_SIZE                                  0x1
#define _TRISB_TRISB1_LENGTH                                0x1
#define _TRISB_TRISB1_MASK                                  0x2
#define _TRISB_TRISB2_POSN                                  0x2
#define _TRISB_TRISB2_POSITION                              0x2
#define _TRISB_TRISB2_SIZE                                  0x1
#define _TRISB_TRISB2_LENGTH                                0x1
#define _TRISB_TRISB2_MASK                                  0x4
#define _TRISB_TRISB3_POSN                                  0x3
#define _TRISB_TRISB3_POSITION                              0x3
#define _TRISB_TRISB3_SIZE                                  0x1
#define _TRISB_TRISB3_LENGTH                                0x1
#define _TRISB_TRISB3_MASK                                  0x8
#define _TRISB_TRISB4_POSN                                  0x4
#define _TRISB_TRISB4_POSITION                              0x4
#define _TRISB_TRISB4_SIZE                                  0x1
#define _TRISB_TRISB4_LENGTH                                0x1
#define _TRISB_TRISB4_MASK                                  0x10
#define _TRISB_TRISB5_POSN                                  0x5
#define _TRISB_TRISB5_POSITION                              0x5
#define _TRISB_TRISB5_SIZE                                  0x1
#define _TRISB_TRISB5_LENGTH                                0x1
#define _TRISB_TRISB5_MASK                                  0x20
#define _TRISB_TRISB6_POSN                                  0x6
#define _TRISB_TRISB6_POSITION                              0x6
#define _TRISB_TRISB6_SIZE                                  0x1
#define _TRISB_TRISB6_LENGTH                                0x1
#define _TRISB_TRISB6_MASK                                  0x40
#define _TRISB_TRISB7_POSN                                  0x7
#define _TRISB_TRISB7_POSITION                              0x7
#define _TRISB_TRISB7_SIZE                                  0x1
#define _TRISB_TRISB7_LENGTH                                0x1
#define _TRISB_TRISB7_MASK                                  0x80

// Register: TRISC
extern volatile unsigned char           TRISC               @ 0xF94;
#ifndef _LIB_BUILD
asm("TRISC equ 0F94h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TRISC0                 :1;
        unsigned TRISC1                 :1;
        unsigned TRISC2                 :1;
        unsigned                        :3;
        unsigned TRISC6                 :1;
        unsigned TRISC7                 :1;
    };
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0xF94;
// bitfield macros
#define _TRISC_TRISC0_POSN                                  0x0
#define _TRISC_TRISC0_POSITION                              0x0
#define _TRISC_TRISC0_SIZE                                  0x1
#define _TRISC_TRISC0_LENGTH                                0x1
#define _TRISC_TRISC0_MASK                                  0x1
#define _TRISC_TRISC1_POSN                                  0x1
#define _TRISC_TRISC1_POSITION                              0x1
#define _TRISC_TRISC1_SIZE                                  0x1
#define _TRISC_TRISC1_LENGTH                                0x1
#define _TRISC_TRISC1_MASK                                  0x2
#define _TRISC_TRISC2_POSN                                  0x2
#define _TRISC_TRISC2_POSITION                              0x2
#define _TRISC_TRISC2_SIZE                                  0x1
#define _TRISC_TRISC2_LENGTH                                0x1
#define _TRISC_TRISC2_MASK                                  0x4
#define _TRISC_TRISC6_POSN                                  0x6
#define _TRISC_TRISC6_POSITION                              0x6
#define _TRISC_TRISC6_SIZE                                  0x1
#define _TRISC_TRISC6_LENGTH                                0x1
#define _TRISC_TRISC6_MASK                                  0x40
#define _TRISC_TRISC7_POSN                                  0x7
#define _TRISC_TRISC7_POSITION                              0x7
#define _TRISC_TRISC7_SIZE                                  0x1
#define _TRISC_TRISC7_LENGTH                                0x1
#define _TRISC_TRISC7_MASK                                  0x80

// Register: T3GCON
extern volatile unsigned char           T3GCON              @ 0xF97;
#ifndef _LIB_BUILD
asm("T3GCON equ 0F97h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T3GSS0                 :1;
        unsigned T3GSS1                 :1;
        unsigned T3GVAL                 :1;
        unsigned T3GGO_T3DONE           :1;
        unsigned T3GSPM                 :1;
        unsigned T3GTM                  :1;
        unsigned T3GPOL                 :1;
        unsigned TMR3GE                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned T3GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T3DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT3DONE                :1;
    };
} T3GCONbits_t;
extern volatile T3GCONbits_t T3GCONbits @ 0xF97;
// bitfield macros
#define _T3GCON_T3GSS0_POSN                                 0x0
#define _T3GCON_T3GSS0_POSITION                             0x0
#define _T3GCON_T3GSS0_SIZE                                 0x1
#define _T3GCON_T3GSS0_LENGTH                               0x1
#define _T3GCON_T3GSS0_MASK                                 0x1
#define _T3GCON_T3GSS1_POSN                                 0x1
#define _T3GCON_T3GSS1_POSITION                             0x1
#define _T3GCON_T3GSS1_SIZE                                 0x1
#define _T3GCON_T3GSS1_LENGTH                               0x1
#define _T3GCON_T3GSS1_MASK                                 0x2
#define _T3GCON_T3GVAL_POSN                                 0x2
#define _T3GCON_T3GVAL_POSITION                             0x2
#define _T3GCON_T3GVAL_SIZE                                 0x1
#define _T3GCON_T3GVAL_LENGTH                               0x1
#define _T3GCON_T3GVAL_MASK                                 0x4
#define _T3GCON_T3GGO_T3DONE_POSN                           0x3
#define _T3GCON_T3GGO_T3DONE_POSITION                       0x3
#define _T3GCON_T3GGO_T3DONE_SIZE                           0x1
#define _T3GCON_T3GGO_T3DONE_LENGTH                         0x1
#define _T3GCON_T3GGO_T3DONE_MASK                           0x8
#define _T3GCON_T3GSPM_POSN                                 0x4
#define _T3GCON_T3GSPM_POSITION                             0x4
#define _T3GCON_T3GSPM_SIZE                                 0x1
#define _T3GCON_T3GSPM_LENGTH                               0x1
#define _T3GCON_T3GSPM_MASK                                 0x10
#define _T3GCON_T3GTM_POSN                                  0x5
#define _T3GCON_T3GTM_POSITION                              0x5
#define _T3GCON_T3GTM_SIZE                                  0x1
#define _T3GCON_T3GTM_LENGTH                                0x1
#define _T3GCON_T3GTM_MASK                                  0x20
#define _T3GCON_T3GPOL_POSN                                 0x6
#define _T3GCON_T3GPOL_POSITION                             0x6
#define _T3GCON_T3GPOL_SIZE                                 0x1
#define _T3GCON_T3GPOL_LENGTH                               0x1
#define _T3GCON_T3GPOL_MASK                                 0x40
#define _T3GCON_TMR3GE_POSN                                 0x7
#define _T3GCON_TMR3GE_POSITION                             0x7
#define _T3GCON_TMR3GE_SIZE                                 0x1
#define _T3GCON_TMR3GE_LENGTH                               0x1
#define _T3GCON_TMR3GE_MASK                                 0x80
#define _T3GCON_T3GGO_POSN                                  0x3
#define _T3GCON_T3GGO_POSITION                              0x3
#define _T3GCON_T3GGO_SIZE                                  0x1
#define _T3GCON_T3GGO_LENGTH                                0x1
#define _T3GCON_T3GGO_MASK                                  0x8
#define _T3GCON_NOT_T3DONE_POSN                             0x3
#define _T3GCON_NOT_T3DONE_POSITION                         0x3
#define _T3GCON_NOT_T3DONE_SIZE                             0x1
#define _T3GCON_NOT_T3DONE_LENGTH                           0x1
#define _T3GCON_NOT_T3DONE_MASK                             0x8
#define _T3GCON_nT3DONE_POSN                                0x3
#define _T3GCON_nT3DONE_POSITION                            0x3
#define _T3GCON_nT3DONE_SIZE                                0x1
#define _T3GCON_nT3DONE_LENGTH                              0x1
#define _T3GCON_nT3DONE_MASK                                0x8

// Register: PIR5
extern volatile unsigned char           PIR5                @ 0xF98;
#ifndef _LIB_BUILD
asm("PIR5 equ 0F98h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1GIF                :1;
        unsigned TMR5GIF                :1;
        unsigned TMR5IF                 :1;
        unsigned TMR6IF                 :1;
        unsigned TMR8IF                 :1;
        unsigned CM3IF                  :1;
    };
} PIR5bits_t;
extern volatile PIR5bits_t PIR5bits @ 0xF98;
// bitfield macros
#define _PIR5_TMR1GIF_POSN                                  0x0
#define _PIR5_TMR1GIF_POSITION                              0x0
#define _PIR5_TMR1GIF_SIZE                                  0x1
#define _PIR5_TMR1GIF_LENGTH                                0x1
#define _PIR5_TMR1GIF_MASK                                  0x1
#define _PIR5_TMR5GIF_POSN                                  0x1
#define _PIR5_TMR5GIF_POSITION                              0x1
#define _PIR5_TMR5GIF_SIZE                                  0x1
#define _PIR5_TMR5GIF_LENGTH                                0x1
#define _PIR5_TMR5GIF_MASK                                  0x2
#define _PIR5_TMR5IF_POSN                                   0x2
#define _PIR5_TMR5IF_POSITION                               0x2
#define _PIR5_TMR5IF_SIZE                                   0x1
#define _PIR5_TMR5IF_LENGTH                                 0x1
#define _PIR5_TMR5IF_MASK                                   0x4
#define _PIR5_TMR6IF_POSN                                   0x3
#define _PIR5_TMR6IF_POSITION                               0x3
#define _PIR5_TMR6IF_SIZE                                   0x1
#define _PIR5_TMR6IF_LENGTH                                 0x1
#define _PIR5_TMR6IF_MASK                                   0x8
#define _PIR5_TMR8IF_POSN                                   0x4
#define _PIR5_TMR8IF_POSITION                               0x4
#define _PIR5_TMR8IF_SIZE                                   0x1
#define _PIR5_TMR8IF_LENGTH                                 0x1
#define _PIR5_TMR8IF_MASK                                   0x10
#define _PIR5_CM3IF_POSN                                    0x5
#define _PIR5_CM3IF_POSITION                                0x5
#define _PIR5_CM3IF_SIZE                                    0x1
#define _PIR5_CM3IF_LENGTH                                  0x1
#define _PIR5_CM3IF_MASK                                    0x20

// Register: IPR5
extern volatile unsigned char           IPR5                @ 0xF99;
#ifndef _LIB_BUILD
asm("IPR5 equ 0F99h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1GIP                :1;
        unsigned TMR5GIP                :1;
        unsigned TMR5IP                 :1;
        unsigned TMR6IP                 :1;
        unsigned TMR8IP                 :1;
        unsigned CM3IP                  :1;
    };
    struct {
        unsigned CCH05                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH15                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL05                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL15                :1;
    };
} IPR5bits_t;
extern volatile IPR5bits_t IPR5bits @ 0xF99;
// bitfield macros
#define _IPR5_TMR1GIP_POSN                                  0x0
#define _IPR5_TMR1GIP_POSITION                              0x0
#define _IPR5_TMR1GIP_SIZE                                  0x1
#define _IPR5_TMR1GIP_LENGTH                                0x1
#define _IPR5_TMR1GIP_MASK                                  0x1
#define _IPR5_TMR5GIP_POSN                                  0x1
#define _IPR5_TMR5GIP_POSITION                              0x1
#define _IPR5_TMR5GIP_SIZE                                  0x1
#define _IPR5_TMR5GIP_LENGTH                                0x1
#define _IPR5_TMR5GIP_MASK                                  0x2
#define _IPR5_TMR5IP_POSN                                   0x2
#define _IPR5_TMR5IP_POSITION                               0x2
#define _IPR5_TMR5IP_SIZE                                   0x1
#define _IPR5_TMR5IP_LENGTH                                 0x1
#define _IPR5_TMR5IP_MASK                                   0x4
#define _IPR5_TMR6IP_POSN                                   0x3
#define _IPR5_TMR6IP_POSITION                               0x3
#define _IPR5_TMR6IP_SIZE                                   0x1
#define _IPR5_TMR6IP_LENGTH                                 0x1
#define _IPR5_TMR6IP_MASK                                   0x8
#define _IPR5_TMR8IP_POSN                                   0x4
#define _IPR5_TMR8IP_POSITION                               0x4
#define _IPR5_TMR8IP_SIZE                                   0x1
#define _IPR5_TMR8IP_LENGTH                                 0x1
#define _IPR5_TMR8IP_MASK                                   0x10
#define _IPR5_CM3IP_POSN                                    0x5
#define _IPR5_CM3IP_POSITION                                0x5
#define _IPR5_CM3IP_SIZE                                    0x1
#define _IPR5_CM3IP_LENGTH                                  0x1
#define _IPR5_CM3IP_MASK                                    0x20
#define _IPR5_CCH05_POSN                                    0x0
#define _IPR5_CCH05_POSITION                                0x0
#define _IPR5_CCH05_SIZE                                    0x1
#define _IPR5_CCH05_LENGTH                                  0x1
#define _IPR5_CCH05_MASK                                    0x1
#define _IPR5_CCH15_POSN                                    0x1
#define _IPR5_CCH15_POSITION                                0x1
#define _IPR5_CCH15_SIZE                                    0x1
#define _IPR5_CCH15_LENGTH                                  0x1
#define _IPR5_CCH15_MASK                                    0x2
#define _IPR5_EVPOL05_POSN                                  0x3
#define _IPR5_EVPOL05_POSITION                              0x3
#define _IPR5_EVPOL05_SIZE                                  0x1
#define _IPR5_EVPOL05_LENGTH                                0x1
#define _IPR5_EVPOL05_MASK                                  0x8
#define _IPR5_EVPOL15_POSN                                  0x4
#define _IPR5_EVPOL15_POSITION                              0x4
#define _IPR5_EVPOL15_SIZE                                  0x1
#define _IPR5_EVPOL15_LENGTH                                0x1
#define _IPR5_EVPOL15_MASK                                  0x10

// Register: T1GCON
extern volatile unsigned char           T1GCON              @ 0xF9A;
#ifndef _LIB_BUILD
asm("T1GCON equ 0F9Ah");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :3;
        unsigned T1GGO_NOT_T1DONE       :1;
    };
    struct {
        unsigned T1GSS0                 :1;
        unsigned T1GSS1                 :1;
        unsigned T1GVAL                 :1;
        unsigned T1GGO_nT1DONE          :1;
        unsigned T1GSPM                 :1;
        unsigned T1GTM                  :1;
        unsigned T1GPOL                 :1;
        unsigned TMR1GE                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned T1GGO                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_T1DONE             :1;
    };
    struct {
        unsigned                        :3;
        unsigned nT1DONE                :1;
    };
    struct {
        unsigned                        :3;
        unsigned T1DONE                 :1;
    };
} T1GCONbits_t;
extern volatile T1GCONbits_t T1GCONbits @ 0xF9A;
// bitfield macros
#define _T1GCON_T1GGO_NOT_T1DONE_POSN                       0x3
#define _T1GCON_T1GGO_NOT_T1DONE_POSITION                   0x3
#define _T1GCON_T1GGO_NOT_T1DONE_SIZE                       0x1
#define _T1GCON_T1GGO_NOT_T1DONE_LENGTH                     0x1
#define _T1GCON_T1GGO_NOT_T1DONE_MASK                       0x8
#define _T1GCON_T1GSS0_POSN                                 0x0
#define _T1GCON_T1GSS0_POSITION                             0x0
#define _T1GCON_T1GSS0_SIZE                                 0x1
#define _T1GCON_T1GSS0_LENGTH                               0x1
#define _T1GCON_T1GSS0_MASK                                 0x1
#define _T1GCON_T1GSS1_POSN                                 0x1
#define _T1GCON_T1GSS1_POSITION                             0x1
#define _T1GCON_T1GSS1_SIZE                                 0x1
#define _T1GCON_T1GSS1_LENGTH                               0x1
#define _T1GCON_T1GSS1_MASK                                 0x2
#define _T1GCON_T1GVAL_POSN                                 0x2
#define _T1GCON_T1GVAL_POSITION                             0x2
#define _T1GCON_T1GVAL_SIZE                                 0x1
#define _T1GCON_T1GVAL_LENGTH                               0x1
#define _T1GCON_T1GVAL_MASK                                 0x4
#define _T1GCON_T1GGO_nT1DONE_POSN                          0x3
#define _T1GCON_T1GGO_nT1DONE_POSITION                      0x3
#define _T1GCON_T1GGO_nT1DONE_SIZE                          0x1
#define _T1GCON_T1GGO_nT1DONE_LENGTH                        0x1
#define _T1GCON_T1GGO_nT1DONE_MASK                          0x8
#define _T1GCON_T1GSPM_POSN                                 0x4
#define _T1GCON_T1GSPM_POSITION                             0x4
#define _T1GCON_T1GSPM_SIZE                                 0x1
#define _T1GCON_T1GSPM_LENGTH                               0x1
#define _T1GCON_T1GSPM_MASK                                 0x10
#define _T1GCON_T1GTM_POSN                                  0x5
#define _T1GCON_T1GTM_POSITION                              0x5
#define _T1GCON_T1GTM_SIZE                                  0x1
#define _T1GCON_T1GTM_LENGTH                                0x1
#define _T1GCON_T1GTM_MASK                                  0x20
#define _T1GCON_T1GPOL_POSN                                 0x6
#define _T1GCON_T1GPOL_POSITION                             0x6
#define _T1GCON_T1GPOL_SIZE                                 0x1
#define _T1GCON_T1GPOL_LENGTH                               0x1
#define _T1GCON_T1GPOL_MASK                                 0x40
#define _T1GCON_TMR1GE_POSN                                 0x7
#define _T1GCON_TMR1GE_POSITION                             0x7
#define _T1GCON_TMR1GE_SIZE                                 0x1
#define _T1GCON_TMR1GE_LENGTH                               0x1
#define _T1GCON_TMR1GE_MASK                                 0x80
#define _T1GCON_T1GGO_POSN                                  0x3
#define _T1GCON_T1GGO_POSITION                              0x3
#define _T1GCON_T1GGO_SIZE                                  0x1
#define _T1GCON_T1GGO_LENGTH                                0x1
#define _T1GCON_T1GGO_MASK                                  0x8
#define _T1GCON_NOT_T1DONE_POSN                             0x3
#define _T1GCON_NOT_T1DONE_POSITION                         0x3
#define _T1GCON_NOT_T1DONE_SIZE                             0x1
#define _T1GCON_NOT_T1DONE_LENGTH                           0x1
#define _T1GCON_NOT_T1DONE_MASK                             0x8
#define _T1GCON_nT1DONE_POSN                                0x3
#define _T1GCON_nT1DONE_POSITION                            0x3
#define _T1GCON_nT1DONE_SIZE                                0x1
#define _T1GCON_nT1DONE_LENGTH                              0x1
#define _T1GCON_nT1DONE_MASK                                0x8
#define _T1GCON_T1DONE_POSN                                 0x3
#define _T1GCON_T1DONE_POSITION                             0x3
#define _T1GCON_T1DONE_SIZE                                 0x1
#define _T1GCON_T1DONE_LENGTH                               0x1
#define _T1GCON_T1DONE_MASK                                 0x8

// Register: OSCTUNE
extern volatile unsigned char           OSCTUNE             @ 0xF9B;
#ifndef _LIB_BUILD
asm("OSCTUNE equ 0F9Bh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TUN                    :6;
        unsigned PLLEN                  :1;
        unsigned INTSRC                 :1;
    };
    struct {
        unsigned TUN0                   :1;
        unsigned TUN1                   :1;
        unsigned TUN2                   :1;
        unsigned TUN3                   :1;
        unsigned TUN4                   :1;
        unsigned TUN5                   :1;
    };
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0xF9B;
// bitfield macros
#define _OSCTUNE_TUN_POSN                                   0x0
#define _OSCTUNE_TUN_POSITION                               0x0
#define _OSCTUNE_TUN_SIZE                                   0x6
#define _OSCTUNE_TUN_LENGTH                                 0x6
#define _OSCTUNE_TUN_MASK                                   0x3F
#define _OSCTUNE_PLLEN_POSN                                 0x6
#define _OSCTUNE_PLLEN_POSITION                             0x6
#define _OSCTUNE_PLLEN_SIZE                                 0x1
#define _OSCTUNE_PLLEN_LENGTH                               0x1
#define _OSCTUNE_PLLEN_MASK                                 0x40
#define _OSCTUNE_INTSRC_POSN                                0x7
#define _OSCTUNE_INTSRC_POSITION                            0x7
#define _OSCTUNE_INTSRC_SIZE                                0x1
#define _OSCTUNE_INTSRC_LENGTH                              0x1
#define _OSCTUNE_INTSRC_MASK                                0x80
#define _OSCTUNE_TUN0_POSN                                  0x0
#define _OSCTUNE_TUN0_POSITION                              0x0
#define _OSCTUNE_TUN0_SIZE                                  0x1
#define _OSCTUNE_TUN0_LENGTH                                0x1
#define _OSCTUNE_TUN0_MASK                                  0x1
#define _OSCTUNE_TUN1_POSN                                  0x1
#define _OSCTUNE_TUN1_POSITION                              0x1
#define _OSCTUNE_TUN1_SIZE                                  0x1
#define _OSCTUNE_TUN1_LENGTH                                0x1
#define _OSCTUNE_TUN1_MASK                                  0x2
#define _OSCTUNE_TUN2_POSN                                  0x2
#define _OSCTUNE_TUN2_POSITION                              0x2
#define _OSCTUNE_TUN2_SIZE                                  0x1
#define _OSCTUNE_TUN2_LENGTH                                0x1
#define _OSCTUNE_TUN2_MASK                                  0x4
#define _OSCTUNE_TUN3_POSN                                  0x3
#define _OSCTUNE_TUN3_POSITION                              0x3
#define _OSCTUNE_TUN3_SIZE                                  0x1
#define _OSCTUNE_TUN3_LENGTH                                0x1
#define _OSCTUNE_TUN3_MASK                                  0x8
#define _OSCTUNE_TUN4_POSN                                  0x4
#define _OSCTUNE_TUN4_POSITION                              0x4
#define _OSCTUNE_TUN4_SIZE                                  0x1
#define _OSCTUNE_TUN4_LENGTH                                0x1
#define _OSCTUNE_TUN4_MASK                                  0x10
#define _OSCTUNE_TUN5_POSN                                  0x5
#define _OSCTUNE_TUN5_POSITION                              0x5
#define _OSCTUNE_TUN5_SIZE                                  0x1
#define _OSCTUNE_TUN5_LENGTH                                0x1
#define _OSCTUNE_TUN5_MASK                                  0x20

// Register: RCSTA2
extern volatile unsigned char           RCSTA2              @ 0xF9C;
#ifndef _LIB_BUILD
asm("RCSTA2 equ 0F9Ch");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RX9D2                  :1;
        unsigned OERR2                  :1;
        unsigned FERR2                  :1;
        unsigned ADDEN2                 :1;
        unsigned CREN2                  :1;
        unsigned SREN2                  :1;
        unsigned RX92                   :1;
        unsigned SPEN2                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_92                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC92                   :1;
    };
    struct {
        unsigned RCD82                  :1;
    };
} RCSTA2bits_t;
extern volatile RCSTA2bits_t RCSTA2bits @ 0xF9C;
// bitfield macros
#define _RCSTA2_RX9D_POSN                                   0x0
#define _RCSTA2_RX9D_POSITION                               0x0
#define _RCSTA2_RX9D_SIZE                                   0x1
#define _RCSTA2_RX9D_LENGTH                                 0x1
#define _RCSTA2_RX9D_MASK                                   0x1
#define _RCSTA2_OERR_POSN                                   0x1
#define _RCSTA2_OERR_POSITION                               0x1
#define _RCSTA2_OERR_SIZE                                   0x1
#define _RCSTA2_OERR_LENGTH                                 0x1
#define _RCSTA2_OERR_MASK                                   0x2
#define _RCSTA2_FERR_POSN                                   0x2
#define _RCSTA2_FERR_POSITION                               0x2
#define _RCSTA2_FERR_SIZE                                   0x1
#define _RCSTA2_FERR_LENGTH                                 0x1
#define _RCSTA2_FERR_MASK                                   0x4
#define _RCSTA2_ADDEN_POSN                                  0x3
#define _RCSTA2_ADDEN_POSITION                              0x3
#define _RCSTA2_ADDEN_SIZE                                  0x1
#define _RCSTA2_ADDEN_LENGTH                                0x1
#define _RCSTA2_ADDEN_MASK                                  0x8
#define _RCSTA2_CREN_POSN                                   0x4
#define _RCSTA2_CREN_POSITION                               0x4
#define _RCSTA2_CREN_SIZE                                   0x1
#define _RCSTA2_CREN_LENGTH                                 0x1
#define _RCSTA2_CREN_MASK                                   0x10
#define _RCSTA2_SREN_POSN                                   0x5
#define _RCSTA2_SREN_POSITION                               0x5
#define _RCSTA2_SREN_SIZE                                   0x1
#define _RCSTA2_SREN_LENGTH                                 0x1
#define _RCSTA2_SREN_MASK                                   0x20
#define _RCSTA2_RX9_POSN                                    0x6
#define _RCSTA2_RX9_POSITION                                0x6
#define _RCSTA2_RX9_SIZE                                    0x1
#define _RCSTA2_RX9_LENGTH                                  0x1
#define _RCSTA2_RX9_MASK                                    0x40
#define _RCSTA2_SPEN_POSN                                   0x7
#define _RCSTA2_SPEN_POSITION                               0x7
#define _RCSTA2_SPEN_SIZE                                   0x1
#define _RCSTA2_SPEN_LENGTH                                 0x1
#define _RCSTA2_SPEN_MASK                                   0x80
#define _RCSTA2_RX9D2_POSN                                  0x0
#define _RCSTA2_RX9D2_POSITION                              0x0
#define _RCSTA2_RX9D2_SIZE                                  0x1
#define _RCSTA2_RX9D2_LENGTH                                0x1
#define _RCSTA2_RX9D2_MASK                                  0x1
#define _RCSTA2_OERR2_POSN                                  0x1
#define _RCSTA2_OERR2_POSITION                              0x1
#define _RCSTA2_OERR2_SIZE                                  0x1
#define _RCSTA2_OERR2_LENGTH                                0x1
#define _RCSTA2_OERR2_MASK                                  0x2
#define _RCSTA2_FERR2_POSN                                  0x2
#define _RCSTA2_FERR2_POSITION                              0x2
#define _RCSTA2_FERR2_SIZE                                  0x1
#define _RCSTA2_FERR2_LENGTH                                0x1
#define _RCSTA2_FERR2_MASK                                  0x4
#define _RCSTA2_ADDEN2_POSN                                 0x3
#define _RCSTA2_ADDEN2_POSITION                             0x3
#define _RCSTA2_ADDEN2_SIZE                                 0x1
#define _RCSTA2_ADDEN2_LENGTH                               0x1
#define _RCSTA2_ADDEN2_MASK                                 0x8
#define _RCSTA2_CREN2_POSN                                  0x4
#define _RCSTA2_CREN2_POSITION                              0x4
#define _RCSTA2_CREN2_SIZE                                  0x1
#define _RCSTA2_CREN2_LENGTH                                0x1
#define _RCSTA2_CREN2_MASK                                  0x10
#define _RCSTA2_SREN2_POSN                                  0x5
#define _RCSTA2_SREN2_POSITION                              0x5
#define _RCSTA2_SREN2_SIZE                                  0x1
#define _RCSTA2_SREN2_LENGTH                                0x1
#define _RCSTA2_SREN2_MASK                                  0x20
#define _RCSTA2_RX92_POSN                                   0x6
#define _RCSTA2_RX92_POSITION                               0x6
#define _RCSTA2_RX92_SIZE                                   0x1
#define _RCSTA2_RX92_LENGTH                                 0x1
#define _RCSTA2_RX92_MASK                                   0x40
#define _RCSTA2_SPEN2_POSN                                  0x7
#define _RCSTA2_SPEN2_POSITION                              0x7
#define _RCSTA2_SPEN2_SIZE                                  0x1
#define _RCSTA2_SPEN2_LENGTH                                0x1
#define _RCSTA2_SPEN2_MASK                                  0x80
#define _RCSTA2_RC8_92_POSN                                 0x6
#define _RCSTA2_RC8_92_POSITION                             0x6
#define _RCSTA2_RC8_92_SIZE                                 0x1
#define _RCSTA2_RC8_92_LENGTH                               0x1
#define _RCSTA2_RC8_92_MASK                                 0x40
#define _RCSTA2_RC92_POSN                                   0x6
#define _RCSTA2_RC92_POSITION                               0x6
#define _RCSTA2_RC92_SIZE                                   0x1
#define _RCSTA2_RC92_LENGTH                                 0x1
#define _RCSTA2_RC92_MASK                                   0x40
#define _RCSTA2_RCD82_POSN                                  0x0
#define _RCSTA2_RCD82_POSITION                              0x0
#define _RCSTA2_RCD82_SIZE                                  0x1
#define _RCSTA2_RCD82_LENGTH                                0x1
#define _RCSTA2_RCD82_MASK                                  0x1

// Register: PIE1
extern volatile unsigned char           PIE1                @ 0xF9D;
#ifndef _LIB_BUILD
asm("PIE1 equ 0F9Dh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IE                 :1;
        unsigned TMR2IE                 :1;
        unsigned CCP1IE                 :1;
        unsigned SSP1IE                 :1;
        unsigned TX1IE                  :1;
        unsigned RC1IE                  :1;
        unsigned ADIE                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIE                  :1;
        unsigned TXIE                   :1;
        unsigned RCIE                   :1;
    };
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0xF9D;
// bitfield macros
#define _PIE1_TMR1IE_POSN                                   0x0
#define _PIE1_TMR1IE_POSITION                               0x0
#define _PIE1_TMR1IE_SIZE                                   0x1
#define _PIE1_TMR1IE_LENGTH                                 0x1
#define _PIE1_TMR1IE_MASK                                   0x1
#define _PIE1_TMR2IE_POSN                                   0x1
#define _PIE1_TMR2IE_POSITION                               0x1
#define _PIE1_TMR2IE_SIZE                                   0x1
#define _PIE1_TMR2IE_LENGTH                                 0x1
#define _PIE1_TMR2IE_MASK                                   0x2
#define _PIE1_CCP1IE_POSN                                   0x2
#define _PIE1_CCP1IE_POSITION                               0x2
#define _PIE1_CCP1IE_SIZE                                   0x1
#define _PIE1_CCP1IE_LENGTH                                 0x1
#define _PIE1_CCP1IE_MASK                                   0x4
#define _PIE1_SSP1IE_POSN                                   0x3
#define _PIE1_SSP1IE_POSITION                               0x3
#define _PIE1_SSP1IE_SIZE                                   0x1
#define _PIE1_SSP1IE_LENGTH                                 0x1
#define _PIE1_SSP1IE_MASK                                   0x8
#define _PIE1_TX1IE_POSN                                    0x4
#define _PIE1_TX1IE_POSITION                                0x4
#define _PIE1_TX1IE_SIZE                                    0x1
#define _PIE1_TX1IE_LENGTH                                  0x1
#define _PIE1_TX1IE_MASK                                    0x10
#define _PIE1_RC1IE_POSN                                    0x5
#define _PIE1_RC1IE_POSITION                                0x5
#define _PIE1_RC1IE_SIZE                                    0x1
#define _PIE1_RC1IE_LENGTH                                  0x1
#define _PIE1_RC1IE_MASK                                    0x20
#define _PIE1_ADIE_POSN                                     0x6
#define _PIE1_ADIE_POSITION                                 0x6
#define _PIE1_ADIE_SIZE                                     0x1
#define _PIE1_ADIE_LENGTH                                   0x1
#define _PIE1_ADIE_MASK                                     0x40
#define _PIE1_SSPIE_POSN                                    0x3
#define _PIE1_SSPIE_POSITION                                0x3
#define _PIE1_SSPIE_SIZE                                    0x1
#define _PIE1_SSPIE_LENGTH                                  0x1
#define _PIE1_SSPIE_MASK                                    0x8
#define _PIE1_TXIE_POSN                                     0x4
#define _PIE1_TXIE_POSITION                                 0x4
#define _PIE1_TXIE_SIZE                                     0x1
#define _PIE1_TXIE_LENGTH                                   0x1
#define _PIE1_TXIE_MASK                                     0x10
#define _PIE1_RCIE_POSN                                     0x5
#define _PIE1_RCIE_POSITION                                 0x5
#define _PIE1_RCIE_SIZE                                     0x1
#define _PIE1_RCIE_LENGTH                                   0x1
#define _PIE1_RCIE_MASK                                     0x20

// Register: PIR1
extern volatile unsigned char           PIR1                @ 0xF9E;
#ifndef _LIB_BUILD
asm("PIR1 equ 0F9Eh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IF                 :1;
        unsigned TMR2IF                 :1;
        unsigned CCP1IF                 :1;
        unsigned SSP1IF                 :1;
        unsigned TX1IF                  :1;
        unsigned RC1IF                  :1;
        unsigned ADIF                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIF                  :1;
        unsigned TXIF                   :1;
        unsigned RCIF                   :1;
    };
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0xF9E;
// bitfield macros
#define _PIR1_TMR1IF_POSN                                   0x0
#define _PIR1_TMR1IF_POSITION                               0x0
#define _PIR1_TMR1IF_SIZE                                   0x1
#define _PIR1_TMR1IF_LENGTH                                 0x1
#define _PIR1_TMR1IF_MASK                                   0x1
#define _PIR1_TMR2IF_POSN                                   0x1
#define _PIR1_TMR2IF_POSITION                               0x1
#define _PIR1_TMR2IF_SIZE                                   0x1
#define _PIR1_TMR2IF_LENGTH                                 0x1
#define _PIR1_TMR2IF_MASK                                   0x2
#define _PIR1_CCP1IF_POSN                                   0x2
#define _PIR1_CCP1IF_POSITION                               0x2
#define _PIR1_CCP1IF_SIZE                                   0x1
#define _PIR1_CCP1IF_LENGTH                                 0x1
#define _PIR1_CCP1IF_MASK                                   0x4
#define _PIR1_SSP1IF_POSN                                   0x3
#define _PIR1_SSP1IF_POSITION                               0x3
#define _PIR1_SSP1IF_SIZE                                   0x1
#define _PIR1_SSP1IF_LENGTH                                 0x1
#define _PIR1_SSP1IF_MASK                                   0x8
#define _PIR1_TX1IF_POSN                                    0x4
#define _PIR1_TX1IF_POSITION                                0x4
#define _PIR1_TX1IF_SIZE                                    0x1
#define _PIR1_TX1IF_LENGTH                                  0x1
#define _PIR1_TX1IF_MASK                                    0x10
#define _PIR1_RC1IF_POSN                                    0x5
#define _PIR1_RC1IF_POSITION                                0x5
#define _PIR1_RC1IF_SIZE                                    0x1
#define _PIR1_RC1IF_LENGTH                                  0x1
#define _PIR1_RC1IF_MASK                                    0x20
#define _PIR1_ADIF_POSN                                     0x6
#define _PIR1_ADIF_POSITION                                 0x6
#define _PIR1_ADIF_SIZE                                     0x1
#define _PIR1_ADIF_LENGTH                                   0x1
#define _PIR1_ADIF_MASK                                     0x40
#define _PIR1_SSPIF_POSN                                    0x3
#define _PIR1_SSPIF_POSITION                                0x3
#define _PIR1_SSPIF_SIZE                                    0x1
#define _PIR1_SSPIF_LENGTH                                  0x1
#define _PIR1_SSPIF_MASK                                    0x8
#define _PIR1_TXIF_POSN                                     0x4
#define _PIR1_TXIF_POSITION                                 0x4
#define _PIR1_TXIF_SIZE                                     0x1
#define _PIR1_TXIF_LENGTH                                   0x1
#define _PIR1_TXIF_MASK                                     0x10
#define _PIR1_RCIF_POSN                                     0x5
#define _PIR1_RCIF_POSITION                                 0x5
#define _PIR1_RCIF_SIZE                                     0x1
#define _PIR1_RCIF_LENGTH                                   0x1
#define _PIR1_RCIF_MASK                                     0x20

// Register: IPR1
extern volatile unsigned char           IPR1                @ 0xF9F;
#ifndef _LIB_BUILD
asm("IPR1 equ 0F9Fh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1IP                 :1;
        unsigned TMR2IP                 :1;
        unsigned CCP1IP                 :1;
        unsigned SSP1IP                 :1;
        unsigned TX1IP                  :1;
        unsigned RC1IP                  :1;
        unsigned ADIP                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPIP                  :1;
        unsigned TXIP                   :1;
        unsigned RCIP                   :1;
    };
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits @ 0xF9F;
// bitfield macros
#define _IPR1_TMR1IP_POSN                                   0x0
#define _IPR1_TMR1IP_POSITION                               0x0
#define _IPR1_TMR1IP_SIZE                                   0x1
#define _IPR1_TMR1IP_LENGTH                                 0x1
#define _IPR1_TMR1IP_MASK                                   0x1
#define _IPR1_TMR2IP_POSN                                   0x1
#define _IPR1_TMR2IP_POSITION                               0x1
#define _IPR1_TMR2IP_SIZE                                   0x1
#define _IPR1_TMR2IP_LENGTH                                 0x1
#define _IPR1_TMR2IP_MASK                                   0x2
#define _IPR1_CCP1IP_POSN                                   0x2
#define _IPR1_CCP1IP_POSITION                               0x2
#define _IPR1_CCP1IP_SIZE                                   0x1
#define _IPR1_CCP1IP_LENGTH                                 0x1
#define _IPR1_CCP1IP_MASK                                   0x4
#define _IPR1_SSP1IP_POSN                                   0x3
#define _IPR1_SSP1IP_POSITION                               0x3
#define _IPR1_SSP1IP_SIZE                                   0x1
#define _IPR1_SSP1IP_LENGTH                                 0x1
#define _IPR1_SSP1IP_MASK                                   0x8
#define _IPR1_TX1IP_POSN                                    0x4
#define _IPR1_TX1IP_POSITION                                0x4
#define _IPR1_TX1IP_SIZE                                    0x1
#define _IPR1_TX1IP_LENGTH                                  0x1
#define _IPR1_TX1IP_MASK                                    0x10
#define _IPR1_RC1IP_POSN                                    0x5
#define _IPR1_RC1IP_POSITION                                0x5
#define _IPR1_RC1IP_SIZE                                    0x1
#define _IPR1_RC1IP_LENGTH                                  0x1
#define _IPR1_RC1IP_MASK                                    0x20
#define _IPR1_ADIP_POSN                                     0x6
#define _IPR1_ADIP_POSITION                                 0x6
#define _IPR1_ADIP_SIZE                                     0x1
#define _IPR1_ADIP_LENGTH                                   0x1
#define _IPR1_ADIP_MASK                                     0x40
#define _IPR1_SSPIP_POSN                                    0x3
#define _IPR1_SSPIP_POSITION                                0x3
#define _IPR1_SSPIP_SIZE                                    0x1
#define _IPR1_SSPIP_LENGTH                                  0x1
#define _IPR1_SSPIP_MASK                                    0x8
#define _IPR1_TXIP_POSN                                     0x4
#define _IPR1_TXIP_POSITION                                 0x4
#define _IPR1_TXIP_SIZE                                     0x1
#define _IPR1_TXIP_LENGTH                                   0x1
#define _IPR1_TXIP_MASK                                     0x10
#define _IPR1_RCIP_POSN                                     0x5
#define _IPR1_RCIP_POSITION                                 0x5
#define _IPR1_RCIP_SIZE                                     0x1
#define _IPR1_RCIP_LENGTH                                   0x1
#define _IPR1_RCIP_MASK                                     0x20

// Register: PIE2
extern volatile unsigned char           PIE2                @ 0xFA0;
#ifndef _LIB_BUILD
asm("PIE2 equ 0FA0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IE                 :1;
        unsigned TMR3IE                 :1;
        unsigned LVDIE                  :1;
        unsigned BCL1IE                 :1;
        unsigned USBIE                  :1;
        unsigned CM1IE                  :1;
        unsigned CM2IE                  :1;
        unsigned OSCFIE                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned HLVDIE                 :1;
        unsigned BCLIE                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CMIE                   :1;
    };
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0xFA0;
// bitfield macros
#define _PIE2_CCP2IE_POSN                                   0x0
#define _PIE2_CCP2IE_POSITION                               0x0
#define _PIE2_CCP2IE_SIZE                                   0x1
#define _PIE2_CCP2IE_LENGTH                                 0x1
#define _PIE2_CCP2IE_MASK                                   0x1
#define _PIE2_TMR3IE_POSN                                   0x1
#define _PIE2_TMR3IE_POSITION                               0x1
#define _PIE2_TMR3IE_SIZE                                   0x1
#define _PIE2_TMR3IE_LENGTH                                 0x1
#define _PIE2_TMR3IE_MASK                                   0x2
#define _PIE2_LVDIE_POSN                                    0x2
#define _PIE2_LVDIE_POSITION                                0x2
#define _PIE2_LVDIE_SIZE                                    0x1
#define _PIE2_LVDIE_LENGTH                                  0x1
#define _PIE2_LVDIE_MASK                                    0x4
#define _PIE2_BCL1IE_POSN                                   0x3
#define _PIE2_BCL1IE_POSITION                               0x3
#define _PIE2_BCL1IE_SIZE                                   0x1
#define _PIE2_BCL1IE_LENGTH                                 0x1
#define _PIE2_BCL1IE_MASK                                   0x8
#define _PIE2_USBIE_POSN                                    0x4
#define _PIE2_USBIE_POSITION                                0x4
#define _PIE2_USBIE_SIZE                                    0x1
#define _PIE2_USBIE_LENGTH                                  0x1
#define _PIE2_USBIE_MASK                                    0x10
#define _PIE2_CM1IE_POSN                                    0x5
#define _PIE2_CM1IE_POSITION                                0x5
#define _PIE2_CM1IE_SIZE                                    0x1
#define _PIE2_CM1IE_LENGTH                                  0x1
#define _PIE2_CM1IE_MASK                                    0x20
#define _PIE2_CM2IE_POSN                                    0x6
#define _PIE2_CM2IE_POSITION                                0x6
#define _PIE2_CM2IE_SIZE                                    0x1
#define _PIE2_CM2IE_LENGTH                                  0x1
#define _PIE2_CM2IE_MASK                                    0x40
#define _PIE2_OSCFIE_POSN                                   0x7
#define _PIE2_OSCFIE_POSITION                               0x7
#define _PIE2_OSCFIE_SIZE                                   0x1
#define _PIE2_OSCFIE_LENGTH                                 0x1
#define _PIE2_OSCFIE_MASK                                   0x80
#define _PIE2_HLVDIE_POSN                                   0x2
#define _PIE2_HLVDIE_POSITION                               0x2
#define _PIE2_HLVDIE_SIZE                                   0x1
#define _PIE2_HLVDIE_LENGTH                                 0x1
#define _PIE2_HLVDIE_MASK                                   0x4
#define _PIE2_BCLIE_POSN                                    0x3
#define _PIE2_BCLIE_POSITION                                0x3
#define _PIE2_BCLIE_SIZE                                    0x1
#define _PIE2_BCLIE_LENGTH                                  0x1
#define _PIE2_BCLIE_MASK                                    0x8
#define _PIE2_CMIE_POSN                                     0x6
#define _PIE2_CMIE_POSITION                                 0x6
#define _PIE2_CMIE_SIZE                                     0x1
#define _PIE2_CMIE_LENGTH                                   0x1
#define _PIE2_CMIE_MASK                                     0x40

// Register: PIR2
extern volatile unsigned char           PIR2                @ 0xFA1;
#ifndef _LIB_BUILD
asm("PIR2 equ 0FA1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IF                 :1;
        unsigned TMR3IF                 :1;
        unsigned LVDIF                  :1;
        unsigned BCL1IF                 :1;
        unsigned USBIF                  :1;
        unsigned CM1IF                  :1;
        unsigned CM2IF                  :1;
        unsigned OSCFIF                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned HLVDIF                 :1;
        unsigned BCLIF                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CMIF                   :1;
    };
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0xFA1;
// bitfield macros
#define _PIR2_CCP2IF_POSN                                   0x0
#define _PIR2_CCP2IF_POSITION                               0x0
#define _PIR2_CCP2IF_SIZE                                   0x1
#define _PIR2_CCP2IF_LENGTH                                 0x1
#define _PIR2_CCP2IF_MASK                                   0x1
#define _PIR2_TMR3IF_POSN                                   0x1
#define _PIR2_TMR3IF_POSITION                               0x1
#define _PIR2_TMR3IF_SIZE                                   0x1
#define _PIR2_TMR3IF_LENGTH                                 0x1
#define _PIR2_TMR3IF_MASK                                   0x2
#define _PIR2_LVDIF_POSN                                    0x2
#define _PIR2_LVDIF_POSITION                                0x2
#define _PIR2_LVDIF_SIZE                                    0x1
#define _PIR2_LVDIF_LENGTH                                  0x1
#define _PIR2_LVDIF_MASK                                    0x4
#define _PIR2_BCL1IF_POSN                                   0x3
#define _PIR2_BCL1IF_POSITION                               0x3
#define _PIR2_BCL1IF_SIZE                                   0x1
#define _PIR2_BCL1IF_LENGTH                                 0x1
#define _PIR2_BCL1IF_MASK                                   0x8
#define _PIR2_USBIF_POSN                                    0x4
#define _PIR2_USBIF_POSITION                                0x4
#define _PIR2_USBIF_SIZE                                    0x1
#define _PIR2_USBIF_LENGTH                                  0x1
#define _PIR2_USBIF_MASK                                    0x10
#define _PIR2_CM1IF_POSN                                    0x5
#define _PIR2_CM1IF_POSITION                                0x5
#define _PIR2_CM1IF_SIZE                                    0x1
#define _PIR2_CM1IF_LENGTH                                  0x1
#define _PIR2_CM1IF_MASK                                    0x20
#define _PIR2_CM2IF_POSN                                    0x6
#define _PIR2_CM2IF_POSITION                                0x6
#define _PIR2_CM2IF_SIZE                                    0x1
#define _PIR2_CM2IF_LENGTH                                  0x1
#define _PIR2_CM2IF_MASK                                    0x40
#define _PIR2_OSCFIF_POSN                                   0x7
#define _PIR2_OSCFIF_POSITION                               0x7
#define _PIR2_OSCFIF_SIZE                                   0x1
#define _PIR2_OSCFIF_LENGTH                                 0x1
#define _PIR2_OSCFIF_MASK                                   0x80
#define _PIR2_HLVDIF_POSN                                   0x2
#define _PIR2_HLVDIF_POSITION                               0x2
#define _PIR2_HLVDIF_SIZE                                   0x1
#define _PIR2_HLVDIF_LENGTH                                 0x1
#define _PIR2_HLVDIF_MASK                                   0x4
#define _PIR2_BCLIF_POSN                                    0x3
#define _PIR2_BCLIF_POSITION                                0x3
#define _PIR2_BCLIF_SIZE                                    0x1
#define _PIR2_BCLIF_LENGTH                                  0x1
#define _PIR2_BCLIF_MASK                                    0x8
#define _PIR2_CMIF_POSN                                     0x6
#define _PIR2_CMIF_POSITION                                 0x6
#define _PIR2_CMIF_SIZE                                     0x1
#define _PIR2_CMIF_LENGTH                                   0x1
#define _PIR2_CMIF_MASK                                     0x40

// Register: IPR2
extern volatile unsigned char           IPR2                @ 0xFA2;
#ifndef _LIB_BUILD
asm("IPR2 equ 0FA2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2IP                 :1;
        unsigned TMR3IP                 :1;
        unsigned LVDIP                  :1;
        unsigned BCL1IP                 :1;
        unsigned USBIP                  :1;
        unsigned CM1IP                  :1;
        unsigned CM2IP                  :1;
        unsigned OSCFIP                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned HLVDIP                 :1;
        unsigned BCLIP                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CMIP                   :1;
    };
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits @ 0xFA2;
// bitfield macros
#define _IPR2_CCP2IP_POSN                                   0x0
#define _IPR2_CCP2IP_POSITION                               0x0
#define _IPR2_CCP2IP_SIZE                                   0x1
#define _IPR2_CCP2IP_LENGTH                                 0x1
#define _IPR2_CCP2IP_MASK                                   0x1
#define _IPR2_TMR3IP_POSN                                   0x1
#define _IPR2_TMR3IP_POSITION                               0x1
#define _IPR2_TMR3IP_SIZE                                   0x1
#define _IPR2_TMR3IP_LENGTH                                 0x1
#define _IPR2_TMR3IP_MASK                                   0x2
#define _IPR2_LVDIP_POSN                                    0x2
#define _IPR2_LVDIP_POSITION                                0x2
#define _IPR2_LVDIP_SIZE                                    0x1
#define _IPR2_LVDIP_LENGTH                                  0x1
#define _IPR2_LVDIP_MASK                                    0x4
#define _IPR2_BCL1IP_POSN                                   0x3
#define _IPR2_BCL1IP_POSITION                               0x3
#define _IPR2_BCL1IP_SIZE                                   0x1
#define _IPR2_BCL1IP_LENGTH                                 0x1
#define _IPR2_BCL1IP_MASK                                   0x8
#define _IPR2_USBIP_POSN                                    0x4
#define _IPR2_USBIP_POSITION                                0x4
#define _IPR2_USBIP_SIZE                                    0x1
#define _IPR2_USBIP_LENGTH                                  0x1
#define _IPR2_USBIP_MASK                                    0x10
#define _IPR2_CM1IP_POSN                                    0x5
#define _IPR2_CM1IP_POSITION                                0x5
#define _IPR2_CM1IP_SIZE                                    0x1
#define _IPR2_CM1IP_LENGTH                                  0x1
#define _IPR2_CM1IP_MASK                                    0x20
#define _IPR2_CM2IP_POSN                                    0x6
#define _IPR2_CM2IP_POSITION                                0x6
#define _IPR2_CM2IP_SIZE                                    0x1
#define _IPR2_CM2IP_LENGTH                                  0x1
#define _IPR2_CM2IP_MASK                                    0x40
#define _IPR2_OSCFIP_POSN                                   0x7
#define _IPR2_OSCFIP_POSITION                               0x7
#define _IPR2_OSCFIP_SIZE                                   0x1
#define _IPR2_OSCFIP_LENGTH                                 0x1
#define _IPR2_OSCFIP_MASK                                   0x80
#define _IPR2_HLVDIP_POSN                                   0x2
#define _IPR2_HLVDIP_POSITION                               0x2
#define _IPR2_HLVDIP_SIZE                                   0x1
#define _IPR2_HLVDIP_LENGTH                                 0x1
#define _IPR2_HLVDIP_MASK                                   0x4
#define _IPR2_BCLIP_POSN                                    0x3
#define _IPR2_BCLIP_POSITION                                0x3
#define _IPR2_BCLIP_SIZE                                    0x1
#define _IPR2_BCLIP_LENGTH                                  0x1
#define _IPR2_BCLIP_MASK                                    0x8
#define _IPR2_CMIP_POSN                                     0x6
#define _IPR2_CMIP_POSITION                                 0x6
#define _IPR2_CMIP_SIZE                                     0x1
#define _IPR2_CMIP_LENGTH                                   0x1
#define _IPR2_CMIP_MASK                                     0x40

// Register: PIE3
extern volatile unsigned char           PIE3                @ 0xFA3;
#ifndef _LIB_BUILD
asm("PIE3 equ 0FA3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIE                 :1;
        unsigned TMR3GIE                :1;
        unsigned CTMUIE                 :1;
        unsigned TMR4IE                 :1;
        unsigned TX2IE                  :1;
        unsigned RC2IE                  :1;
        unsigned BCL2IE                 :1;
        unsigned SSP2IE                 :1;
    };
    struct {
        unsigned RXB0IE                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXB1IE                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIE                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned TXB0IE                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned TXB1IE                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXB2IE                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXBNIE                 :1;
    };
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits @ 0xFA3;
// bitfield macros
#define _PIE3_RTCCIE_POSN                                   0x0
#define _PIE3_RTCCIE_POSITION                               0x0
#define _PIE3_RTCCIE_SIZE                                   0x1
#define _PIE3_RTCCIE_LENGTH                                 0x1
#define _PIE3_RTCCIE_MASK                                   0x1
#define _PIE3_TMR3GIE_POSN                                  0x1
#define _PIE3_TMR3GIE_POSITION                              0x1
#define _PIE3_TMR3GIE_SIZE                                  0x1
#define _PIE3_TMR3GIE_LENGTH                                0x1
#define _PIE3_TMR3GIE_MASK                                  0x2
#define _PIE3_CTMUIE_POSN                                   0x2
#define _PIE3_CTMUIE_POSITION                               0x2
#define _PIE3_CTMUIE_SIZE                                   0x1
#define _PIE3_CTMUIE_LENGTH                                 0x1
#define _PIE3_CTMUIE_MASK                                   0x4
#define _PIE3_TMR4IE_POSN                                   0x3
#define _PIE3_TMR4IE_POSITION                               0x3
#define _PIE3_TMR4IE_SIZE                                   0x1
#define _PIE3_TMR4IE_LENGTH                                 0x1
#define _PIE3_TMR4IE_MASK                                   0x8
#define _PIE3_TX2IE_POSN                                    0x4
#define _PIE3_TX2IE_POSITION                                0x4
#define _PIE3_TX2IE_SIZE                                    0x1
#define _PIE3_TX2IE_LENGTH                                  0x1
#define _PIE3_TX2IE_MASK                                    0x10
#define _PIE3_RC2IE_POSN                                    0x5
#define _PIE3_RC2IE_POSITION                                0x5
#define _PIE3_RC2IE_SIZE                                    0x1
#define _PIE3_RC2IE_LENGTH                                  0x1
#define _PIE3_RC2IE_MASK                                    0x20
#define _PIE3_BCL2IE_POSN                                   0x6
#define _PIE3_BCL2IE_POSITION                               0x6
#define _PIE3_BCL2IE_SIZE                                   0x1
#define _PIE3_BCL2IE_LENGTH                                 0x1
#define _PIE3_BCL2IE_MASK                                   0x40
#define _PIE3_SSP2IE_POSN                                   0x7
#define _PIE3_SSP2IE_POSITION                               0x7
#define _PIE3_SSP2IE_SIZE                                   0x1
#define _PIE3_SSP2IE_LENGTH                                 0x1
#define _PIE3_SSP2IE_MASK                                   0x80
#define _PIE3_RXB0IE_POSN                                   0x0
#define _PIE3_RXB0IE_POSITION                               0x0
#define _PIE3_RXB0IE_SIZE                                   0x1
#define _PIE3_RXB0IE_LENGTH                                 0x1
#define _PIE3_RXB0IE_MASK                                   0x1
#define _PIE3_RXB1IE_POSN                                   0x1
#define _PIE3_RXB1IE_POSITION                               0x1
#define _PIE3_RXB1IE_SIZE                                   0x1
#define _PIE3_RXB1IE_LENGTH                                 0x1
#define _PIE3_RXB1IE_MASK                                   0x2
#define _PIE3_RXBNIE_POSN                                   0x1
#define _PIE3_RXBNIE_POSITION                               0x1
#define _PIE3_RXBNIE_SIZE                                   0x1
#define _PIE3_RXBNIE_LENGTH                                 0x1
#define _PIE3_RXBNIE_MASK                                   0x2
#define _PIE3_TXB0IE_POSN                                   0x2
#define _PIE3_TXB0IE_POSITION                               0x2
#define _PIE3_TXB0IE_SIZE                                   0x1
#define _PIE3_TXB0IE_LENGTH                                 0x1
#define _PIE3_TXB0IE_MASK                                   0x4
#define _PIE3_TXB1IE_POSN                                   0x3
#define _PIE3_TXB1IE_POSITION                               0x3
#define _PIE3_TXB1IE_SIZE                                   0x1
#define _PIE3_TXB1IE_LENGTH                                 0x1
#define _PIE3_TXB1IE_MASK                                   0x8
#define _PIE3_TXB2IE_POSN                                   0x4
#define _PIE3_TXB2IE_POSITION                               0x4
#define _PIE3_TXB2IE_SIZE                                   0x1
#define _PIE3_TXB2IE_LENGTH                                 0x1
#define _PIE3_TXB2IE_MASK                                   0x10
#define _PIE3_TXBNIE_POSN                                   0x4
#define _PIE3_TXBNIE_POSITION                               0x4
#define _PIE3_TXBNIE_SIZE                                   0x1
#define _PIE3_TXBNIE_LENGTH                                 0x1
#define _PIE3_TXBNIE_MASK                                   0x10

// Register: PIR3
extern volatile unsigned char           PIR3                @ 0xFA4;
#ifndef _LIB_BUILD
asm("PIR3 equ 0FA4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIF                 :1;
        unsigned TMR3GIF                :1;
        unsigned CTMUIF                 :1;
        unsigned TMR4IF                 :1;
        unsigned TX2IF                  :1;
        unsigned RC2IF                  :1;
        unsigned BCL2IF                 :1;
        unsigned SSP2IF                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIF                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXBNIF                 :1;
    };
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits @ 0xFA4;
// bitfield macros
#define _PIR3_RTCCIF_POSN                                   0x0
#define _PIR3_RTCCIF_POSITION                               0x0
#define _PIR3_RTCCIF_SIZE                                   0x1
#define _PIR3_RTCCIF_LENGTH                                 0x1
#define _PIR3_RTCCIF_MASK                                   0x1
#define _PIR3_TMR3GIF_POSN                                  0x1
#define _PIR3_TMR3GIF_POSITION                              0x1
#define _PIR3_TMR3GIF_SIZE                                  0x1
#define _PIR3_TMR3GIF_LENGTH                                0x1
#define _PIR3_TMR3GIF_MASK                                  0x2
#define _PIR3_CTMUIF_POSN                                   0x2
#define _PIR3_CTMUIF_POSITION                               0x2
#define _PIR3_CTMUIF_SIZE                                   0x1
#define _PIR3_CTMUIF_LENGTH                                 0x1
#define _PIR3_CTMUIF_MASK                                   0x4
#define _PIR3_TMR4IF_POSN                                   0x3
#define _PIR3_TMR4IF_POSITION                               0x3
#define _PIR3_TMR4IF_SIZE                                   0x1
#define _PIR3_TMR4IF_LENGTH                                 0x1
#define _PIR3_TMR4IF_MASK                                   0x8
#define _PIR3_TX2IF_POSN                                    0x4
#define _PIR3_TX2IF_POSITION                                0x4
#define _PIR3_TX2IF_SIZE                                    0x1
#define _PIR3_TX2IF_LENGTH                                  0x1
#define _PIR3_TX2IF_MASK                                    0x10
#define _PIR3_RC2IF_POSN                                    0x5
#define _PIR3_RC2IF_POSITION                                0x5
#define _PIR3_RC2IF_SIZE                                    0x1
#define _PIR3_RC2IF_LENGTH                                  0x1
#define _PIR3_RC2IF_MASK                                    0x20
#define _PIR3_BCL2IF_POSN                                   0x6
#define _PIR3_BCL2IF_POSITION                               0x6
#define _PIR3_BCL2IF_SIZE                                   0x1
#define _PIR3_BCL2IF_LENGTH                                 0x1
#define _PIR3_BCL2IF_MASK                                   0x40
#define _PIR3_SSP2IF_POSN                                   0x7
#define _PIR3_SSP2IF_POSITION                               0x7
#define _PIR3_SSP2IF_SIZE                                   0x1
#define _PIR3_SSP2IF_LENGTH                                 0x1
#define _PIR3_SSP2IF_MASK                                   0x80
#define _PIR3_RXBNIF_POSN                                   0x1
#define _PIR3_RXBNIF_POSITION                               0x1
#define _PIR3_RXBNIF_SIZE                                   0x1
#define _PIR3_RXBNIF_LENGTH                                 0x1
#define _PIR3_RXBNIF_MASK                                   0x2
#define _PIR3_TXBNIF_POSN                                   0x4
#define _PIR3_TXBNIF_POSITION                               0x4
#define _PIR3_TXBNIF_SIZE                                   0x1
#define _PIR3_TXBNIF_LENGTH                                 0x1
#define _PIR3_TXBNIF_MASK                                   0x10

// Register: IPR3
extern volatile unsigned char           IPR3                @ 0xFA5;
#ifndef _LIB_BUILD
asm("IPR3 equ 0FA5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RTCCIP                 :1;
        unsigned TMR3GIP                :1;
        unsigned CTMUIP                 :1;
        unsigned TMR4IP                 :1;
        unsigned TX2IP                  :1;
        unsigned RC2IP                  :1;
        unsigned BCL2IP                 :1;
        unsigned SSP2IP                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned RXBNIP                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned TXBNIP                 :1;
    };
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits @ 0xFA5;
// bitfield macros
#define _IPR3_RTCCIP_POSN                                   0x0
#define _IPR3_RTCCIP_POSITION                               0x0
#define _IPR3_RTCCIP_SIZE                                   0x1
#define _IPR3_RTCCIP_LENGTH                                 0x1
#define _IPR3_RTCCIP_MASK                                   0x1
#define _IPR3_TMR3GIP_POSN                                  0x1
#define _IPR3_TMR3GIP_POSITION                              0x1
#define _IPR3_TMR3GIP_SIZE                                  0x1
#define _IPR3_TMR3GIP_LENGTH                                0x1
#define _IPR3_TMR3GIP_MASK                                  0x2
#define _IPR3_CTMUIP_POSN                                   0x2
#define _IPR3_CTMUIP_POSITION                               0x2
#define _IPR3_CTMUIP_SIZE                                   0x1
#define _IPR3_CTMUIP_LENGTH                                 0x1
#define _IPR3_CTMUIP_MASK                                   0x4
#define _IPR3_TMR4IP_POSN                                   0x3
#define _IPR3_TMR4IP_POSITION                               0x3
#define _IPR3_TMR4IP_SIZE                                   0x1
#define _IPR3_TMR4IP_LENGTH                                 0x1
#define _IPR3_TMR4IP_MASK                                   0x8
#define _IPR3_TX2IP_POSN                                    0x4
#define _IPR3_TX2IP_POSITION                                0x4
#define _IPR3_TX2IP_SIZE                                    0x1
#define _IPR3_TX2IP_LENGTH                                  0x1
#define _IPR3_TX2IP_MASK                                    0x10
#define _IPR3_RC2IP_POSN                                    0x5
#define _IPR3_RC2IP_POSITION                                0x5
#define _IPR3_RC2IP_SIZE                                    0x1
#define _IPR3_RC2IP_LENGTH                                  0x1
#define _IPR3_RC2IP_MASK                                    0x20
#define _IPR3_BCL2IP_POSN                                   0x6
#define _IPR3_BCL2IP_POSITION                               0x6
#define _IPR3_BCL2IP_SIZE                                   0x1
#define _IPR3_BCL2IP_LENGTH                                 0x1
#define _IPR3_BCL2IP_MASK                                   0x40
#define _IPR3_SSP2IP_POSN                                   0x7
#define _IPR3_SSP2IP_POSITION                               0x7
#define _IPR3_SSP2IP_SIZE                                   0x1
#define _IPR3_SSP2IP_LENGTH                                 0x1
#define _IPR3_SSP2IP_MASK                                   0x80
#define _IPR3_RXBNIP_POSN                                   0x1
#define _IPR3_RXBNIP_POSITION                               0x1
#define _IPR3_RXBNIP_SIZE                                   0x1
#define _IPR3_RXBNIP_LENGTH                                 0x1
#define _IPR3_RXBNIP_MASK                                   0x2
#define _IPR3_TXBNIP_POSN                                   0x4
#define _IPR3_TXBNIP_POSITION                               0x4
#define _IPR3_TXBNIP_SIZE                                   0x1
#define _IPR3_TXBNIP_LENGTH                                 0x1
#define _IPR3_TXBNIP_MASK                                   0x10

// Register: EECON1
extern volatile unsigned char           EECON1              @ 0xFA6;
#ifndef _LIB_BUILD
asm("EECON1 equ 0FA6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned WR                     :1;
        unsigned WREN                   :1;
        unsigned WRERR                  :1;
        unsigned FREE                   :1;
        unsigned WPROG                  :1;
    };
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits @ 0xFA6;
// bitfield macros
#define _EECON1_WR_POSN                                     0x1
#define _EECON1_WR_POSITION                                 0x1
#define _EECON1_WR_SIZE                                     0x1
#define _EECON1_WR_LENGTH                                   0x1
#define _EECON1_WR_MASK                                     0x2
#define _EECON1_WREN_POSN                                   0x2
#define _EECON1_WREN_POSITION                               0x2
#define _EECON1_WREN_SIZE                                   0x1
#define _EECON1_WREN_LENGTH                                 0x1
#define _EECON1_WREN_MASK                                   0x4
#define _EECON1_WRERR_POSN                                  0x3
#define _EECON1_WRERR_POSITION                              0x3
#define _EECON1_WRERR_SIZE                                  0x1
#define _EECON1_WRERR_LENGTH                                0x1
#define _EECON1_WRERR_MASK                                  0x8
#define _EECON1_FREE_POSN                                   0x4
#define _EECON1_FREE_POSITION                               0x4
#define _EECON1_FREE_SIZE                                   0x1
#define _EECON1_FREE_LENGTH                                 0x1
#define _EECON1_FREE_MASK                                   0x10
#define _EECON1_WPROG_POSN                                  0x5
#define _EECON1_WPROG_POSITION                              0x5
#define _EECON1_WPROG_SIZE                                  0x1
#define _EECON1_WPROG_LENGTH                                0x1
#define _EECON1_WPROG_MASK                                  0x20

// Register: EECON2
extern volatile unsigned char           EECON2              @ 0xFA7;
#ifndef _LIB_BUILD
asm("EECON2 equ 0FA7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EECON2                 :8;
    };
} EECON2bits_t;
extern volatile EECON2bits_t EECON2bits @ 0xFA7;
// bitfield macros
#define _EECON2_EECON2_POSN                                 0x0
#define _EECON2_EECON2_POSITION                             0x0
#define _EECON2_EECON2_SIZE                                 0x8
#define _EECON2_EECON2_LENGTH                               0x8
#define _EECON2_EECON2_MASK                                 0xFF

// Register: TXSTA2
extern volatile unsigned char           TXSTA2              @ 0xFA8;
#ifndef _LIB_BUILD
asm("TXSTA2 equ 0FA8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TX9D2                  :1;
        unsigned TRMT2                  :1;
        unsigned BRGH2                  :1;
        unsigned SENDB2                 :1;
        unsigned SYNC2                  :1;
        unsigned TXEN2                  :1;
        unsigned TX92                   :1;
        unsigned CSRC2                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned TX8_92                 :1;
    };
    struct {
        unsigned TXD82                  :1;
    };
} TXSTA2bits_t;
extern volatile TXSTA2bits_t TXSTA2bits @ 0xFA8;
// bitfield macros
#define _TXSTA2_TX9D_POSN                                   0x0
#define _TXSTA2_TX9D_POSITION                               0x0
#define _TXSTA2_TX9D_SIZE                                   0x1
#define _TXSTA2_TX9D_LENGTH                                 0x1
#define _TXSTA2_TX9D_MASK                                   0x1
#define _TXSTA2_TRMT_POSN                                   0x1
#define _TXSTA2_TRMT_POSITION                               0x1
#define _TXSTA2_TRMT_SIZE                                   0x1
#define _TXSTA2_TRMT_LENGTH                                 0x1
#define _TXSTA2_TRMT_MASK                                   0x2
#define _TXSTA2_BRGH_POSN                                   0x2
#define _TXSTA2_BRGH_POSITION                               0x2
#define _TXSTA2_BRGH_SIZE                                   0x1
#define _TXSTA2_BRGH_LENGTH                                 0x1
#define _TXSTA2_BRGH_MASK                                   0x4
#define _TXSTA2_SENDB_POSN                                  0x3
#define _TXSTA2_SENDB_POSITION                              0x3
#define _TXSTA2_SENDB_SIZE                                  0x1
#define _TXSTA2_SENDB_LENGTH                                0x1
#define _TXSTA2_SENDB_MASK                                  0x8
#define _TXSTA2_SYNC_POSN                                   0x4
#define _TXSTA2_SYNC_POSITION                               0x4
#define _TXSTA2_SYNC_SIZE                                   0x1
#define _TXSTA2_SYNC_LENGTH                                 0x1
#define _TXSTA2_SYNC_MASK                                   0x10
#define _TXSTA2_TXEN_POSN                                   0x5
#define _TXSTA2_TXEN_POSITION                               0x5
#define _TXSTA2_TXEN_SIZE                                   0x1
#define _TXSTA2_TXEN_LENGTH                                 0x1
#define _TXSTA2_TXEN_MASK                                   0x20
#define _TXSTA2_TX9_POSN                                    0x6
#define _TXSTA2_TX9_POSITION                                0x6
#define _TXSTA2_TX9_SIZE                                    0x1
#define _TXSTA2_TX9_LENGTH                                  0x1
#define _TXSTA2_TX9_MASK                                    0x40
#define _TXSTA2_CSRC_POSN                                   0x7
#define _TXSTA2_CSRC_POSITION                               0x7
#define _TXSTA2_CSRC_SIZE                                   0x1
#define _TXSTA2_CSRC_LENGTH                                 0x1
#define _TXSTA2_CSRC_MASK                                   0x80
#define _TXSTA2_TX9D2_POSN                                  0x0
#define _TXSTA2_TX9D2_POSITION                              0x0
#define _TXSTA2_TX9D2_SIZE                                  0x1
#define _TXSTA2_TX9D2_LENGTH                                0x1
#define _TXSTA2_TX9D2_MASK                                  0x1
#define _TXSTA2_TRMT2_POSN                                  0x1
#define _TXSTA2_TRMT2_POSITION                              0x1
#define _TXSTA2_TRMT2_SIZE                                  0x1
#define _TXSTA2_TRMT2_LENGTH                                0x1
#define _TXSTA2_TRMT2_MASK                                  0x2
#define _TXSTA2_BRGH2_POSN                                  0x2
#define _TXSTA2_BRGH2_POSITION                              0x2
#define _TXSTA2_BRGH2_SIZE                                  0x1
#define _TXSTA2_BRGH2_LENGTH                                0x1
#define _TXSTA2_BRGH2_MASK                                  0x4
#define _TXSTA2_SENDB2_POSN                                 0x3
#define _TXSTA2_SENDB2_POSITION                             0x3
#define _TXSTA2_SENDB2_SIZE                                 0x1
#define _TXSTA2_SENDB2_LENGTH                               0x1
#define _TXSTA2_SENDB2_MASK                                 0x8
#define _TXSTA2_SYNC2_POSN                                  0x4
#define _TXSTA2_SYNC2_POSITION                              0x4
#define _TXSTA2_SYNC2_SIZE                                  0x1
#define _TXSTA2_SYNC2_LENGTH                                0x1
#define _TXSTA2_SYNC2_MASK                                  0x10
#define _TXSTA2_TXEN2_POSN                                  0x5
#define _TXSTA2_TXEN2_POSITION                              0x5
#define _TXSTA2_TXEN2_SIZE                                  0x1
#define _TXSTA2_TXEN2_LENGTH                                0x1
#define _TXSTA2_TXEN2_MASK                                  0x20
#define _TXSTA2_TX92_POSN                                   0x6
#define _TXSTA2_TX92_POSITION                               0x6
#define _TXSTA2_TX92_SIZE                                   0x1
#define _TXSTA2_TX92_LENGTH                                 0x1
#define _TXSTA2_TX92_MASK                                   0x40
#define _TXSTA2_CSRC2_POSN                                  0x7
#define _TXSTA2_CSRC2_POSITION                              0x7
#define _TXSTA2_CSRC2_SIZE                                  0x1
#define _TXSTA2_CSRC2_LENGTH                                0x1
#define _TXSTA2_CSRC2_MASK                                  0x80
#define _TXSTA2_TX8_92_POSN                                 0x6
#define _TXSTA2_TX8_92_POSITION                             0x6
#define _TXSTA2_TX8_92_SIZE                                 0x1
#define _TXSTA2_TX8_92_LENGTH                               0x1
#define _TXSTA2_TX8_92_MASK                                 0x40
#define _TXSTA2_TXD82_POSN                                  0x0
#define _TXSTA2_TXD82_POSITION                              0x0
#define _TXSTA2_TXD82_SIZE                                  0x1
#define _TXSTA2_TXD82_LENGTH                                0x1
#define _TXSTA2_TXD82_MASK                                  0x1

// Register: TXREG2
extern volatile unsigned char           TXREG2              @ 0xFA9;
#ifndef _LIB_BUILD
asm("TXREG2 equ 0FA9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXREG2                 :8;
    };
} TXREG2bits_t;
extern volatile TXREG2bits_t TXREG2bits @ 0xFA9;
// bitfield macros
#define _TXREG2_TXREG2_POSN                                 0x0
#define _TXREG2_TXREG2_POSITION                             0x0
#define _TXREG2_TXREG2_SIZE                                 0x8
#define _TXREG2_TXREG2_LENGTH                               0x8
#define _TXREG2_TXREG2_MASK                                 0xFF

// Register: RCREG2
extern volatile unsigned char           RCREG2              @ 0xFAA;
#ifndef _LIB_BUILD
asm("RCREG2 equ 0FAAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RCREG2                 :8;
    };
} RCREG2bits_t;
extern volatile RCREG2bits_t RCREG2bits @ 0xFAA;
// bitfield macros
#define _RCREG2_RCREG2_POSN                                 0x0
#define _RCREG2_RCREG2_POSITION                             0x0
#define _RCREG2_RCREG2_SIZE                                 0x8
#define _RCREG2_RCREG2_LENGTH                               0x8
#define _RCREG2_RCREG2_MASK                                 0xFF

// Register: SPBRG2
extern volatile unsigned char           SPBRG2              @ 0xFAB;
#ifndef _LIB_BUILD
asm("SPBRG2 equ 0FABh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRG2                 :8;
    };
} SPBRG2bits_t;
extern volatile SPBRG2bits_t SPBRG2bits @ 0xFAB;
// bitfield macros
#define _SPBRG2_SPBRG2_POSN                                 0x0
#define _SPBRG2_SPBRG2_POSITION                             0x0
#define _SPBRG2_SPBRG2_SIZE                                 0x8
#define _SPBRG2_SPBRG2_LENGTH                               0x8
#define _SPBRG2_SPBRG2_MASK                                 0xFF

// Register: RCSTA1
extern volatile unsigned char           RCSTA1              @ 0xFAC;
#ifndef _LIB_BUILD
asm("RCSTA1 equ 0FACh");
#endif
// aliases
extern volatile unsigned char           RCSTA               @ 0xFAC;
#ifndef _LIB_BUILD
asm("RCSTA equ 0FACh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :2;
        unsigned ADEN                   :1;
        unsigned                        :2;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAC;
// bitfield macros
#define _RCSTA1_RX9D_POSN                                   0x0
#define _RCSTA1_RX9D_POSITION                               0x0
#define _RCSTA1_RX9D_SIZE                                   0x1
#define _RCSTA1_RX9D_LENGTH                                 0x1
#define _RCSTA1_RX9D_MASK                                   0x1
#define _RCSTA1_OERR_POSN                                   0x1
#define _RCSTA1_OERR_POSITION                               0x1
#define _RCSTA1_OERR_SIZE                                   0x1
#define _RCSTA1_OERR_LENGTH                                 0x1
#define _RCSTA1_OERR_MASK                                   0x2
#define _RCSTA1_FERR_POSN                                   0x2
#define _RCSTA1_FERR_POSITION                               0x2
#define _RCSTA1_FERR_SIZE                                   0x1
#define _RCSTA1_FERR_LENGTH                                 0x1
#define _RCSTA1_FERR_MASK                                   0x4
#define _RCSTA1_ADDEN_POSN                                  0x3
#define _RCSTA1_ADDEN_POSITION                              0x3
#define _RCSTA1_ADDEN_SIZE                                  0x1
#define _RCSTA1_ADDEN_LENGTH                                0x1
#define _RCSTA1_ADDEN_MASK                                  0x8
#define _RCSTA1_CREN_POSN                                   0x4
#define _RCSTA1_CREN_POSITION                               0x4
#define _RCSTA1_CREN_SIZE                                   0x1
#define _RCSTA1_CREN_LENGTH                                 0x1
#define _RCSTA1_CREN_MASK                                   0x10
#define _RCSTA1_SREN_POSN                                   0x5
#define _RCSTA1_SREN_POSITION                               0x5
#define _RCSTA1_SREN_SIZE                                   0x1
#define _RCSTA1_SREN_LENGTH                                 0x1
#define _RCSTA1_SREN_MASK                                   0x20
#define _RCSTA1_RX9_POSN                                    0x6
#define _RCSTA1_RX9_POSITION                                0x6
#define _RCSTA1_RX9_SIZE                                    0x1
#define _RCSTA1_RX9_LENGTH                                  0x1
#define _RCSTA1_RX9_MASK                                    0x40
#define _RCSTA1_SPEN_POSN                                   0x7
#define _RCSTA1_SPEN_POSITION                               0x7
#define _RCSTA1_SPEN_SIZE                                   0x1
#define _RCSTA1_SPEN_LENGTH                                 0x1
#define _RCSTA1_SPEN_MASK                                   0x80
#define _RCSTA1_RCD8_POSN                                   0x0
#define _RCSTA1_RCD8_POSITION                               0x0
#define _RCSTA1_RCD8_SIZE                                   0x1
#define _RCSTA1_RCD8_LENGTH                                 0x1
#define _RCSTA1_RCD8_MASK                                   0x1
#define _RCSTA1_ADEN_POSN                                   0x3
#define _RCSTA1_ADEN_POSITION                               0x3
#define _RCSTA1_ADEN_SIZE                                   0x1
#define _RCSTA1_ADEN_LENGTH                                 0x1
#define _RCSTA1_ADEN_MASK                                   0x8
#define _RCSTA1_RC9_POSN                                    0x6
#define _RCSTA1_RC9_POSITION                                0x6
#define _RCSTA1_RC9_SIZE                                    0x1
#define _RCSTA1_RC9_LENGTH                                  0x1
#define _RCSTA1_RC9_MASK                                    0x40
#define _RCSTA1_NOT_RC8_POSN                                0x6
#define _RCSTA1_NOT_RC8_POSITION                            0x6
#define _RCSTA1_NOT_RC8_SIZE                                0x1
#define _RCSTA1_NOT_RC8_LENGTH                              0x1
#define _RCSTA1_NOT_RC8_MASK                                0x40
#define _RCSTA1_nRC8_POSN                                   0x6
#define _RCSTA1_nRC8_POSITION                               0x6
#define _RCSTA1_nRC8_SIZE                                   0x1
#define _RCSTA1_nRC8_LENGTH                                 0x1
#define _RCSTA1_nRC8_MASK                                   0x40
#define _RCSTA1_RC8_9_POSN                                  0x6
#define _RCSTA1_RC8_9_POSITION                              0x6
#define _RCSTA1_RC8_9_SIZE                                  0x1
#define _RCSTA1_RC8_9_LENGTH                                0x1
#define _RCSTA1_RC8_9_MASK                                  0x40
#define _RCSTA1_RX9D1_POSN                                  0x0
#define _RCSTA1_RX9D1_POSITION                              0x0
#define _RCSTA1_RX9D1_SIZE                                  0x1
#define _RCSTA1_RX9D1_LENGTH                                0x1
#define _RCSTA1_RX9D1_MASK                                  0x1
#define _RCSTA1_OERR1_POSN                                  0x1
#define _RCSTA1_OERR1_POSITION                              0x1
#define _RCSTA1_OERR1_SIZE                                  0x1
#define _RCSTA1_OERR1_LENGTH                                0x1
#define _RCSTA1_OERR1_MASK                                  0x2
#define _RCSTA1_FERR1_POSN                                  0x2
#define _RCSTA1_FERR1_POSITION                              0x2
#define _RCSTA1_FERR1_SIZE                                  0x1
#define _RCSTA1_FERR1_LENGTH                                0x1
#define _RCSTA1_FERR1_MASK                                  0x4
#define _RCSTA1_ADDEN1_POSN                                 0x3
#define _RCSTA1_ADDEN1_POSITION                             0x3
#define _RCSTA1_ADDEN1_SIZE                                 0x1
#define _RCSTA1_ADDEN1_LENGTH                               0x1
#define _RCSTA1_ADDEN1_MASK                                 0x8
#define _RCSTA1_CREN1_POSN                                  0x4
#define _RCSTA1_CREN1_POSITION                              0x4
#define _RCSTA1_CREN1_SIZE                                  0x1
#define _RCSTA1_CREN1_LENGTH                                0x1
#define _RCSTA1_CREN1_MASK                                  0x10
#define _RCSTA1_SREN1_POSN                                  0x5
#define _RCSTA1_SREN1_POSITION                              0x5
#define _RCSTA1_SREN1_SIZE                                  0x1
#define _RCSTA1_SREN1_LENGTH                                0x1
#define _RCSTA1_SREN1_MASK                                  0x20
#define _RCSTA1_RX91_POSN                                   0x6
#define _RCSTA1_RX91_POSITION                               0x6
#define _RCSTA1_RX91_SIZE                                   0x1
#define _RCSTA1_RX91_LENGTH                                 0x1
#define _RCSTA1_RX91_MASK                                   0x40
#define _RCSTA1_SPEN1_POSN                                  0x7
#define _RCSTA1_SPEN1_POSITION                              0x7
#define _RCSTA1_SPEN1_SIZE                                  0x1
#define _RCSTA1_SPEN1_LENGTH                                0x1
#define _RCSTA1_SPEN1_MASK                                  0x80
#define _RCSTA1_SRENA_POSN                                  0x5
#define _RCSTA1_SRENA_POSITION                              0x5
#define _RCSTA1_SRENA_SIZE                                  0x1
#define _RCSTA1_SRENA_LENGTH                                0x1
#define _RCSTA1_SRENA_MASK                                  0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned RX9D                   :1;
        unsigned OERR                   :1;
        unsigned FERR                   :1;
        unsigned ADDEN                  :1;
        unsigned CREN                   :1;
        unsigned SREN                   :1;
        unsigned RX9                    :1;
        unsigned SPEN                   :1;
    };
    struct {
        unsigned RCD8                   :1;
        unsigned                        :2;
        unsigned ADEN                   :1;
        unsigned                        :2;
        unsigned RC9                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_RC8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nRC8                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned RC8_9                  :1;
    };
    struct {
        unsigned RX9D1                  :1;
        unsigned OERR1                  :1;
        unsigned FERR1                  :1;
        unsigned ADDEN1                 :1;
        unsigned CREN1                  :1;
        unsigned SREN1                  :1;
        unsigned RX91                   :1;
        unsigned SPEN1                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned SRENA                  :1;
    };
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0xFAC;
// bitfield macros
#define _RCSTA_RX9D_POSN                                    0x0
#define _RCSTA_RX9D_POSITION                                0x0
#define _RCSTA_RX9D_SIZE                                    0x1
#define _RCSTA_RX9D_LENGTH                                  0x1
#define _RCSTA_RX9D_MASK                                    0x1
#define _RCSTA_OERR_POSN                                    0x1
#define _RCSTA_OERR_POSITION                                0x1
#define _RCSTA_OERR_SIZE                                    0x1
#define _RCSTA_OERR_LENGTH                                  0x1
#define _RCSTA_OERR_MASK                                    0x2
#define _RCSTA_FERR_POSN                                    0x2
#define _RCSTA_FERR_POSITION                                0x2
#define _RCSTA_FERR_SIZE                                    0x1
#define _RCSTA_FERR_LENGTH                                  0x1
#define _RCSTA_FERR_MASK                                    0x4
#define _RCSTA_ADDEN_POSN                                   0x3
#define _RCSTA_ADDEN_POSITION                               0x3
#define _RCSTA_ADDEN_SIZE                                   0x1
#define _RCSTA_ADDEN_LENGTH                                 0x1
#define _RCSTA_ADDEN_MASK                                   0x8
#define _RCSTA_CREN_POSN                                    0x4
#define _RCSTA_CREN_POSITION                                0x4
#define _RCSTA_CREN_SIZE                                    0x1
#define _RCSTA_CREN_LENGTH                                  0x1
#define _RCSTA_CREN_MASK                                    0x10
#define _RCSTA_SREN_POSN                                    0x5
#define _RCSTA_SREN_POSITION                                0x5
#define _RCSTA_SREN_SIZE                                    0x1
#define _RCSTA_SREN_LENGTH                                  0x1
#define _RCSTA_SREN_MASK                                    0x20
#define _RCSTA_RX9_POSN                                     0x6
#define _RCSTA_RX9_POSITION                                 0x6
#define _RCSTA_RX9_SIZE                                     0x1
#define _RCSTA_RX9_LENGTH                                   0x1
#define _RCSTA_RX9_MASK                                     0x40
#define _RCSTA_SPEN_POSN                                    0x7
#define _RCSTA_SPEN_POSITION                                0x7
#define _RCSTA_SPEN_SIZE                                    0x1
#define _RCSTA_SPEN_LENGTH                                  0x1
#define _RCSTA_SPEN_MASK                                    0x80
#define _RCSTA_RCD8_POSN                                    0x0
#define _RCSTA_RCD8_POSITION                                0x0
#define _RCSTA_RCD8_SIZE                                    0x1
#define _RCSTA_RCD8_LENGTH                                  0x1
#define _RCSTA_RCD8_MASK                                    0x1
#define _RCSTA_ADEN_POSN                                    0x3
#define _RCSTA_ADEN_POSITION                                0x3
#define _RCSTA_ADEN_SIZE                                    0x1
#define _RCSTA_ADEN_LENGTH                                  0x1
#define _RCSTA_ADEN_MASK                                    0x8
#define _RCSTA_RC9_POSN                                     0x6
#define _RCSTA_RC9_POSITION                                 0x6
#define _RCSTA_RC9_SIZE                                     0x1
#define _RCSTA_RC9_LENGTH                                   0x1
#define _RCSTA_RC9_MASK                                     0x40
#define _RCSTA_NOT_RC8_POSN                                 0x6
#define _RCSTA_NOT_RC8_POSITION                             0x6
#define _RCSTA_NOT_RC8_SIZE                                 0x1
#define _RCSTA_NOT_RC8_LENGTH                               0x1
#define _RCSTA_NOT_RC8_MASK                                 0x40
#define _RCSTA_nRC8_POSN                                    0x6
#define _RCSTA_nRC8_POSITION                                0x6
#define _RCSTA_nRC8_SIZE                                    0x1
#define _RCSTA_nRC8_LENGTH                                  0x1
#define _RCSTA_nRC8_MASK                                    0x40
#define _RCSTA_RC8_9_POSN                                   0x6
#define _RCSTA_RC8_9_POSITION                               0x6
#define _RCSTA_RC8_9_SIZE                                   0x1
#define _RCSTA_RC8_9_LENGTH                                 0x1
#define _RCSTA_RC8_9_MASK                                   0x40
#define _RCSTA_RX9D1_POSN                                   0x0
#define _RCSTA_RX9D1_POSITION                               0x0
#define _RCSTA_RX9D1_SIZE                                   0x1
#define _RCSTA_RX9D1_LENGTH                                 0x1
#define _RCSTA_RX9D1_MASK                                   0x1
#define _RCSTA_OERR1_POSN                                   0x1
#define _RCSTA_OERR1_POSITION                               0x1
#define _RCSTA_OERR1_SIZE                                   0x1
#define _RCSTA_OERR1_LENGTH                                 0x1
#define _RCSTA_OERR1_MASK                                   0x2
#define _RCSTA_FERR1_POSN                                   0x2
#define _RCSTA_FERR1_POSITION                               0x2
#define _RCSTA_FERR1_SIZE                                   0x1
#define _RCSTA_FERR1_LENGTH                                 0x1
#define _RCSTA_FERR1_MASK                                   0x4
#define _RCSTA_ADDEN1_POSN                                  0x3
#define _RCSTA_ADDEN1_POSITION                              0x3
#define _RCSTA_ADDEN1_SIZE                                  0x1
#define _RCSTA_ADDEN1_LENGTH                                0x1
#define _RCSTA_ADDEN1_MASK                                  0x8
#define _RCSTA_CREN1_POSN                                   0x4
#define _RCSTA_CREN1_POSITION                               0x4
#define _RCSTA_CREN1_SIZE                                   0x1
#define _RCSTA_CREN1_LENGTH                                 0x1
#define _RCSTA_CREN1_MASK                                   0x10
#define _RCSTA_SREN1_POSN                                   0x5
#define _RCSTA_SREN1_POSITION                               0x5
#define _RCSTA_SREN1_SIZE                                   0x1
#define _RCSTA_SREN1_LENGTH                                 0x1
#define _RCSTA_SREN1_MASK                                   0x20
#define _RCSTA_RX91_POSN                                    0x6
#define _RCSTA_RX91_POSITION                                0x6
#define _RCSTA_RX91_SIZE                                    0x1
#define _RCSTA_RX91_LENGTH                                  0x1
#define _RCSTA_RX91_MASK                                    0x40
#define _RCSTA_SPEN1_POSN                                   0x7
#define _RCSTA_SPEN1_POSITION                               0x7
#define _RCSTA_SPEN1_SIZE                                   0x1
#define _RCSTA_SPEN1_LENGTH                                 0x1
#define _RCSTA_SPEN1_MASK                                   0x80
#define _RCSTA_SRENA_POSN                                   0x5
#define _RCSTA_SRENA_POSITION                               0x5
#define _RCSTA_SRENA_SIZE                                   0x1
#define _RCSTA_SRENA_LENGTH                                 0x1
#define _RCSTA_SRENA_MASK                                   0x20

// Register: TXSTA1
extern volatile unsigned char           TXSTA1              @ 0xFAD;
#ifndef _LIB_BUILD
asm("TXSTA1 equ 0FADh");
#endif
// aliases
extern volatile unsigned char           TXSTA               @ 0xFAD;
#ifndef _LIB_BUILD
asm("TXSTA equ 0FADh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAD;
// bitfield macros
#define _TXSTA1_TX9D_POSN                                   0x0
#define _TXSTA1_TX9D_POSITION                               0x0
#define _TXSTA1_TX9D_SIZE                                   0x1
#define _TXSTA1_TX9D_LENGTH                                 0x1
#define _TXSTA1_TX9D_MASK                                   0x1
#define _TXSTA1_TRMT_POSN                                   0x1
#define _TXSTA1_TRMT_POSITION                               0x1
#define _TXSTA1_TRMT_SIZE                                   0x1
#define _TXSTA1_TRMT_LENGTH                                 0x1
#define _TXSTA1_TRMT_MASK                                   0x2
#define _TXSTA1_BRGH_POSN                                   0x2
#define _TXSTA1_BRGH_POSITION                               0x2
#define _TXSTA1_BRGH_SIZE                                   0x1
#define _TXSTA1_BRGH_LENGTH                                 0x1
#define _TXSTA1_BRGH_MASK                                   0x4
#define _TXSTA1_SENDB_POSN                                  0x3
#define _TXSTA1_SENDB_POSITION                              0x3
#define _TXSTA1_SENDB_SIZE                                  0x1
#define _TXSTA1_SENDB_LENGTH                                0x1
#define _TXSTA1_SENDB_MASK                                  0x8
#define _TXSTA1_SYNC_POSN                                   0x4
#define _TXSTA1_SYNC_POSITION                               0x4
#define _TXSTA1_SYNC_SIZE                                   0x1
#define _TXSTA1_SYNC_LENGTH                                 0x1
#define _TXSTA1_SYNC_MASK                                   0x10
#define _TXSTA1_TXEN_POSN                                   0x5
#define _TXSTA1_TXEN_POSITION                               0x5
#define _TXSTA1_TXEN_SIZE                                   0x1
#define _TXSTA1_TXEN_LENGTH                                 0x1
#define _TXSTA1_TXEN_MASK                                   0x20
#define _TXSTA1_TX9_POSN                                    0x6
#define _TXSTA1_TX9_POSITION                                0x6
#define _TXSTA1_TX9_SIZE                                    0x1
#define _TXSTA1_TX9_LENGTH                                  0x1
#define _TXSTA1_TX9_MASK                                    0x40
#define _TXSTA1_CSRC_POSN                                   0x7
#define _TXSTA1_CSRC_POSITION                               0x7
#define _TXSTA1_CSRC_SIZE                                   0x1
#define _TXSTA1_CSRC_LENGTH                                 0x1
#define _TXSTA1_CSRC_MASK                                   0x80
#define _TXSTA1_TXD8_POSN                                   0x0
#define _TXSTA1_TXD8_POSITION                               0x0
#define _TXSTA1_TXD8_SIZE                                   0x1
#define _TXSTA1_TXD8_LENGTH                                 0x1
#define _TXSTA1_TXD8_MASK                                   0x1
#define _TXSTA1_TX8_9_POSN                                  0x6
#define _TXSTA1_TX8_9_POSITION                              0x6
#define _TXSTA1_TX8_9_SIZE                                  0x1
#define _TXSTA1_TX8_9_LENGTH                                0x1
#define _TXSTA1_TX8_9_MASK                                  0x40
#define _TXSTA1_NOT_TX8_POSN                                0x6
#define _TXSTA1_NOT_TX8_POSITION                            0x6
#define _TXSTA1_NOT_TX8_SIZE                                0x1
#define _TXSTA1_NOT_TX8_LENGTH                              0x1
#define _TXSTA1_NOT_TX8_MASK                                0x40
#define _TXSTA1_nTX8_POSN                                   0x6
#define _TXSTA1_nTX8_POSITION                               0x6
#define _TXSTA1_nTX8_SIZE                                   0x1
#define _TXSTA1_nTX8_LENGTH                                 0x1
#define _TXSTA1_nTX8_MASK                                   0x40
#define _TXSTA1_TX9D1_POSN                                  0x0
#define _TXSTA1_TX9D1_POSITION                              0x0
#define _TXSTA1_TX9D1_SIZE                                  0x1
#define _TXSTA1_TX9D1_LENGTH                                0x1
#define _TXSTA1_TX9D1_MASK                                  0x1
#define _TXSTA1_TRMT1_POSN                                  0x1
#define _TXSTA1_TRMT1_POSITION                              0x1
#define _TXSTA1_TRMT1_SIZE                                  0x1
#define _TXSTA1_TRMT1_LENGTH                                0x1
#define _TXSTA1_TRMT1_MASK                                  0x2
#define _TXSTA1_BRGH1_POSN                                  0x2
#define _TXSTA1_BRGH1_POSITION                              0x2
#define _TXSTA1_BRGH1_SIZE                                  0x1
#define _TXSTA1_BRGH1_LENGTH                                0x1
#define _TXSTA1_BRGH1_MASK                                  0x4
#define _TXSTA1_SENDB1_POSN                                 0x3
#define _TXSTA1_SENDB1_POSITION                             0x3
#define _TXSTA1_SENDB1_SIZE                                 0x1
#define _TXSTA1_SENDB1_LENGTH                               0x1
#define _TXSTA1_SENDB1_MASK                                 0x8
#define _TXSTA1_SYNC1_POSN                                  0x4
#define _TXSTA1_SYNC1_POSITION                              0x4
#define _TXSTA1_SYNC1_SIZE                                  0x1
#define _TXSTA1_SYNC1_LENGTH                                0x1
#define _TXSTA1_SYNC1_MASK                                  0x10
#define _TXSTA1_TXEN1_POSN                                  0x5
#define _TXSTA1_TXEN1_POSITION                              0x5
#define _TXSTA1_TXEN1_SIZE                                  0x1
#define _TXSTA1_TXEN1_LENGTH                                0x1
#define _TXSTA1_TXEN1_MASK                                  0x20
#define _TXSTA1_TX91_POSN                                   0x6
#define _TXSTA1_TX91_POSITION                               0x6
#define _TXSTA1_TX91_SIZE                                   0x1
#define _TXSTA1_TX91_LENGTH                                 0x1
#define _TXSTA1_TX91_MASK                                   0x40
#define _TXSTA1_CSRC1_POSN                                  0x7
#define _TXSTA1_CSRC1_POSITION                              0x7
#define _TXSTA1_CSRC1_SIZE                                  0x1
#define _TXSTA1_CSRC1_LENGTH                                0x1
#define _TXSTA1_CSRC1_MASK                                  0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned TX9D                   :1;
        unsigned TRMT                   :1;
        unsigned BRGH                   :1;
        unsigned SENDB                  :1;
        unsigned SYNC                   :1;
        unsigned TXEN                   :1;
        unsigned TX9                    :1;
        unsigned CSRC                   :1;
    };
    struct {
        unsigned TXD8                   :1;
        unsigned                        :5;
        unsigned TX8_9                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned NOT_TX8                :1;
    };
    struct {
        unsigned                        :6;
        unsigned nTX8                   :1;
    };
    struct {
        unsigned TX9D1                  :1;
        unsigned TRMT1                  :1;
        unsigned BRGH1                  :1;
        unsigned SENDB1                 :1;
        unsigned SYNC1                  :1;
        unsigned TXEN1                  :1;
        unsigned TX91                   :1;
        unsigned CSRC1                  :1;
    };
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0xFAD;
// bitfield macros
#define _TXSTA_TX9D_POSN                                    0x0
#define _TXSTA_TX9D_POSITION                                0x0
#define _TXSTA_TX9D_SIZE                                    0x1
#define _TXSTA_TX9D_LENGTH                                  0x1
#define _TXSTA_TX9D_MASK                                    0x1
#define _TXSTA_TRMT_POSN                                    0x1
#define _TXSTA_TRMT_POSITION                                0x1
#define _TXSTA_TRMT_SIZE                                    0x1
#define _TXSTA_TRMT_LENGTH                                  0x1
#define _TXSTA_TRMT_MASK                                    0x2
#define _TXSTA_BRGH_POSN                                    0x2
#define _TXSTA_BRGH_POSITION                                0x2
#define _TXSTA_BRGH_SIZE                                    0x1
#define _TXSTA_BRGH_LENGTH                                  0x1
#define _TXSTA_BRGH_MASK                                    0x4
#define _TXSTA_SENDB_POSN                                   0x3
#define _TXSTA_SENDB_POSITION                               0x3
#define _TXSTA_SENDB_SIZE                                   0x1
#define _TXSTA_SENDB_LENGTH                                 0x1
#define _TXSTA_SENDB_MASK                                   0x8
#define _TXSTA_SYNC_POSN                                    0x4
#define _TXSTA_SYNC_POSITION                                0x4
#define _TXSTA_SYNC_SIZE                                    0x1
#define _TXSTA_SYNC_LENGTH                                  0x1
#define _TXSTA_SYNC_MASK                                    0x10
#define _TXSTA_TXEN_POSN                                    0x5
#define _TXSTA_TXEN_POSITION                                0x5
#define _TXSTA_TXEN_SIZE                                    0x1
#define _TXSTA_TXEN_LENGTH                                  0x1
#define _TXSTA_TXEN_MASK                                    0x20
#define _TXSTA_TX9_POSN                                     0x6
#define _TXSTA_TX9_POSITION                                 0x6
#define _TXSTA_TX9_SIZE                                     0x1
#define _TXSTA_TX9_LENGTH                                   0x1
#define _TXSTA_TX9_MASK                                     0x40
#define _TXSTA_CSRC_POSN                                    0x7
#define _TXSTA_CSRC_POSITION                                0x7
#define _TXSTA_CSRC_SIZE                                    0x1
#define _TXSTA_CSRC_LENGTH                                  0x1
#define _TXSTA_CSRC_MASK                                    0x80
#define _TXSTA_TXD8_POSN                                    0x0
#define _TXSTA_TXD8_POSITION                                0x0
#define _TXSTA_TXD8_SIZE                                    0x1
#define _TXSTA_TXD8_LENGTH                                  0x1
#define _TXSTA_TXD8_MASK                                    0x1
#define _TXSTA_TX8_9_POSN                                   0x6
#define _TXSTA_TX8_9_POSITION                               0x6
#define _TXSTA_TX8_9_SIZE                                   0x1
#define _TXSTA_TX8_9_LENGTH                                 0x1
#define _TXSTA_TX8_9_MASK                                   0x40
#define _TXSTA_NOT_TX8_POSN                                 0x6
#define _TXSTA_NOT_TX8_POSITION                             0x6
#define _TXSTA_NOT_TX8_SIZE                                 0x1
#define _TXSTA_NOT_TX8_LENGTH                               0x1
#define _TXSTA_NOT_TX8_MASK                                 0x40
#define _TXSTA_nTX8_POSN                                    0x6
#define _TXSTA_nTX8_POSITION                                0x6
#define _TXSTA_nTX8_SIZE                                    0x1
#define _TXSTA_nTX8_LENGTH                                  0x1
#define _TXSTA_nTX8_MASK                                    0x40
#define _TXSTA_TX9D1_POSN                                   0x0
#define _TXSTA_TX9D1_POSITION                               0x0
#define _TXSTA_TX9D1_SIZE                                   0x1
#define _TXSTA_TX9D1_LENGTH                                 0x1
#define _TXSTA_TX9D1_MASK                                   0x1
#define _TXSTA_TRMT1_POSN                                   0x1
#define _TXSTA_TRMT1_POSITION                               0x1
#define _TXSTA_TRMT1_SIZE                                   0x1
#define _TXSTA_TRMT1_LENGTH                                 0x1
#define _TXSTA_TRMT1_MASK                                   0x2
#define _TXSTA_BRGH1_POSN                                   0x2
#define _TXSTA_BRGH1_POSITION                               0x2
#define _TXSTA_BRGH1_SIZE                                   0x1
#define _TXSTA_BRGH1_LENGTH                                 0x1
#define _TXSTA_BRGH1_MASK                                   0x4
#define _TXSTA_SENDB1_POSN                                  0x3
#define _TXSTA_SENDB1_POSITION                              0x3
#define _TXSTA_SENDB1_SIZE                                  0x1
#define _TXSTA_SENDB1_LENGTH                                0x1
#define _TXSTA_SENDB1_MASK                                  0x8
#define _TXSTA_SYNC1_POSN                                   0x4
#define _TXSTA_SYNC1_POSITION                               0x4
#define _TXSTA_SYNC1_SIZE                                   0x1
#define _TXSTA_SYNC1_LENGTH                                 0x1
#define _TXSTA_SYNC1_MASK                                   0x10
#define _TXSTA_TXEN1_POSN                                   0x5
#define _TXSTA_TXEN1_POSITION                               0x5
#define _TXSTA_TXEN1_SIZE                                   0x1
#define _TXSTA_TXEN1_LENGTH                                 0x1
#define _TXSTA_TXEN1_MASK                                   0x20
#define _TXSTA_TX91_POSN                                    0x6
#define _TXSTA_TX91_POSITION                                0x6
#define _TXSTA_TX91_SIZE                                    0x1
#define _TXSTA_TX91_LENGTH                                  0x1
#define _TXSTA_TX91_MASK                                    0x40
#define _TXSTA_CSRC1_POSN                                   0x7
#define _TXSTA_CSRC1_POSITION                               0x7
#define _TXSTA_CSRC1_SIZE                                   0x1
#define _TXSTA_CSRC1_LENGTH                                 0x1
#define _TXSTA_CSRC1_MASK                                   0x80

// Register: TXREG1
extern volatile unsigned char           TXREG1              @ 0xFAE;
#ifndef _LIB_BUILD
asm("TXREG1 equ 0FAEh");
#endif
// aliases
extern volatile unsigned char           TXREG               @ 0xFAE;
#ifndef _LIB_BUILD
asm("TXREG equ 0FAEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TXREG1                 :8;
    };
} TXREG1bits_t;
extern volatile TXREG1bits_t TXREG1bits @ 0xFAE;
// bitfield macros
#define _TXREG1_TXREG1_POSN                                 0x0
#define _TXREG1_TXREG1_POSITION                             0x0
#define _TXREG1_TXREG1_SIZE                                 0x8
#define _TXREG1_TXREG1_LENGTH                               0x8
#define _TXREG1_TXREG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned TXREG1                 :8;
    };
} TXREGbits_t;
extern volatile TXREGbits_t TXREGbits @ 0xFAE;
// bitfield macros
#define _TXREG_TXREG1_POSN                                  0x0
#define _TXREG_TXREG1_POSITION                              0x0
#define _TXREG_TXREG1_SIZE                                  0x8
#define _TXREG_TXREG1_LENGTH                                0x8
#define _TXREG_TXREG1_MASK                                  0xFF

// Register: RCREG1
extern volatile unsigned char           RCREG1              @ 0xFAF;
#ifndef _LIB_BUILD
asm("RCREG1 equ 0FAFh");
#endif
// aliases
extern volatile unsigned char           RCREG               @ 0xFAF;
#ifndef _LIB_BUILD
asm("RCREG equ 0FAFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RCREG1                 :8;
    };
} RCREG1bits_t;
extern volatile RCREG1bits_t RCREG1bits @ 0xFAF;
// bitfield macros
#define _RCREG1_RCREG1_POSN                                 0x0
#define _RCREG1_RCREG1_POSITION                             0x0
#define _RCREG1_RCREG1_SIZE                                 0x8
#define _RCREG1_RCREG1_LENGTH                               0x8
#define _RCREG1_RCREG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned RCREG1                 :8;
    };
} RCREGbits_t;
extern volatile RCREGbits_t RCREGbits @ 0xFAF;
// bitfield macros
#define _RCREG_RCREG1_POSN                                  0x0
#define _RCREG_RCREG1_POSITION                              0x0
#define _RCREG_RCREG1_SIZE                                  0x8
#define _RCREG_RCREG1_LENGTH                                0x8
#define _RCREG_RCREG1_MASK                                  0xFF

// Register: SPBRG1
extern volatile unsigned char           SPBRG1              @ 0xFB0;
#ifndef _LIB_BUILD
asm("SPBRG1 equ 0FB0h");
#endif
// aliases
extern volatile unsigned char           SPBRG               @ 0xFB0;
#ifndef _LIB_BUILD
asm("SPBRG equ 0FB0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SPBRG1                 :8;
    };
} SPBRG1bits_t;
extern volatile SPBRG1bits_t SPBRG1bits @ 0xFB0;
// bitfield macros
#define _SPBRG1_SPBRG1_POSN                                 0x0
#define _SPBRG1_SPBRG1_POSITION                             0x0
#define _SPBRG1_SPBRG1_SIZE                                 0x8
#define _SPBRG1_SPBRG1_LENGTH                               0x8
#define _SPBRG1_SPBRG1_MASK                                 0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SPBRG1                 :8;
    };
} SPBRGbits_t;
extern volatile SPBRGbits_t SPBRGbits @ 0xFB0;
// bitfield macros
#define _SPBRG_SPBRG1_POSN                                  0x0
#define _SPBRG_SPBRG1_POSITION                              0x0
#define _SPBRG_SPBRG1_SIZE                                  0x8
#define _SPBRG_SPBRG1_LENGTH                                0x8
#define _SPBRG_SPBRG1_MASK                                  0xFF

// Register: CTMUICON
extern volatile unsigned char           CTMUICON            @ 0xFB1;
#ifndef _LIB_BUILD
asm("CTMUICON equ 0FB1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned IRNG                   :2;
        unsigned ITRIM                  :6;
    };
    struct {
        unsigned IRNG0                  :1;
        unsigned IRNG1                  :1;
        unsigned ITRIM0                 :1;
        unsigned ITRIM1                 :1;
        unsigned ITRIM2                 :1;
        unsigned ITRIM3                 :1;
        unsigned ITRIM4                 :1;
        unsigned ITRIM5                 :1;
    };
} CTMUICONbits_t;
extern volatile CTMUICONbits_t CTMUICONbits @ 0xFB1;
// bitfield macros
#define _CTMUICON_IRNG_POSN                                 0x0
#define _CTMUICON_IRNG_POSITION                             0x0
#define _CTMUICON_IRNG_SIZE                                 0x2
#define _CTMUICON_IRNG_LENGTH                               0x2
#define _CTMUICON_IRNG_MASK                                 0x3
#define _CTMUICON_ITRIM_POSN                                0x2
#define _CTMUICON_ITRIM_POSITION                            0x2
#define _CTMUICON_ITRIM_SIZE                                0x6
#define _CTMUICON_ITRIM_LENGTH                              0x6
#define _CTMUICON_ITRIM_MASK                                0xFC
#define _CTMUICON_IRNG0_POSN                                0x0
#define _CTMUICON_IRNG0_POSITION                            0x0
#define _CTMUICON_IRNG0_SIZE                                0x1
#define _CTMUICON_IRNG0_LENGTH                              0x1
#define _CTMUICON_IRNG0_MASK                                0x1
#define _CTMUICON_IRNG1_POSN                                0x1
#define _CTMUICON_IRNG1_POSITION                            0x1
#define _CTMUICON_IRNG1_SIZE                                0x1
#define _CTMUICON_IRNG1_LENGTH                              0x1
#define _CTMUICON_IRNG1_MASK                                0x2
#define _CTMUICON_ITRIM0_POSN                               0x2
#define _CTMUICON_ITRIM0_POSITION                           0x2
#define _CTMUICON_ITRIM0_SIZE                               0x1
#define _CTMUICON_ITRIM0_LENGTH                             0x1
#define _CTMUICON_ITRIM0_MASK                               0x4
#define _CTMUICON_ITRIM1_POSN                               0x3
#define _CTMUICON_ITRIM1_POSITION                           0x3
#define _CTMUICON_ITRIM1_SIZE                               0x1
#define _CTMUICON_ITRIM1_LENGTH                             0x1
#define _CTMUICON_ITRIM1_MASK                               0x8
#define _CTMUICON_ITRIM2_POSN                               0x4
#define _CTMUICON_ITRIM2_POSITION                           0x4
#define _CTMUICON_ITRIM2_SIZE                               0x1
#define _CTMUICON_ITRIM2_LENGTH                             0x1
#define _CTMUICON_ITRIM2_MASK                               0x10
#define _CTMUICON_ITRIM3_POSN                               0x5
#define _CTMUICON_ITRIM3_POSITION                           0x5
#define _CTMUICON_ITRIM3_SIZE                               0x1
#define _CTMUICON_ITRIM3_LENGTH                             0x1
#define _CTMUICON_ITRIM3_MASK                               0x20
#define _CTMUICON_ITRIM4_POSN                               0x6
#define _CTMUICON_ITRIM4_POSITION                           0x6
#define _CTMUICON_ITRIM4_SIZE                               0x1
#define _CTMUICON_ITRIM4_LENGTH                             0x1
#define _CTMUICON_ITRIM4_MASK                               0x40
#define _CTMUICON_ITRIM5_POSN                               0x7
#define _CTMUICON_ITRIM5_POSITION                           0x7
#define _CTMUICON_ITRIM5_SIZE                               0x1
#define _CTMUICON_ITRIM5_LENGTH                             0x1
#define _CTMUICON_ITRIM5_MASK                               0x80

// Register: CTMUCONL
extern volatile unsigned char           CTMUCONL            @ 0xFB2;
#ifndef _LIB_BUILD
asm("CTMUCONL equ 0FB2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned EDG1STAT               :1;
        unsigned EDG2STAT               :1;
        unsigned EDG1SEL0               :1;
        unsigned EDG1SEL1               :1;
        unsigned EDG1POL                :1;
        unsigned EDG2SEL0               :1;
        unsigned EDG2SEL1               :1;
        unsigned EDG2POL                :1;
    };
} CTMUCONLbits_t;
extern volatile CTMUCONLbits_t CTMUCONLbits @ 0xFB2;
// bitfield macros
#define _CTMUCONL_EDG1STAT_POSN                             0x0
#define _CTMUCONL_EDG1STAT_POSITION                         0x0
#define _CTMUCONL_EDG1STAT_SIZE                             0x1
#define _CTMUCONL_EDG1STAT_LENGTH                           0x1
#define _CTMUCONL_EDG1STAT_MASK                             0x1
#define _CTMUCONL_EDG2STAT_POSN                             0x1
#define _CTMUCONL_EDG2STAT_POSITION                         0x1
#define _CTMUCONL_EDG2STAT_SIZE                             0x1
#define _CTMUCONL_EDG2STAT_LENGTH                           0x1
#define _CTMUCONL_EDG2STAT_MASK                             0x2
#define _CTMUCONL_EDG1SEL0_POSN                             0x2
#define _CTMUCONL_EDG1SEL0_POSITION                         0x2
#define _CTMUCONL_EDG1SEL0_SIZE                             0x1
#define _CTMUCONL_EDG1SEL0_LENGTH                           0x1
#define _CTMUCONL_EDG1SEL0_MASK                             0x4
#define _CTMUCONL_EDG1SEL1_POSN                             0x3
#define _CTMUCONL_EDG1SEL1_POSITION                         0x3
#define _CTMUCONL_EDG1SEL1_SIZE                             0x1
#define _CTMUCONL_EDG1SEL1_LENGTH                           0x1
#define _CTMUCONL_EDG1SEL1_MASK                             0x8
#define _CTMUCONL_EDG1POL_POSN                              0x4
#define _CTMUCONL_EDG1POL_POSITION                          0x4
#define _CTMUCONL_EDG1POL_SIZE                              0x1
#define _CTMUCONL_EDG1POL_LENGTH                            0x1
#define _CTMUCONL_EDG1POL_MASK                              0x10
#define _CTMUCONL_EDG2SEL0_POSN                             0x5
#define _CTMUCONL_EDG2SEL0_POSITION                         0x5
#define _CTMUCONL_EDG2SEL0_SIZE                             0x1
#define _CTMUCONL_EDG2SEL0_LENGTH                           0x1
#define _CTMUCONL_EDG2SEL0_MASK                             0x20
#define _CTMUCONL_EDG2SEL1_POSN                             0x6
#define _CTMUCONL_EDG2SEL1_POSITION                         0x6
#define _CTMUCONL_EDG2SEL1_SIZE                             0x1
#define _CTMUCONL_EDG2SEL1_LENGTH                           0x1
#define _CTMUCONL_EDG2SEL1_MASK                             0x40
#define _CTMUCONL_EDG2POL_POSN                              0x7
#define _CTMUCONL_EDG2POL_POSITION                          0x7
#define _CTMUCONL_EDG2POL_SIZE                              0x1
#define _CTMUCONL_EDG2POL_LENGTH                            0x1
#define _CTMUCONL_EDG2POL_MASK                              0x80

// Register: CTMUCONH
extern volatile unsigned char           CTMUCONH            @ 0xFB3;
#ifndef _LIB_BUILD
asm("CTMUCONH equ 0FB3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CTTRIG                 :1;
        unsigned IDISSEN                :1;
        unsigned EDGSEQEN               :1;
        unsigned EDGEN                  :1;
        unsigned TGEN                   :1;
        unsigned CTMUSIDL               :1;
        unsigned                        :1;
        unsigned CTMUEN                 :1;
    };
} CTMUCONHbits_t;
extern volatile CTMUCONHbits_t CTMUCONHbits @ 0xFB3;
// bitfield macros
#define _CTMUCONH_CTTRIG_POSN                               0x0
#define _CTMUCONH_CTTRIG_POSITION                           0x0
#define _CTMUCONH_CTTRIG_SIZE                               0x1
#define _CTMUCONH_CTTRIG_LENGTH                             0x1
#define _CTMUCONH_CTTRIG_MASK                               0x1
#define _CTMUCONH_IDISSEN_POSN                              0x1
#define _CTMUCONH_IDISSEN_POSITION                          0x1
#define _CTMUCONH_IDISSEN_SIZE                              0x1
#define _CTMUCONH_IDISSEN_LENGTH                            0x1
#define _CTMUCONH_IDISSEN_MASK                              0x2
#define _CTMUCONH_EDGSEQEN_POSN                             0x2
#define _CTMUCONH_EDGSEQEN_POSITION                         0x2
#define _CTMUCONH_EDGSEQEN_SIZE                             0x1
#define _CTMUCONH_EDGSEQEN_LENGTH                           0x1
#define _CTMUCONH_EDGSEQEN_MASK                             0x4
#define _CTMUCONH_EDGEN_POSN                                0x3
#define _CTMUCONH_EDGEN_POSITION                            0x3
#define _CTMUCONH_EDGEN_SIZE                                0x1
#define _CTMUCONH_EDGEN_LENGTH                              0x1
#define _CTMUCONH_EDGEN_MASK                                0x8
#define _CTMUCONH_TGEN_POSN                                 0x4
#define _CTMUCONH_TGEN_POSITION                             0x4
#define _CTMUCONH_TGEN_SIZE                                 0x1
#define _CTMUCONH_TGEN_LENGTH                               0x1
#define _CTMUCONH_TGEN_MASK                                 0x10
#define _CTMUCONH_CTMUSIDL_POSN                             0x5
#define _CTMUCONH_CTMUSIDL_POSITION                         0x5
#define _CTMUCONH_CTMUSIDL_SIZE                             0x1
#define _CTMUCONH_CTMUSIDL_LENGTH                           0x1
#define _CTMUCONH_CTMUSIDL_MASK                             0x20
#define _CTMUCONH_CTMUEN_POSN                               0x7
#define _CTMUCONH_CTMUEN_POSITION                           0x7
#define _CTMUCONH_CTMUEN_SIZE                               0x1
#define _CTMUCONH_CTMUEN_LENGTH                             0x1
#define _CTMUCONH_CTMUEN_MASK                               0x80

// Register: CCP2CON
extern volatile unsigned char           CCP2CON             @ 0xFB4;
#ifndef _LIB_BUILD
asm("CCP2CON equ 0FB4h");
#endif
// aliases
extern volatile unsigned char           ECCP2CON            @ 0xFB4;
#ifndef _LIB_BUILD
asm("ECCP2CON equ 0FB4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP2M                  :4;
        unsigned DC2B                   :2;
        unsigned P2M                    :2;
    };
    struct {
        unsigned CCP2M0                 :1;
        unsigned CCP2M1                 :1;
        unsigned CCP2M2                 :1;
        unsigned CCP2M3                 :1;
        unsigned DC2B0                  :1;
        unsigned DC2B1                  :1;
        unsigned P2M0                   :1;
        unsigned P2M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP2Y                  :1;
        unsigned CCP2X                  :1;
    };
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits @ 0xFB4;
// bitfield macros
#define _CCP2CON_CCP2M_POSN                                 0x0
#define _CCP2CON_CCP2M_POSITION                             0x0
#define _CCP2CON_CCP2M_SIZE                                 0x4
#define _CCP2CON_CCP2M_LENGTH                               0x4
#define _CCP2CON_CCP2M_MASK                                 0xF
#define _CCP2CON_DC2B_POSN                                  0x4
#define _CCP2CON_DC2B_POSITION                              0x4
#define _CCP2CON_DC2B_SIZE                                  0x2
#define _CCP2CON_DC2B_LENGTH                                0x2
#define _CCP2CON_DC2B_MASK                                  0x30
#define _CCP2CON_P2M_POSN                                   0x6
#define _CCP2CON_P2M_POSITION                               0x6
#define _CCP2CON_P2M_SIZE                                   0x2
#define _CCP2CON_P2M_LENGTH                                 0x2
#define _CCP2CON_P2M_MASK                                   0xC0
#define _CCP2CON_CCP2M0_POSN                                0x0
#define _CCP2CON_CCP2M0_POSITION                            0x0
#define _CCP2CON_CCP2M0_SIZE                                0x1
#define _CCP2CON_CCP2M0_LENGTH                              0x1
#define _CCP2CON_CCP2M0_MASK                                0x1
#define _CCP2CON_CCP2M1_POSN                                0x1
#define _CCP2CON_CCP2M1_POSITION                            0x1
#define _CCP2CON_CCP2M1_SIZE                                0x1
#define _CCP2CON_CCP2M1_LENGTH                              0x1
#define _CCP2CON_CCP2M1_MASK                                0x2
#define _CCP2CON_CCP2M2_POSN                                0x2
#define _CCP2CON_CCP2M2_POSITION                            0x2
#define _CCP2CON_CCP2M2_SIZE                                0x1
#define _CCP2CON_CCP2M2_LENGTH                              0x1
#define _CCP2CON_CCP2M2_MASK                                0x4
#define _CCP2CON_CCP2M3_POSN                                0x3
#define _CCP2CON_CCP2M3_POSITION                            0x3
#define _CCP2CON_CCP2M3_SIZE                                0x1
#define _CCP2CON_CCP2M3_LENGTH                              0x1
#define _CCP2CON_CCP2M3_MASK                                0x8
#define _CCP2CON_DC2B0_POSN                                 0x4
#define _CCP2CON_DC2B0_POSITION                             0x4
#define _CCP2CON_DC2B0_SIZE                                 0x1
#define _CCP2CON_DC2B0_LENGTH                               0x1
#define _CCP2CON_DC2B0_MASK                                 0x10
#define _CCP2CON_DC2B1_POSN                                 0x5
#define _CCP2CON_DC2B1_POSITION                             0x5
#define _CCP2CON_DC2B1_SIZE                                 0x1
#define _CCP2CON_DC2B1_LENGTH                               0x1
#define _CCP2CON_DC2B1_MASK                                 0x20
#define _CCP2CON_P2M0_POSN                                  0x6
#define _CCP2CON_P2M0_POSITION                              0x6
#define _CCP2CON_P2M0_SIZE                                  0x1
#define _CCP2CON_P2M0_LENGTH                                0x1
#define _CCP2CON_P2M0_MASK                                  0x40
#define _CCP2CON_P2M1_POSN                                  0x7
#define _CCP2CON_P2M1_POSITION                              0x7
#define _CCP2CON_P2M1_SIZE                                  0x1
#define _CCP2CON_P2M1_LENGTH                                0x1
#define _CCP2CON_P2M1_MASK                                  0x80
#define _CCP2CON_CCP2Y_POSN                                 0x4
#define _CCP2CON_CCP2Y_POSITION                             0x4
#define _CCP2CON_CCP2Y_SIZE                                 0x1
#define _CCP2CON_CCP2Y_LENGTH                               0x1
#define _CCP2CON_CCP2Y_MASK                                 0x10
#define _CCP2CON_CCP2X_POSN                                 0x5
#define _CCP2CON_CCP2X_POSITION                             0x5
#define _CCP2CON_CCP2X_SIZE                                 0x1
#define _CCP2CON_CCP2X_LENGTH                               0x1
#define _CCP2CON_CCP2X_MASK                                 0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCP2M                  :4;
        unsigned DC2B                   :2;
        unsigned P2M                    :2;
    };
    struct {
        unsigned CCP2M0                 :1;
        unsigned CCP2M1                 :1;
        unsigned CCP2M2                 :1;
        unsigned CCP2M3                 :1;
        unsigned DC2B0                  :1;
        unsigned DC2B1                  :1;
        unsigned P2M0                   :1;
        unsigned P2M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP2Y                  :1;
        unsigned CCP2X                  :1;
    };
} ECCP2CONbits_t;
extern volatile ECCP2CONbits_t ECCP2CONbits @ 0xFB4;
// bitfield macros
#define _ECCP2CON_CCP2M_POSN                                0x0
#define _ECCP2CON_CCP2M_POSITION                            0x0
#define _ECCP2CON_CCP2M_SIZE                                0x4
#define _ECCP2CON_CCP2M_LENGTH                              0x4
#define _ECCP2CON_CCP2M_MASK                                0xF
#define _ECCP2CON_DC2B_POSN                                 0x4
#define _ECCP2CON_DC2B_POSITION                             0x4
#define _ECCP2CON_DC2B_SIZE                                 0x2
#define _ECCP2CON_DC2B_LENGTH                               0x2
#define _ECCP2CON_DC2B_MASK                                 0x30
#define _ECCP2CON_P2M_POSN                                  0x6
#define _ECCP2CON_P2M_POSITION                              0x6
#define _ECCP2CON_P2M_SIZE                                  0x2
#define _ECCP2CON_P2M_LENGTH                                0x2
#define _ECCP2CON_P2M_MASK                                  0xC0
#define _ECCP2CON_CCP2M0_POSN                               0x0
#define _ECCP2CON_CCP2M0_POSITION                           0x0
#define _ECCP2CON_CCP2M0_SIZE                               0x1
#define _ECCP2CON_CCP2M0_LENGTH                             0x1
#define _ECCP2CON_CCP2M0_MASK                               0x1
#define _ECCP2CON_CCP2M1_POSN                               0x1
#define _ECCP2CON_CCP2M1_POSITION                           0x1
#define _ECCP2CON_CCP2M1_SIZE                               0x1
#define _ECCP2CON_CCP2M1_LENGTH                             0x1
#define _ECCP2CON_CCP2M1_MASK                               0x2
#define _ECCP2CON_CCP2M2_POSN                               0x2
#define _ECCP2CON_CCP2M2_POSITION                           0x2
#define _ECCP2CON_CCP2M2_SIZE                               0x1
#define _ECCP2CON_CCP2M2_LENGTH                             0x1
#define _ECCP2CON_CCP2M2_MASK                               0x4
#define _ECCP2CON_CCP2M3_POSN                               0x3
#define _ECCP2CON_CCP2M3_POSITION                           0x3
#define _ECCP2CON_CCP2M3_SIZE                               0x1
#define _ECCP2CON_CCP2M3_LENGTH                             0x1
#define _ECCP2CON_CCP2M3_MASK                               0x8
#define _ECCP2CON_DC2B0_POSN                                0x4
#define _ECCP2CON_DC2B0_POSITION                            0x4
#define _ECCP2CON_DC2B0_SIZE                                0x1
#define _ECCP2CON_DC2B0_LENGTH                              0x1
#define _ECCP2CON_DC2B0_MASK                                0x10
#define _ECCP2CON_DC2B1_POSN                                0x5
#define _ECCP2CON_DC2B1_POSITION                            0x5
#define _ECCP2CON_DC2B1_SIZE                                0x1
#define _ECCP2CON_DC2B1_LENGTH                              0x1
#define _ECCP2CON_DC2B1_MASK                                0x20
#define _ECCP2CON_P2M0_POSN                                 0x6
#define _ECCP2CON_P2M0_POSITION                             0x6
#define _ECCP2CON_P2M0_SIZE                                 0x1
#define _ECCP2CON_P2M0_LENGTH                               0x1
#define _ECCP2CON_P2M0_MASK                                 0x40
#define _ECCP2CON_P2M1_POSN                                 0x7
#define _ECCP2CON_P2M1_POSITION                             0x7
#define _ECCP2CON_P2M1_SIZE                                 0x1
#define _ECCP2CON_P2M1_LENGTH                               0x1
#define _ECCP2CON_P2M1_MASK                                 0x80
#define _ECCP2CON_CCP2Y_POSN                                0x4
#define _ECCP2CON_CCP2Y_POSITION                            0x4
#define _ECCP2CON_CCP2Y_SIZE                                0x1
#define _ECCP2CON_CCP2Y_LENGTH                              0x1
#define _ECCP2CON_CCP2Y_MASK                                0x10
#define _ECCP2CON_CCP2X_POSN                                0x5
#define _ECCP2CON_CCP2X_POSITION                            0x5
#define _ECCP2CON_CCP2X_SIZE                                0x1
#define _ECCP2CON_CCP2X_LENGTH                              0x1
#define _ECCP2CON_CCP2X_MASK                                0x20

// Register: CCPR2
extern volatile unsigned short          CCPR2               @ 0xFB5;
#ifndef _LIB_BUILD
asm("CCPR2 equ 0FB5h");
#endif

// Register: CCPR2L
extern volatile unsigned char           CCPR2L              @ 0xFB5;
#ifndef _LIB_BUILD
asm("CCPR2L equ 0FB5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2L                 :8;
    };
} CCPR2Lbits_t;
extern volatile CCPR2Lbits_t CCPR2Lbits @ 0xFB5;
// bitfield macros
#define _CCPR2L_CCPR2L_POSN                                 0x0
#define _CCPR2L_CCPR2L_POSITION                             0x0
#define _CCPR2L_CCPR2L_SIZE                                 0x8
#define _CCPR2L_CCPR2L_LENGTH                               0x8
#define _CCPR2L_CCPR2L_MASK                                 0xFF

// Register: CCPR2H
extern volatile unsigned char           CCPR2H              @ 0xFB6;
#ifndef _LIB_BUILD
asm("CCPR2H equ 0FB6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR2H                 :8;
    };
} CCPR2Hbits_t;
extern volatile CCPR2Hbits_t CCPR2Hbits @ 0xFB6;
// bitfield macros
#define _CCPR2H_CCPR2H_POSN                                 0x0
#define _CCPR2H_CCPR2H_POSITION                             0x0
#define _CCPR2H_CCPR2H_SIZE                                 0x8
#define _CCPR2H_CCPR2H_LENGTH                               0x8
#define _CCPR2H_CCPR2H_MASK                                 0xFF

// Register: ECCP2DEL
extern volatile unsigned char           ECCP2DEL            @ 0xFB7;
#ifndef _LIB_BUILD
asm("ECCP2DEL equ 0FB7h");
#endif
// aliases
extern volatile unsigned char           PWM2CON             @ 0xFB7;
#ifndef _LIB_BUILD
asm("PWM2CON equ 0FB7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P2DC                   :7;
        unsigned P2RSEN                 :1;
    };
    struct {
        unsigned P2DC0                  :1;
        unsigned P2DC1                  :1;
        unsigned P2DC2                  :1;
        unsigned P2DC3                  :1;
        unsigned P2DC4                  :1;
        unsigned P2DC5                  :1;
        unsigned P2DC6                  :1;
    };
} ECCP2DELbits_t;
extern volatile ECCP2DELbits_t ECCP2DELbits @ 0xFB7;
// bitfield macros
#define _ECCP2DEL_P2DC_POSN                                 0x0
#define _ECCP2DEL_P2DC_POSITION                             0x0
#define _ECCP2DEL_P2DC_SIZE                                 0x7
#define _ECCP2DEL_P2DC_LENGTH                               0x7
#define _ECCP2DEL_P2DC_MASK                                 0x7F
#define _ECCP2DEL_P2RSEN_POSN                               0x7
#define _ECCP2DEL_P2RSEN_POSITION                           0x7
#define _ECCP2DEL_P2RSEN_SIZE                               0x1
#define _ECCP2DEL_P2RSEN_LENGTH                             0x1
#define _ECCP2DEL_P2RSEN_MASK                               0x80
#define _ECCP2DEL_P2DC0_POSN                                0x0
#define _ECCP2DEL_P2DC0_POSITION                            0x0
#define _ECCP2DEL_P2DC0_SIZE                                0x1
#define _ECCP2DEL_P2DC0_LENGTH                              0x1
#define _ECCP2DEL_P2DC0_MASK                                0x1
#define _ECCP2DEL_P2DC1_POSN                                0x1
#define _ECCP2DEL_P2DC1_POSITION                            0x1
#define _ECCP2DEL_P2DC1_SIZE                                0x1
#define _ECCP2DEL_P2DC1_LENGTH                              0x1
#define _ECCP2DEL_P2DC1_MASK                                0x2
#define _ECCP2DEL_P2DC2_POSN                                0x2
#define _ECCP2DEL_P2DC2_POSITION                            0x2
#define _ECCP2DEL_P2DC2_SIZE                                0x1
#define _ECCP2DEL_P2DC2_LENGTH                              0x1
#define _ECCP2DEL_P2DC2_MASK                                0x4
#define _ECCP2DEL_P2DC3_POSN                                0x3
#define _ECCP2DEL_P2DC3_POSITION                            0x3
#define _ECCP2DEL_P2DC3_SIZE                                0x1
#define _ECCP2DEL_P2DC3_LENGTH                              0x1
#define _ECCP2DEL_P2DC3_MASK                                0x8
#define _ECCP2DEL_P2DC4_POSN                                0x4
#define _ECCP2DEL_P2DC4_POSITION                            0x4
#define _ECCP2DEL_P2DC4_SIZE                                0x1
#define _ECCP2DEL_P2DC4_LENGTH                              0x1
#define _ECCP2DEL_P2DC4_MASK                                0x10
#define _ECCP2DEL_P2DC5_POSN                                0x5
#define _ECCP2DEL_P2DC5_POSITION                            0x5
#define _ECCP2DEL_P2DC5_SIZE                                0x1
#define _ECCP2DEL_P2DC5_LENGTH                              0x1
#define _ECCP2DEL_P2DC5_MASK                                0x20
#define _ECCP2DEL_P2DC6_POSN                                0x6
#define _ECCP2DEL_P2DC6_POSITION                            0x6
#define _ECCP2DEL_P2DC6_SIZE                                0x1
#define _ECCP2DEL_P2DC6_LENGTH                              0x1
#define _ECCP2DEL_P2DC6_MASK                                0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned P2DC                   :7;
        unsigned P2RSEN                 :1;
    };
    struct {
        unsigned P2DC0                  :1;
        unsigned P2DC1                  :1;
        unsigned P2DC2                  :1;
        unsigned P2DC3                  :1;
        unsigned P2DC4                  :1;
        unsigned P2DC5                  :1;
        unsigned P2DC6                  :1;
    };
} PWM2CONbits_t;
extern volatile PWM2CONbits_t PWM2CONbits @ 0xFB7;
// bitfield macros
#define _PWM2CON_P2DC_POSN                                  0x0
#define _PWM2CON_P2DC_POSITION                              0x0
#define _PWM2CON_P2DC_SIZE                                  0x7
#define _PWM2CON_P2DC_LENGTH                                0x7
#define _PWM2CON_P2DC_MASK                                  0x7F
#define _PWM2CON_P2RSEN_POSN                                0x7
#define _PWM2CON_P2RSEN_POSITION                            0x7
#define _PWM2CON_P2RSEN_SIZE                                0x1
#define _PWM2CON_P2RSEN_LENGTH                              0x1
#define _PWM2CON_P2RSEN_MASK                                0x80
#define _PWM2CON_P2DC0_POSN                                 0x0
#define _PWM2CON_P2DC0_POSITION                             0x0
#define _PWM2CON_P2DC0_SIZE                                 0x1
#define _PWM2CON_P2DC0_LENGTH                               0x1
#define _PWM2CON_P2DC0_MASK                                 0x1
#define _PWM2CON_P2DC1_POSN                                 0x1
#define _PWM2CON_P2DC1_POSITION                             0x1
#define _PWM2CON_P2DC1_SIZE                                 0x1
#define _PWM2CON_P2DC1_LENGTH                               0x1
#define _PWM2CON_P2DC1_MASK                                 0x2
#define _PWM2CON_P2DC2_POSN                                 0x2
#define _PWM2CON_P2DC2_POSITION                             0x2
#define _PWM2CON_P2DC2_SIZE                                 0x1
#define _PWM2CON_P2DC2_LENGTH                               0x1
#define _PWM2CON_P2DC2_MASK                                 0x4
#define _PWM2CON_P2DC3_POSN                                 0x3
#define _PWM2CON_P2DC3_POSITION                             0x3
#define _PWM2CON_P2DC3_SIZE                                 0x1
#define _PWM2CON_P2DC3_LENGTH                               0x1
#define _PWM2CON_P2DC3_MASK                                 0x8
#define _PWM2CON_P2DC4_POSN                                 0x4
#define _PWM2CON_P2DC4_POSITION                             0x4
#define _PWM2CON_P2DC4_SIZE                                 0x1
#define _PWM2CON_P2DC4_LENGTH                               0x1
#define _PWM2CON_P2DC4_MASK                                 0x10
#define _PWM2CON_P2DC5_POSN                                 0x5
#define _PWM2CON_P2DC5_POSITION                             0x5
#define _PWM2CON_P2DC5_SIZE                                 0x1
#define _PWM2CON_P2DC5_LENGTH                               0x1
#define _PWM2CON_P2DC5_MASK                                 0x20
#define _PWM2CON_P2DC6_POSN                                 0x6
#define _PWM2CON_P2DC6_POSITION                             0x6
#define _PWM2CON_P2DC6_SIZE                                 0x1
#define _PWM2CON_P2DC6_LENGTH                               0x1
#define _PWM2CON_P2DC6_MASK                                 0x40

// Register: ECCP2AS
extern volatile unsigned char           ECCP2AS             @ 0xFB8;
#ifndef _LIB_BUILD
asm("ECCP2AS equ 0FB8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS2BD                 :2;
        unsigned PSS2AC                 :2;
        unsigned ECCP2AS                :3;
        unsigned ECCP2ASE               :1;
    };
    struct {
        unsigned PSS2BD0                :1;
        unsigned PSS2BD1                :1;
        unsigned PSS2AC0                :1;
        unsigned PSS2AC1                :1;
        unsigned ECCP2AS0               :1;
        unsigned ECCP2AS1               :1;
        unsigned ECCP2AS2               :1;
    };
} ECCP2ASbits_t;
extern volatile ECCP2ASbits_t ECCP2ASbits @ 0xFB8;
// bitfield macros
#define _ECCP2AS_PSS2BD_POSN                                0x0
#define _ECCP2AS_PSS2BD_POSITION                            0x0
#define _ECCP2AS_PSS2BD_SIZE                                0x2
#define _ECCP2AS_PSS2BD_LENGTH                              0x2
#define _ECCP2AS_PSS2BD_MASK                                0x3
#define _ECCP2AS_PSS2AC_POSN                                0x2
#define _ECCP2AS_PSS2AC_POSITION                            0x2
#define _ECCP2AS_PSS2AC_SIZE                                0x2
#define _ECCP2AS_PSS2AC_LENGTH                              0x2
#define _ECCP2AS_PSS2AC_MASK                                0xC
#define _ECCP2AS_ECCP2AS_POSN                               0x4
#define _ECCP2AS_ECCP2AS_POSITION                           0x4
#define _ECCP2AS_ECCP2AS_SIZE                               0x3
#define _ECCP2AS_ECCP2AS_LENGTH                             0x3
#define _ECCP2AS_ECCP2AS_MASK                               0x70
#define _ECCP2AS_ECCP2ASE_POSN                              0x7
#define _ECCP2AS_ECCP2ASE_POSITION                          0x7
#define _ECCP2AS_ECCP2ASE_SIZE                              0x1
#define _ECCP2AS_ECCP2ASE_LENGTH                            0x1
#define _ECCP2AS_ECCP2ASE_MASK                              0x80
#define _ECCP2AS_PSS2BD0_POSN                               0x0
#define _ECCP2AS_PSS2BD0_POSITION                           0x0
#define _ECCP2AS_PSS2BD0_SIZE                               0x1
#define _ECCP2AS_PSS2BD0_LENGTH                             0x1
#define _ECCP2AS_PSS2BD0_MASK                               0x1
#define _ECCP2AS_PSS2BD1_POSN                               0x1
#define _ECCP2AS_PSS2BD1_POSITION                           0x1
#define _ECCP2AS_PSS2BD1_SIZE                               0x1
#define _ECCP2AS_PSS2BD1_LENGTH                             0x1
#define _ECCP2AS_PSS2BD1_MASK                               0x2
#define _ECCP2AS_PSS2AC0_POSN                               0x2
#define _ECCP2AS_PSS2AC0_POSITION                           0x2
#define _ECCP2AS_PSS2AC0_SIZE                               0x1
#define _ECCP2AS_PSS2AC0_LENGTH                             0x1
#define _ECCP2AS_PSS2AC0_MASK                               0x4
#define _ECCP2AS_PSS2AC1_POSN                               0x3
#define _ECCP2AS_PSS2AC1_POSITION                           0x3
#define _ECCP2AS_PSS2AC1_SIZE                               0x1
#define _ECCP2AS_PSS2AC1_LENGTH                             0x1
#define _ECCP2AS_PSS2AC1_MASK                               0x8
#define _ECCP2AS_ECCP2AS0_POSN                              0x4
#define _ECCP2AS_ECCP2AS0_POSITION                          0x4
#define _ECCP2AS_ECCP2AS0_SIZE                              0x1
#define _ECCP2AS_ECCP2AS0_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS0_MASK                              0x10
#define _ECCP2AS_ECCP2AS1_POSN                              0x5
#define _ECCP2AS_ECCP2AS1_POSITION                          0x5
#define _ECCP2AS_ECCP2AS1_SIZE                              0x1
#define _ECCP2AS_ECCP2AS1_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS1_MASK                              0x20
#define _ECCP2AS_ECCP2AS2_POSN                              0x6
#define _ECCP2AS_ECCP2AS2_POSITION                          0x6
#define _ECCP2AS_ECCP2AS2_SIZE                              0x1
#define _ECCP2AS_ECCP2AS2_LENGTH                            0x1
#define _ECCP2AS_ECCP2AS2_MASK                              0x40

// Register: PSTR2CON
extern volatile unsigned char           PSTR2CON            @ 0xFB9;
#ifndef _LIB_BUILD
asm("PSTR2CON equ 0FB9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
    struct {
        unsigned P2DC0                  :1;
        unsigned P2DC1                  :1;
        unsigned P2DC2                  :1;
        unsigned P2DC3                  :1;
        unsigned P2DC4                  :1;
        unsigned P2DC5                  :1;
        unsigned P2DC6                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned CMPL02                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned CMPL12                 :1;
    };
    struct {
        unsigned P2DC02                 :1;
    };
    struct {
        unsigned P2DC0CON               :1;
    };
    struct {
        unsigned                        :1;
        unsigned P2DC12                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned P2DC1CON               :1;
    };
    struct {
        unsigned                        :2;
        unsigned P2DC22                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned P2DC2CON               :1;
    };
    struct {
        unsigned                        :3;
        unsigned P2DC32                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned P2DC3CON               :1;
    };
    struct {
        unsigned                        :4;
        unsigned P2DC42                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned P2DC4CON               :1;
    };
    struct {
        unsigned                        :5;
        unsigned P2DC52                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned P2DC5CON               :1;
    };
    struct {
        unsigned                        :6;
        unsigned P2DC62                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned P2DC6CON               :1;
    };
    struct {
        unsigned STRA2                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned STRB2                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned STRC2                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned STRD2                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned STRSYNC2               :1;
    };
} PSTR2CONbits_t;
extern volatile PSTR2CONbits_t PSTR2CONbits @ 0xFB9;
// bitfield macros
#define _PSTR2CON_STRA_POSN                                 0x0
#define _PSTR2CON_STRA_POSITION                             0x0
#define _PSTR2CON_STRA_SIZE                                 0x1
#define _PSTR2CON_STRA_LENGTH                               0x1
#define _PSTR2CON_STRA_MASK                                 0x1
#define _PSTR2CON_STRB_POSN                                 0x1
#define _PSTR2CON_STRB_POSITION                             0x1
#define _PSTR2CON_STRB_SIZE                                 0x1
#define _PSTR2CON_STRB_LENGTH                               0x1
#define _PSTR2CON_STRB_MASK                                 0x2
#define _PSTR2CON_STRC_POSN                                 0x2
#define _PSTR2CON_STRC_POSITION                             0x2
#define _PSTR2CON_STRC_SIZE                                 0x1
#define _PSTR2CON_STRC_LENGTH                               0x1
#define _PSTR2CON_STRC_MASK                                 0x4
#define _PSTR2CON_STRD_POSN                                 0x3
#define _PSTR2CON_STRD_POSITION                             0x3
#define _PSTR2CON_STRD_SIZE                                 0x1
#define _PSTR2CON_STRD_LENGTH                               0x1
#define _PSTR2CON_STRD_MASK                                 0x8
#define _PSTR2CON_STRSYNC_POSN                              0x4
#define _PSTR2CON_STRSYNC_POSITION                          0x4
#define _PSTR2CON_STRSYNC_SIZE                              0x1
#define _PSTR2CON_STRSYNC_LENGTH                            0x1
#define _PSTR2CON_STRSYNC_MASK                              0x10
#define _PSTR2CON_CMPL0_POSN                                0x6
#define _PSTR2CON_CMPL0_POSITION                            0x6
#define _PSTR2CON_CMPL0_SIZE                                0x1
#define _PSTR2CON_CMPL0_LENGTH                              0x1
#define _PSTR2CON_CMPL0_MASK                                0x40
#define _PSTR2CON_CMPL1_POSN                                0x7
#define _PSTR2CON_CMPL1_POSITION                            0x7
#define _PSTR2CON_CMPL1_SIZE                                0x1
#define _PSTR2CON_CMPL1_LENGTH                              0x1
#define _PSTR2CON_CMPL1_MASK                                0x80
#define _PSTR2CON_P2DC0_POSN                                0x0
#define _PSTR2CON_P2DC0_POSITION                            0x0
#define _PSTR2CON_P2DC0_SIZE                                0x1
#define _PSTR2CON_P2DC0_LENGTH                              0x1
#define _PSTR2CON_P2DC0_MASK                                0x1
#define _PSTR2CON_P2DC1_POSN                                0x1
#define _PSTR2CON_P2DC1_POSITION                            0x1
#define _PSTR2CON_P2DC1_SIZE                                0x1
#define _PSTR2CON_P2DC1_LENGTH                              0x1
#define _PSTR2CON_P2DC1_MASK                                0x2
#define _PSTR2CON_P2DC2_POSN                                0x2
#define _PSTR2CON_P2DC2_POSITION                            0x2
#define _PSTR2CON_P2DC2_SIZE                                0x1
#define _PSTR2CON_P2DC2_LENGTH                              0x1
#define _PSTR2CON_P2DC2_MASK                                0x4
#define _PSTR2CON_P2DC3_POSN                                0x3
#define _PSTR2CON_P2DC3_POSITION                            0x3
#define _PSTR2CON_P2DC3_SIZE                                0x1
#define _PSTR2CON_P2DC3_LENGTH                              0x1
#define _PSTR2CON_P2DC3_MASK                                0x8
#define _PSTR2CON_P2DC4_POSN                                0x4
#define _PSTR2CON_P2DC4_POSITION                            0x4
#define _PSTR2CON_P2DC4_SIZE                                0x1
#define _PSTR2CON_P2DC4_LENGTH                              0x1
#define _PSTR2CON_P2DC4_MASK                                0x10
#define _PSTR2CON_P2DC5_POSN                                0x5
#define _PSTR2CON_P2DC5_POSITION                            0x5
#define _PSTR2CON_P2DC5_SIZE                                0x1
#define _PSTR2CON_P2DC5_LENGTH                              0x1
#define _PSTR2CON_P2DC5_MASK                                0x20
#define _PSTR2CON_P2DC6_POSN                                0x6
#define _PSTR2CON_P2DC6_POSITION                            0x6
#define _PSTR2CON_P2DC6_SIZE                                0x1
#define _PSTR2CON_P2DC6_LENGTH                              0x1
#define _PSTR2CON_P2DC6_MASK                                0x40
#define _PSTR2CON_CMPL02_POSN                               0x6
#define _PSTR2CON_CMPL02_POSITION                           0x6
#define _PSTR2CON_CMPL02_SIZE                               0x1
#define _PSTR2CON_CMPL02_LENGTH                             0x1
#define _PSTR2CON_CMPL02_MASK                               0x40
#define _PSTR2CON_CMPL12_POSN                               0x7
#define _PSTR2CON_CMPL12_POSITION                           0x7
#define _PSTR2CON_CMPL12_SIZE                               0x1
#define _PSTR2CON_CMPL12_LENGTH                             0x1
#define _PSTR2CON_CMPL12_MASK                               0x80
#define _PSTR2CON_P2DC02_POSN                               0x0
#define _PSTR2CON_P2DC02_POSITION                           0x0
#define _PSTR2CON_P2DC02_SIZE                               0x1
#define _PSTR2CON_P2DC02_LENGTH                             0x1
#define _PSTR2CON_P2DC02_MASK                               0x1
#define _PSTR2CON_P2DC0CON_POSN                             0x0
#define _PSTR2CON_P2DC0CON_POSITION                         0x0
#define _PSTR2CON_P2DC0CON_SIZE                             0x1
#define _PSTR2CON_P2DC0CON_LENGTH                           0x1
#define _PSTR2CON_P2DC0CON_MASK                             0x1
#define _PSTR2CON_P2DC12_POSN                               0x1
#define _PSTR2CON_P2DC12_POSITION                           0x1
#define _PSTR2CON_P2DC12_SIZE                               0x1
#define _PSTR2CON_P2DC12_LENGTH                             0x1
#define _PSTR2CON_P2DC12_MASK                               0x2
#define _PSTR2CON_P2DC1CON_POSN                             0x1
#define _PSTR2CON_P2DC1CON_POSITION                         0x1
#define _PSTR2CON_P2DC1CON_SIZE                             0x1
#define _PSTR2CON_P2DC1CON_LENGTH                           0x1
#define _PSTR2CON_P2DC1CON_MASK                             0x2
#define _PSTR2CON_P2DC22_POSN                               0x2
#define _PSTR2CON_P2DC22_POSITION                           0x2
#define _PSTR2CON_P2DC22_SIZE                               0x1
#define _PSTR2CON_P2DC22_LENGTH                             0x1
#define _PSTR2CON_P2DC22_MASK                               0x4
#define _PSTR2CON_P2DC2CON_POSN                             0x2
#define _PSTR2CON_P2DC2CON_POSITION                         0x2
#define _PSTR2CON_P2DC2CON_SIZE                             0x1
#define _PSTR2CON_P2DC2CON_LENGTH                           0x1
#define _PSTR2CON_P2DC2CON_MASK                             0x4
#define _PSTR2CON_P2DC32_POSN                               0x3
#define _PSTR2CON_P2DC32_POSITION                           0x3
#define _PSTR2CON_P2DC32_SIZE                               0x1
#define _PSTR2CON_P2DC32_LENGTH                             0x1
#define _PSTR2CON_P2DC32_MASK                               0x8
#define _PSTR2CON_P2DC3CON_POSN                             0x3
#define _PSTR2CON_P2DC3CON_POSITION                         0x3
#define _PSTR2CON_P2DC3CON_SIZE                             0x1
#define _PSTR2CON_P2DC3CON_LENGTH                           0x1
#define _PSTR2CON_P2DC3CON_MASK                             0x8
#define _PSTR2CON_P2DC42_POSN                               0x4
#define _PSTR2CON_P2DC42_POSITION                           0x4
#define _PSTR2CON_P2DC42_SIZE                               0x1
#define _PSTR2CON_P2DC42_LENGTH                             0x1
#define _PSTR2CON_P2DC42_MASK                               0x10
#define _PSTR2CON_P2DC4CON_POSN                             0x4
#define _PSTR2CON_P2DC4CON_POSITION                         0x4
#define _PSTR2CON_P2DC4CON_SIZE                             0x1
#define _PSTR2CON_P2DC4CON_LENGTH                           0x1
#define _PSTR2CON_P2DC4CON_MASK                             0x10
#define _PSTR2CON_P2DC52_POSN                               0x5
#define _PSTR2CON_P2DC52_POSITION                           0x5
#define _PSTR2CON_P2DC52_SIZE                               0x1
#define _PSTR2CON_P2DC52_LENGTH                             0x1
#define _PSTR2CON_P2DC52_MASK                               0x20
#define _PSTR2CON_P2DC5CON_POSN                             0x5
#define _PSTR2CON_P2DC5CON_POSITION                         0x5
#define _PSTR2CON_P2DC5CON_SIZE                             0x1
#define _PSTR2CON_P2DC5CON_LENGTH                           0x1
#define _PSTR2CON_P2DC5CON_MASK                             0x20
#define _PSTR2CON_P2DC62_POSN                               0x6
#define _PSTR2CON_P2DC62_POSITION                           0x6
#define _PSTR2CON_P2DC62_SIZE                               0x1
#define _PSTR2CON_P2DC62_LENGTH                             0x1
#define _PSTR2CON_P2DC62_MASK                               0x40
#define _PSTR2CON_P2DC6CON_POSN                             0x6
#define _PSTR2CON_P2DC6CON_POSITION                         0x6
#define _PSTR2CON_P2DC6CON_SIZE                             0x1
#define _PSTR2CON_P2DC6CON_LENGTH                           0x1
#define _PSTR2CON_P2DC6CON_MASK                             0x40
#define _PSTR2CON_STRA2_POSN                                0x0
#define _PSTR2CON_STRA2_POSITION                            0x0
#define _PSTR2CON_STRA2_SIZE                                0x1
#define _PSTR2CON_STRA2_LENGTH                              0x1
#define _PSTR2CON_STRA2_MASK                                0x1
#define _PSTR2CON_STRB2_POSN                                0x1
#define _PSTR2CON_STRB2_POSITION                            0x1
#define _PSTR2CON_STRB2_SIZE                                0x1
#define _PSTR2CON_STRB2_LENGTH                              0x1
#define _PSTR2CON_STRB2_MASK                                0x2
#define _PSTR2CON_STRC2_POSN                                0x2
#define _PSTR2CON_STRC2_POSITION                            0x2
#define _PSTR2CON_STRC2_SIZE                                0x1
#define _PSTR2CON_STRC2_LENGTH                              0x1
#define _PSTR2CON_STRC2_MASK                                0x4
#define _PSTR2CON_STRD2_POSN                                0x3
#define _PSTR2CON_STRD2_POSITION                            0x3
#define _PSTR2CON_STRD2_SIZE                                0x1
#define _PSTR2CON_STRD2_LENGTH                              0x1
#define _PSTR2CON_STRD2_MASK                                0x8
#define _PSTR2CON_STRSYNC2_POSN                             0x4
#define _PSTR2CON_STRSYNC2_POSITION                         0x4
#define _PSTR2CON_STRSYNC2_SIZE                             0x1
#define _PSTR2CON_STRSYNC2_LENGTH                           0x1
#define _PSTR2CON_STRSYNC2_MASK                             0x10

// Register: CCP1CON
extern volatile unsigned char           CCP1CON             @ 0xFBA;
#ifndef _LIB_BUILD
asm("CCP1CON equ 0FBAh");
#endif
// aliases
extern volatile unsigned char           ECCP1CON            @ 0xFBA;
#ifndef _LIB_BUILD
asm("ECCP1CON equ 0FBAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
        unsigned P1M                    :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
        unsigned P1M0                   :1;
        unsigned P1M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP1Y                  :1;
        unsigned CCP1X                  :1;
    };
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBA;
// bitfield macros
#define _CCP1CON_CCP1M_POSN                                 0x0
#define _CCP1CON_CCP1M_POSITION                             0x0
#define _CCP1CON_CCP1M_SIZE                                 0x4
#define _CCP1CON_CCP1M_LENGTH                               0x4
#define _CCP1CON_CCP1M_MASK                                 0xF
#define _CCP1CON_DC1B_POSN                                  0x4
#define _CCP1CON_DC1B_POSITION                              0x4
#define _CCP1CON_DC1B_SIZE                                  0x2
#define _CCP1CON_DC1B_LENGTH                                0x2
#define _CCP1CON_DC1B_MASK                                  0x30
#define _CCP1CON_P1M_POSN                                   0x6
#define _CCP1CON_P1M_POSITION                               0x6
#define _CCP1CON_P1M_SIZE                                   0x2
#define _CCP1CON_P1M_LENGTH                                 0x2
#define _CCP1CON_P1M_MASK                                   0xC0
#define _CCP1CON_CCP1M0_POSN                                0x0
#define _CCP1CON_CCP1M0_POSITION                            0x0
#define _CCP1CON_CCP1M0_SIZE                                0x1
#define _CCP1CON_CCP1M0_LENGTH                              0x1
#define _CCP1CON_CCP1M0_MASK                                0x1
#define _CCP1CON_CCP1M1_POSN                                0x1
#define _CCP1CON_CCP1M1_POSITION                            0x1
#define _CCP1CON_CCP1M1_SIZE                                0x1
#define _CCP1CON_CCP1M1_LENGTH                              0x1
#define _CCP1CON_CCP1M1_MASK                                0x2
#define _CCP1CON_CCP1M2_POSN                                0x2
#define _CCP1CON_CCP1M2_POSITION                            0x2
#define _CCP1CON_CCP1M2_SIZE                                0x1
#define _CCP1CON_CCP1M2_LENGTH                              0x1
#define _CCP1CON_CCP1M2_MASK                                0x4
#define _CCP1CON_CCP1M3_POSN                                0x3
#define _CCP1CON_CCP1M3_POSITION                            0x3
#define _CCP1CON_CCP1M3_SIZE                                0x1
#define _CCP1CON_CCP1M3_LENGTH                              0x1
#define _CCP1CON_CCP1M3_MASK                                0x8
#define _CCP1CON_DC1B0_POSN                                 0x4
#define _CCP1CON_DC1B0_POSITION                             0x4
#define _CCP1CON_DC1B0_SIZE                                 0x1
#define _CCP1CON_DC1B0_LENGTH                               0x1
#define _CCP1CON_DC1B0_MASK                                 0x10
#define _CCP1CON_DC1B1_POSN                                 0x5
#define _CCP1CON_DC1B1_POSITION                             0x5
#define _CCP1CON_DC1B1_SIZE                                 0x1
#define _CCP1CON_DC1B1_LENGTH                               0x1
#define _CCP1CON_DC1B1_MASK                                 0x20
#define _CCP1CON_P1M0_POSN                                  0x6
#define _CCP1CON_P1M0_POSITION                              0x6
#define _CCP1CON_P1M0_SIZE                                  0x1
#define _CCP1CON_P1M0_LENGTH                                0x1
#define _CCP1CON_P1M0_MASK                                  0x40
#define _CCP1CON_P1M1_POSN                                  0x7
#define _CCP1CON_P1M1_POSITION                              0x7
#define _CCP1CON_P1M1_SIZE                                  0x1
#define _CCP1CON_P1M1_LENGTH                                0x1
#define _CCP1CON_P1M1_MASK                                  0x80
#define _CCP1CON_CCP1Y_POSN                                 0x4
#define _CCP1CON_CCP1Y_POSITION                             0x4
#define _CCP1CON_CCP1Y_SIZE                                 0x1
#define _CCP1CON_CCP1Y_LENGTH                               0x1
#define _CCP1CON_CCP1Y_MASK                                 0x10
#define _CCP1CON_CCP1X_POSN                                 0x5
#define _CCP1CON_CCP1X_POSITION                             0x5
#define _CCP1CON_CCP1X_SIZE                                 0x1
#define _CCP1CON_CCP1X_LENGTH                               0x1
#define _CCP1CON_CCP1X_MASK                                 0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCP1M                  :4;
        unsigned DC1B                   :2;
        unsigned P1M                    :2;
    };
    struct {
        unsigned CCP1M0                 :1;
        unsigned CCP1M1                 :1;
        unsigned CCP1M2                 :1;
        unsigned CCP1M3                 :1;
        unsigned DC1B0                  :1;
        unsigned DC1B1                  :1;
        unsigned P1M0                   :1;
        unsigned P1M1                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned CCP1Y                  :1;
        unsigned CCP1X                  :1;
    };
} ECCP1CONbits_t;
extern volatile ECCP1CONbits_t ECCP1CONbits @ 0xFBA;
// bitfield macros
#define _ECCP1CON_CCP1M_POSN                                0x0
#define _ECCP1CON_CCP1M_POSITION                            0x0
#define _ECCP1CON_CCP1M_SIZE                                0x4
#define _ECCP1CON_CCP1M_LENGTH                              0x4
#define _ECCP1CON_CCP1M_MASK                                0xF
#define _ECCP1CON_DC1B_POSN                                 0x4
#define _ECCP1CON_DC1B_POSITION                             0x4
#define _ECCP1CON_DC1B_SIZE                                 0x2
#define _ECCP1CON_DC1B_LENGTH                               0x2
#define _ECCP1CON_DC1B_MASK                                 0x30
#define _ECCP1CON_P1M_POSN                                  0x6
#define _ECCP1CON_P1M_POSITION                              0x6
#define _ECCP1CON_P1M_SIZE                                  0x2
#define _ECCP1CON_P1M_LENGTH                                0x2
#define _ECCP1CON_P1M_MASK                                  0xC0
#define _ECCP1CON_CCP1M0_POSN                               0x0
#define _ECCP1CON_CCP1M0_POSITION                           0x0
#define _ECCP1CON_CCP1M0_SIZE                               0x1
#define _ECCP1CON_CCP1M0_LENGTH                             0x1
#define _ECCP1CON_CCP1M0_MASK                               0x1
#define _ECCP1CON_CCP1M1_POSN                               0x1
#define _ECCP1CON_CCP1M1_POSITION                           0x1
#define _ECCP1CON_CCP1M1_SIZE                               0x1
#define _ECCP1CON_CCP1M1_LENGTH                             0x1
#define _ECCP1CON_CCP1M1_MASK                               0x2
#define _ECCP1CON_CCP1M2_POSN                               0x2
#define _ECCP1CON_CCP1M2_POSITION                           0x2
#define _ECCP1CON_CCP1M2_SIZE                               0x1
#define _ECCP1CON_CCP1M2_LENGTH                             0x1
#define _ECCP1CON_CCP1M2_MASK                               0x4
#define _ECCP1CON_CCP1M3_POSN                               0x3
#define _ECCP1CON_CCP1M3_POSITION                           0x3
#define _ECCP1CON_CCP1M3_SIZE                               0x1
#define _ECCP1CON_CCP1M3_LENGTH                             0x1
#define _ECCP1CON_CCP1M3_MASK                               0x8
#define _ECCP1CON_DC1B0_POSN                                0x4
#define _ECCP1CON_DC1B0_POSITION                            0x4
#define _ECCP1CON_DC1B0_SIZE                                0x1
#define _ECCP1CON_DC1B0_LENGTH                              0x1
#define _ECCP1CON_DC1B0_MASK                                0x10
#define _ECCP1CON_DC1B1_POSN                                0x5
#define _ECCP1CON_DC1B1_POSITION                            0x5
#define _ECCP1CON_DC1B1_SIZE                                0x1
#define _ECCP1CON_DC1B1_LENGTH                              0x1
#define _ECCP1CON_DC1B1_MASK                                0x20
#define _ECCP1CON_P1M0_POSN                                 0x6
#define _ECCP1CON_P1M0_POSITION                             0x6
#define _ECCP1CON_P1M0_SIZE                                 0x1
#define _ECCP1CON_P1M0_LENGTH                               0x1
#define _ECCP1CON_P1M0_MASK                                 0x40
#define _ECCP1CON_P1M1_POSN                                 0x7
#define _ECCP1CON_P1M1_POSITION                             0x7
#define _ECCP1CON_P1M1_SIZE                                 0x1
#define _ECCP1CON_P1M1_LENGTH                               0x1
#define _ECCP1CON_P1M1_MASK                                 0x80
#define _ECCP1CON_CCP1Y_POSN                                0x4
#define _ECCP1CON_CCP1Y_POSITION                            0x4
#define _ECCP1CON_CCP1Y_SIZE                                0x1
#define _ECCP1CON_CCP1Y_LENGTH                              0x1
#define _ECCP1CON_CCP1Y_MASK                                0x10
#define _ECCP1CON_CCP1X_POSN                                0x5
#define _ECCP1CON_CCP1X_POSITION                            0x5
#define _ECCP1CON_CCP1X_SIZE                                0x1
#define _ECCP1CON_CCP1X_LENGTH                              0x1
#define _ECCP1CON_CCP1X_MASK                                0x20

// Register: CCPR1
extern volatile unsigned short          CCPR1               @ 0xFBB;
#ifndef _LIB_BUILD
asm("CCPR1 equ 0FBBh");
#endif

// Register: CCPR1L
extern volatile unsigned char           CCPR1L              @ 0xFBB;
#ifndef _LIB_BUILD
asm("CCPR1L equ 0FBBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1L                 :8;
    };
} CCPR1Lbits_t;
extern volatile CCPR1Lbits_t CCPR1Lbits @ 0xFBB;
// bitfield macros
#define _CCPR1L_CCPR1L_POSN                                 0x0
#define _CCPR1L_CCPR1L_POSITION                             0x0
#define _CCPR1L_CCPR1L_SIZE                                 0x8
#define _CCPR1L_CCPR1L_LENGTH                               0x8
#define _CCPR1L_CCPR1L_MASK                                 0xFF

// Register: CCPR1H
extern volatile unsigned char           CCPR1H              @ 0xFBC;
#ifndef _LIB_BUILD
asm("CCPR1H equ 0FBCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCPR1H                 :8;
    };
} CCPR1Hbits_t;
extern volatile CCPR1Hbits_t CCPR1Hbits @ 0xFBC;
// bitfield macros
#define _CCPR1H_CCPR1H_POSN                                 0x0
#define _CCPR1H_CCPR1H_POSITION                             0x0
#define _CCPR1H_CCPR1H_SIZE                                 0x8
#define _CCPR1H_CCPR1H_LENGTH                               0x8
#define _CCPR1H_CCPR1H_MASK                                 0xFF

// Register: ECCP1DEL
extern volatile unsigned char           ECCP1DEL            @ 0xFBD;
#ifndef _LIB_BUILD
asm("ECCP1DEL equ 0FBDh");
#endif
// aliases
extern volatile unsigned char           PWM1CON             @ 0xFBD;
#ifndef _LIB_BUILD
asm("PWM1CON equ 0FBDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned P1DC                   :7;
        unsigned P1RSEN                 :1;
    };
    struct {
        unsigned P1DC0                  :1;
        unsigned P1DC1                  :1;
        unsigned P1DC2                  :1;
        unsigned P1DC3                  :1;
        unsigned P1DC4                  :1;
        unsigned P1DC5                  :1;
        unsigned P1DC6                  :1;
    };
} ECCP1DELbits_t;
extern volatile ECCP1DELbits_t ECCP1DELbits @ 0xFBD;
// bitfield macros
#define _ECCP1DEL_P1DC_POSN                                 0x0
#define _ECCP1DEL_P1DC_POSITION                             0x0
#define _ECCP1DEL_P1DC_SIZE                                 0x7
#define _ECCP1DEL_P1DC_LENGTH                               0x7
#define _ECCP1DEL_P1DC_MASK                                 0x7F
#define _ECCP1DEL_P1RSEN_POSN                               0x7
#define _ECCP1DEL_P1RSEN_POSITION                           0x7
#define _ECCP1DEL_P1RSEN_SIZE                               0x1
#define _ECCP1DEL_P1RSEN_LENGTH                             0x1
#define _ECCP1DEL_P1RSEN_MASK                               0x80
#define _ECCP1DEL_P1DC0_POSN                                0x0
#define _ECCP1DEL_P1DC0_POSITION                            0x0
#define _ECCP1DEL_P1DC0_SIZE                                0x1
#define _ECCP1DEL_P1DC0_LENGTH                              0x1
#define _ECCP1DEL_P1DC0_MASK                                0x1
#define _ECCP1DEL_P1DC1_POSN                                0x1
#define _ECCP1DEL_P1DC1_POSITION                            0x1
#define _ECCP1DEL_P1DC1_SIZE                                0x1
#define _ECCP1DEL_P1DC1_LENGTH                              0x1
#define _ECCP1DEL_P1DC1_MASK                                0x2
#define _ECCP1DEL_P1DC2_POSN                                0x2
#define _ECCP1DEL_P1DC2_POSITION                            0x2
#define _ECCP1DEL_P1DC2_SIZE                                0x1
#define _ECCP1DEL_P1DC2_LENGTH                              0x1
#define _ECCP1DEL_P1DC2_MASK                                0x4
#define _ECCP1DEL_P1DC3_POSN                                0x3
#define _ECCP1DEL_P1DC3_POSITION                            0x3
#define _ECCP1DEL_P1DC3_SIZE                                0x1
#define _ECCP1DEL_P1DC3_LENGTH                              0x1
#define _ECCP1DEL_P1DC3_MASK                                0x8
#define _ECCP1DEL_P1DC4_POSN                                0x4
#define _ECCP1DEL_P1DC4_POSITION                            0x4
#define _ECCP1DEL_P1DC4_SIZE                                0x1
#define _ECCP1DEL_P1DC4_LENGTH                              0x1
#define _ECCP1DEL_P1DC4_MASK                                0x10
#define _ECCP1DEL_P1DC5_POSN                                0x5
#define _ECCP1DEL_P1DC5_POSITION                            0x5
#define _ECCP1DEL_P1DC5_SIZE                                0x1
#define _ECCP1DEL_P1DC5_LENGTH                              0x1
#define _ECCP1DEL_P1DC5_MASK                                0x20
#define _ECCP1DEL_P1DC6_POSN                                0x6
#define _ECCP1DEL_P1DC6_POSITION                            0x6
#define _ECCP1DEL_P1DC6_SIZE                                0x1
#define _ECCP1DEL_P1DC6_LENGTH                              0x1
#define _ECCP1DEL_P1DC6_MASK                                0x40
// alias bitfield definitions
typedef union {
    struct {
        unsigned P1DC                   :7;
        unsigned P1RSEN                 :1;
    };
    struct {
        unsigned P1DC0                  :1;
        unsigned P1DC1                  :1;
        unsigned P1DC2                  :1;
        unsigned P1DC3                  :1;
        unsigned P1DC4                  :1;
        unsigned P1DC5                  :1;
        unsigned P1DC6                  :1;
    };
} PWM1CONbits_t;
extern volatile PWM1CONbits_t PWM1CONbits @ 0xFBD;
// bitfield macros
#define _PWM1CON_P1DC_POSN                                  0x0
#define _PWM1CON_P1DC_POSITION                              0x0
#define _PWM1CON_P1DC_SIZE                                  0x7
#define _PWM1CON_P1DC_LENGTH                                0x7
#define _PWM1CON_P1DC_MASK                                  0x7F
#define _PWM1CON_P1RSEN_POSN                                0x7
#define _PWM1CON_P1RSEN_POSITION                            0x7
#define _PWM1CON_P1RSEN_SIZE                                0x1
#define _PWM1CON_P1RSEN_LENGTH                              0x1
#define _PWM1CON_P1RSEN_MASK                                0x80
#define _PWM1CON_P1DC0_POSN                                 0x0
#define _PWM1CON_P1DC0_POSITION                             0x0
#define _PWM1CON_P1DC0_SIZE                                 0x1
#define _PWM1CON_P1DC0_LENGTH                               0x1
#define _PWM1CON_P1DC0_MASK                                 0x1
#define _PWM1CON_P1DC1_POSN                                 0x1
#define _PWM1CON_P1DC1_POSITION                             0x1
#define _PWM1CON_P1DC1_SIZE                                 0x1
#define _PWM1CON_P1DC1_LENGTH                               0x1
#define _PWM1CON_P1DC1_MASK                                 0x2
#define _PWM1CON_P1DC2_POSN                                 0x2
#define _PWM1CON_P1DC2_POSITION                             0x2
#define _PWM1CON_P1DC2_SIZE                                 0x1
#define _PWM1CON_P1DC2_LENGTH                               0x1
#define _PWM1CON_P1DC2_MASK                                 0x4
#define _PWM1CON_P1DC3_POSN                                 0x3
#define _PWM1CON_P1DC3_POSITION                             0x3
#define _PWM1CON_P1DC3_SIZE                                 0x1
#define _PWM1CON_P1DC3_LENGTH                               0x1
#define _PWM1CON_P1DC3_MASK                                 0x8
#define _PWM1CON_P1DC4_POSN                                 0x4
#define _PWM1CON_P1DC4_POSITION                             0x4
#define _PWM1CON_P1DC4_SIZE                                 0x1
#define _PWM1CON_P1DC4_LENGTH                               0x1
#define _PWM1CON_P1DC4_MASK                                 0x10
#define _PWM1CON_P1DC5_POSN                                 0x5
#define _PWM1CON_P1DC5_POSITION                             0x5
#define _PWM1CON_P1DC5_SIZE                                 0x1
#define _PWM1CON_P1DC5_LENGTH                               0x1
#define _PWM1CON_P1DC5_MASK                                 0x20
#define _PWM1CON_P1DC6_POSN                                 0x6
#define _PWM1CON_P1DC6_POSITION                             0x6
#define _PWM1CON_P1DC6_SIZE                                 0x1
#define _PWM1CON_P1DC6_LENGTH                               0x1
#define _PWM1CON_P1DC6_MASK                                 0x40

// Register: ECCP1AS
extern volatile unsigned char           ECCP1AS             @ 0xFBE;
#ifndef _LIB_BUILD
asm("ECCP1AS equ 0FBEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PSS1BD                 :2;
        unsigned PSS1AC                 :2;
        unsigned ECCP1AS                :3;
        unsigned ECCP1ASE               :1;
    };
    struct {
        unsigned PSS1BD0                :1;
        unsigned PSS1BD1                :1;
        unsigned PSS1AC0                :1;
        unsigned PSS1AC1                :1;
        unsigned ECCP1AS0               :1;
        unsigned ECCP1AS1               :1;
        unsigned ECCP1AS2               :1;
    };
} ECCP1ASbits_t;
extern volatile ECCP1ASbits_t ECCP1ASbits @ 0xFBE;
// bitfield macros
#define _ECCP1AS_PSS1BD_POSN                                0x0
#define _ECCP1AS_PSS1BD_POSITION                            0x0
#define _ECCP1AS_PSS1BD_SIZE                                0x2
#define _ECCP1AS_PSS1BD_LENGTH                              0x2
#define _ECCP1AS_PSS1BD_MASK                                0x3
#define _ECCP1AS_PSS1AC_POSN                                0x2
#define _ECCP1AS_PSS1AC_POSITION                            0x2
#define _ECCP1AS_PSS1AC_SIZE                                0x2
#define _ECCP1AS_PSS1AC_LENGTH                              0x2
#define _ECCP1AS_PSS1AC_MASK                                0xC
#define _ECCP1AS_ECCP1AS_POSN                               0x4
#define _ECCP1AS_ECCP1AS_POSITION                           0x4
#define _ECCP1AS_ECCP1AS_SIZE                               0x3
#define _ECCP1AS_ECCP1AS_LENGTH                             0x3
#define _ECCP1AS_ECCP1AS_MASK                               0x70
#define _ECCP1AS_ECCP1ASE_POSN                              0x7
#define _ECCP1AS_ECCP1ASE_POSITION                          0x7
#define _ECCP1AS_ECCP1ASE_SIZE                              0x1
#define _ECCP1AS_ECCP1ASE_LENGTH                            0x1
#define _ECCP1AS_ECCP1ASE_MASK                              0x80
#define _ECCP1AS_PSS1BD0_POSN                               0x0
#define _ECCP1AS_PSS1BD0_POSITION                           0x0
#define _ECCP1AS_PSS1BD0_SIZE                               0x1
#define _ECCP1AS_PSS1BD0_LENGTH                             0x1
#define _ECCP1AS_PSS1BD0_MASK                               0x1
#define _ECCP1AS_PSS1BD1_POSN                               0x1
#define _ECCP1AS_PSS1BD1_POSITION                           0x1
#define _ECCP1AS_PSS1BD1_SIZE                               0x1
#define _ECCP1AS_PSS1BD1_LENGTH                             0x1
#define _ECCP1AS_PSS1BD1_MASK                               0x2
#define _ECCP1AS_PSS1AC0_POSN                               0x2
#define _ECCP1AS_PSS1AC0_POSITION                           0x2
#define _ECCP1AS_PSS1AC0_SIZE                               0x1
#define _ECCP1AS_PSS1AC0_LENGTH                             0x1
#define _ECCP1AS_PSS1AC0_MASK                               0x4
#define _ECCP1AS_PSS1AC1_POSN                               0x3
#define _ECCP1AS_PSS1AC1_POSITION                           0x3
#define _ECCP1AS_PSS1AC1_SIZE                               0x1
#define _ECCP1AS_PSS1AC1_LENGTH                             0x1
#define _ECCP1AS_PSS1AC1_MASK                               0x8
#define _ECCP1AS_ECCP1AS0_POSN                              0x4
#define _ECCP1AS_ECCP1AS0_POSITION                          0x4
#define _ECCP1AS_ECCP1AS0_SIZE                              0x1
#define _ECCP1AS_ECCP1AS0_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS0_MASK                              0x10
#define _ECCP1AS_ECCP1AS1_POSN                              0x5
#define _ECCP1AS_ECCP1AS1_POSITION                          0x5
#define _ECCP1AS_ECCP1AS1_SIZE                              0x1
#define _ECCP1AS_ECCP1AS1_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS1_MASK                              0x20
#define _ECCP1AS_ECCP1AS2_POSN                              0x6
#define _ECCP1AS_ECCP1AS2_POSITION                          0x6
#define _ECCP1AS_ECCP1AS2_SIZE                              0x1
#define _ECCP1AS_ECCP1AS2_LENGTH                            0x1
#define _ECCP1AS_ECCP1AS2_MASK                              0x40

// Register: PSTR1CON
extern volatile unsigned char           PSTR1CON            @ 0xFBF;
#ifndef _LIB_BUILD
asm("PSTR1CON equ 0FBFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STRA                   :1;
        unsigned STRB                   :1;
        unsigned STRC                   :1;
        unsigned STRD                   :1;
        unsigned STRSYNC                :1;
        unsigned                        :1;
        unsigned CMPL0                  :1;
        unsigned CMPL1                  :1;
    };
} PSTR1CONbits_t;
extern volatile PSTR1CONbits_t PSTR1CONbits @ 0xFBF;
// bitfield macros
#define _PSTR1CON_STRA_POSN                                 0x0
#define _PSTR1CON_STRA_POSITION                             0x0
#define _PSTR1CON_STRA_SIZE                                 0x1
#define _PSTR1CON_STRA_LENGTH                               0x1
#define _PSTR1CON_STRA_MASK                                 0x1
#define _PSTR1CON_STRB_POSN                                 0x1
#define _PSTR1CON_STRB_POSITION                             0x1
#define _PSTR1CON_STRB_SIZE                                 0x1
#define _PSTR1CON_STRB_LENGTH                               0x1
#define _PSTR1CON_STRB_MASK                                 0x2
#define _PSTR1CON_STRC_POSN                                 0x2
#define _PSTR1CON_STRC_POSITION                             0x2
#define _PSTR1CON_STRC_SIZE                                 0x1
#define _PSTR1CON_STRC_LENGTH                               0x1
#define _PSTR1CON_STRC_MASK                                 0x4
#define _PSTR1CON_STRD_POSN                                 0x3
#define _PSTR1CON_STRD_POSITION                             0x3
#define _PSTR1CON_STRD_SIZE                                 0x1
#define _PSTR1CON_STRD_LENGTH                               0x1
#define _PSTR1CON_STRD_MASK                                 0x8
#define _PSTR1CON_STRSYNC_POSN                              0x4
#define _PSTR1CON_STRSYNC_POSITION                          0x4
#define _PSTR1CON_STRSYNC_SIZE                              0x1
#define _PSTR1CON_STRSYNC_LENGTH                            0x1
#define _PSTR1CON_STRSYNC_MASK                              0x10
#define _PSTR1CON_CMPL0_POSN                                0x6
#define _PSTR1CON_CMPL0_POSITION                            0x6
#define _PSTR1CON_CMPL0_SIZE                                0x1
#define _PSTR1CON_CMPL0_LENGTH                              0x1
#define _PSTR1CON_CMPL0_MASK                                0x40
#define _PSTR1CON_CMPL1_POSN                                0x7
#define _PSTR1CON_CMPL1_POSITION                            0x7
#define _PSTR1CON_CMPL1_SIZE                                0x1
#define _PSTR1CON_CMPL1_LENGTH                              0x1
#define _PSTR1CON_CMPL1_MASK                                0x80

// Register: WDTCON
extern volatile unsigned char           WDTCON              @ 0xFC0;
#ifndef _LIB_BUILD
asm("WDTCON equ 0FC0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SWDTEN                 :1;
        unsigned ULPSINK                :1;
        unsigned ULPEN                  :1;
        unsigned DS                     :1;
        unsigned VBGOE                  :1;
        unsigned ULPLVL                 :1;
        unsigned LVDSTAT                :1;
        unsigned REGSLP                 :1;
    };
    struct {
        unsigned SWDTE                  :1;
    };
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0xFC0;
// bitfield macros
#define _WDTCON_SWDTEN_POSN                                 0x0
#define _WDTCON_SWDTEN_POSITION                             0x0
#define _WDTCON_SWDTEN_SIZE                                 0x1
#define _WDTCON_SWDTEN_LENGTH                               0x1
#define _WDTCON_SWDTEN_MASK                                 0x1
#define _WDTCON_ULPSINK_POSN                                0x1
#define _WDTCON_ULPSINK_POSITION                            0x1
#define _WDTCON_ULPSINK_SIZE                                0x1
#define _WDTCON_ULPSINK_LENGTH                              0x1
#define _WDTCON_ULPSINK_MASK                                0x2
#define _WDTCON_ULPEN_POSN                                  0x2
#define _WDTCON_ULPEN_POSITION                              0x2
#define _WDTCON_ULPEN_SIZE                                  0x1
#define _WDTCON_ULPEN_LENGTH                                0x1
#define _WDTCON_ULPEN_MASK                                  0x4
#define _WDTCON_DS_POSN                                     0x3
#define _WDTCON_DS_POSITION                                 0x3
#define _WDTCON_DS_SIZE                                     0x1
#define _WDTCON_DS_LENGTH                                   0x1
#define _WDTCON_DS_MASK                                     0x8
#define _WDTCON_VBGOE_POSN                                  0x4
#define _WDTCON_VBGOE_POSITION                              0x4
#define _WDTCON_VBGOE_SIZE                                  0x1
#define _WDTCON_VBGOE_LENGTH                                0x1
#define _WDTCON_VBGOE_MASK                                  0x10
#define _WDTCON_ULPLVL_POSN                                 0x5
#define _WDTCON_ULPLVL_POSITION                             0x5
#define _WDTCON_ULPLVL_SIZE                                 0x1
#define _WDTCON_ULPLVL_LENGTH                               0x1
#define _WDTCON_ULPLVL_MASK                                 0x20
#define _WDTCON_LVDSTAT_POSN                                0x6
#define _WDTCON_LVDSTAT_POSITION                            0x6
#define _WDTCON_LVDSTAT_SIZE                                0x1
#define _WDTCON_LVDSTAT_LENGTH                              0x1
#define _WDTCON_LVDSTAT_MASK                                0x40
#define _WDTCON_REGSLP_POSN                                 0x7
#define _WDTCON_REGSLP_POSITION                             0x7
#define _WDTCON_REGSLP_SIZE                                 0x1
#define _WDTCON_REGSLP_LENGTH                               0x1
#define _WDTCON_REGSLP_MASK                                 0x80
#define _WDTCON_SWDTE_POSN                                  0x0
#define _WDTCON_SWDTE_POSITION                              0x0
#define _WDTCON_SWDTE_SIZE                                  0x1
#define _WDTCON_SWDTE_LENGTH                                0x1
#define _WDTCON_SWDTE_MASK                                  0x1

// Register: ADCON1
extern volatile unsigned char           ADCON1              @ 0xFC1;
#ifndef _LIB_BUILD
asm("ADCON1 equ 0FC1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADCS                   :3;
        unsigned ACQT                   :3;
        unsigned ADCAL                  :1;
        unsigned ADFM                   :1;
    };
    struct {
        unsigned ADCS0                  :1;
        unsigned ADCS1                  :1;
        unsigned ADCS2                  :1;
        unsigned ACQT0                  :1;
        unsigned ACQT1                  :1;
        unsigned ACQT2                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned CHSN3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned VCFG01                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned VCFG11                 :1;
    };
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;
// bitfield macros
#define _ADCON1_ADCS_POSN                                   0x0
#define _ADCON1_ADCS_POSITION                               0x0
#define _ADCON1_ADCS_SIZE                                   0x3
#define _ADCON1_ADCS_LENGTH                                 0x3
#define _ADCON1_ADCS_MASK                                   0x7
#define _ADCON1_ACQT_POSN                                   0x3
#define _ADCON1_ACQT_POSITION                               0x3
#define _ADCON1_ACQT_SIZE                                   0x3
#define _ADCON1_ACQT_LENGTH                                 0x3
#define _ADCON1_ACQT_MASK                                   0x38
#define _ADCON1_ADCAL_POSN                                  0x6
#define _ADCON1_ADCAL_POSITION                              0x6
#define _ADCON1_ADCAL_SIZE                                  0x1
#define _ADCON1_ADCAL_LENGTH                                0x1
#define _ADCON1_ADCAL_MASK                                  0x40
#define _ADCON1_ADFM_POSN                                   0x7
#define _ADCON1_ADFM_POSITION                               0x7
#define _ADCON1_ADFM_SIZE                                   0x1
#define _ADCON1_ADFM_LENGTH                                 0x1
#define _ADCON1_ADFM_MASK                                   0x80
#define _ADCON1_ADCS0_POSN                                  0x0
#define _ADCON1_ADCS0_POSITION                              0x0
#define _ADCON1_ADCS0_SIZE                                  0x1
#define _ADCON1_ADCS0_LENGTH                                0x1
#define _ADCON1_ADCS0_MASK                                  0x1
#define _ADCON1_ADCS1_POSN                                  0x1
#define _ADCON1_ADCS1_POSITION                              0x1
#define _ADCON1_ADCS1_SIZE                                  0x1
#define _ADCON1_ADCS1_LENGTH                                0x1
#define _ADCON1_ADCS1_MASK                                  0x2
#define _ADCON1_ADCS2_POSN                                  0x2
#define _ADCON1_ADCS2_POSITION                              0x2
#define _ADCON1_ADCS2_SIZE                                  0x1
#define _ADCON1_ADCS2_LENGTH                                0x1
#define _ADCON1_ADCS2_MASK                                  0x4
#define _ADCON1_ACQT0_POSN                                  0x3
#define _ADCON1_ACQT0_POSITION                              0x3
#define _ADCON1_ACQT0_SIZE                                  0x1
#define _ADCON1_ACQT0_LENGTH                                0x1
#define _ADCON1_ACQT0_MASK                                  0x8
#define _ADCON1_ACQT1_POSN                                  0x4
#define _ADCON1_ACQT1_POSITION                              0x4
#define _ADCON1_ACQT1_SIZE                                  0x1
#define _ADCON1_ACQT1_LENGTH                                0x1
#define _ADCON1_ACQT1_MASK                                  0x10
#define _ADCON1_ACQT2_POSN                                  0x5
#define _ADCON1_ACQT2_POSITION                              0x5
#define _ADCON1_ACQT2_SIZE                                  0x1
#define _ADCON1_ACQT2_LENGTH                                0x1
#define _ADCON1_ACQT2_MASK                                  0x20
#define _ADCON1_CHSN3_POSN                                  0x3
#define _ADCON1_CHSN3_POSITION                              0x3
#define _ADCON1_CHSN3_SIZE                                  0x1
#define _ADCON1_CHSN3_LENGTH                                0x1
#define _ADCON1_CHSN3_MASK                                  0x8
#define _ADCON1_VCFG01_POSN                                 0x4
#define _ADCON1_VCFG01_POSITION                             0x4
#define _ADCON1_VCFG01_SIZE                                 0x1
#define _ADCON1_VCFG01_LENGTH                               0x1
#define _ADCON1_VCFG01_MASK                                 0x10
#define _ADCON1_VCFG11_POSN                                 0x5
#define _ADCON1_VCFG11_POSITION                             0x5
#define _ADCON1_VCFG11_SIZE                                 0x1
#define _ADCON1_VCFG11_LENGTH                               0x1
#define _ADCON1_VCFG11_MASK                                 0x20

// Register: ADCON0
extern volatile unsigned char           ADCON0              @ 0xFC2;
#ifndef _LIB_BUILD
asm("ADCON0 equ 0FC2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :1;
        unsigned GO_NOT_DONE            :1;
    };
    struct {
        unsigned ADON                   :1;
        unsigned GO_nDONE               :1;
        unsigned CHS                    :4;
        unsigned VCFG                   :2;
    };
    struct {
        unsigned                        :1;
        unsigned GO_DONE                :1;
        unsigned CHS0                   :1;
        unsigned CHS1                   :1;
        unsigned CHS2                   :1;
        unsigned CHS3                   :1;
        unsigned VCFG0                  :1;
        unsigned VCFG1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned DONE                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned GO                     :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_DONE               :1;
    };
    struct {
        unsigned                        :1;
        unsigned nDONE                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned ADCAL                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned GODONE                 :1;
    };
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;
// bitfield macros
#define _ADCON0_GO_NOT_DONE_POSN                            0x1
#define _ADCON0_GO_NOT_DONE_POSITION                        0x1
#define _ADCON0_GO_NOT_DONE_SIZE                            0x1
#define _ADCON0_GO_NOT_DONE_LENGTH                          0x1
#define _ADCON0_GO_NOT_DONE_MASK                            0x2
#define _ADCON0_ADON_POSN                                   0x0
#define _ADCON0_ADON_POSITION                               0x0
#define _ADCON0_ADON_SIZE                                   0x1
#define _ADCON0_ADON_LENGTH                                 0x1
#define _ADCON0_ADON_MASK                                   0x1
#define _ADCON0_GO_nDONE_POSN                               0x1
#define _ADCON0_GO_nDONE_POSITION                           0x1
#define _ADCON0_GO_nDONE_SIZE                               0x1
#define _ADCON0_GO_nDONE_LENGTH                             0x1
#define _ADCON0_GO_nDONE_MASK                               0x2
#define _ADCON0_CHS_POSN                                    0x2
#define _ADCON0_CHS_POSITION                                0x2
#define _ADCON0_CHS_SIZE                                    0x4
#define _ADCON0_CHS_LENGTH                                  0x4
#define _ADCON0_CHS_MASK                                    0x3C
#define _ADCON0_VCFG_POSN                                   0x6
#define _ADCON0_VCFG_POSITION                               0x6
#define _ADCON0_VCFG_SIZE                                   0x2
#define _ADCON0_VCFG_LENGTH                                 0x2
#define _ADCON0_VCFG_MASK                                   0xC0
#define _ADCON0_GO_DONE_POSN                                0x1
#define _ADCON0_GO_DONE_POSITION                            0x1
#define _ADCON0_GO_DONE_SIZE                                0x1
#define _ADCON0_GO_DONE_LENGTH                              0x1
#define _ADCON0_GO_DONE_MASK                                0x2
#define _ADCON0_CHS0_POSN                                   0x2
#define _ADCON0_CHS0_POSITION                               0x2
#define _ADCON0_CHS0_SIZE                                   0x1
#define _ADCON0_CHS0_LENGTH                                 0x1
#define _ADCON0_CHS0_MASK                                   0x4
#define _ADCON0_CHS1_POSN                                   0x3
#define _ADCON0_CHS1_POSITION                               0x3
#define _ADCON0_CHS1_SIZE                                   0x1
#define _ADCON0_CHS1_LENGTH                                 0x1
#define _ADCON0_CHS1_MASK                                   0x8
#define _ADCON0_CHS2_POSN                                   0x4
#define _ADCON0_CHS2_POSITION                               0x4
#define _ADCON0_CHS2_SIZE                                   0x1
#define _ADCON0_CHS2_LENGTH                                 0x1
#define _ADCON0_CHS2_MASK                                   0x10
#define _ADCON0_CHS3_POSN                                   0x5
#define _ADCON0_CHS3_POSITION                               0x5
#define _ADCON0_CHS3_SIZE                                   0x1
#define _ADCON0_CHS3_LENGTH                                 0x1
#define _ADCON0_CHS3_MASK                                   0x20
#define _ADCON0_VCFG0_POSN                                  0x6
#define _ADCON0_VCFG0_POSITION                              0x6
#define _ADCON0_VCFG0_SIZE                                  0x1
#define _ADCON0_VCFG0_LENGTH                                0x1
#define _ADCON0_VCFG0_MASK                                  0x40
#define _ADCON0_VCFG1_POSN                                  0x7
#define _ADCON0_VCFG1_POSITION                              0x7
#define _ADCON0_VCFG1_SIZE                                  0x1
#define _ADCON0_VCFG1_LENGTH                                0x1
#define _ADCON0_VCFG1_MASK                                  0x80
#define _ADCON0_DONE_POSN                                   0x1
#define _ADCON0_DONE_POSITION                               0x1
#define _ADCON0_DONE_SIZE                                   0x1
#define _ADCON0_DONE_LENGTH                                 0x1
#define _ADCON0_DONE_MASK                                   0x2
#define _ADCON0_GO_POSN                                     0x1
#define _ADCON0_GO_POSITION                                 0x1
#define _ADCON0_GO_SIZE                                     0x1
#define _ADCON0_GO_LENGTH                                   0x1
#define _ADCON0_GO_MASK                                     0x2
#define _ADCON0_NOT_DONE_POSN                               0x1
#define _ADCON0_NOT_DONE_POSITION                           0x1
#define _ADCON0_NOT_DONE_SIZE                               0x1
#define _ADCON0_NOT_DONE_LENGTH                             0x1
#define _ADCON0_NOT_DONE_MASK                               0x2
#define _ADCON0_nDONE_POSN                                  0x1
#define _ADCON0_nDONE_POSITION                              0x1
#define _ADCON0_nDONE_SIZE                                  0x1
#define _ADCON0_nDONE_LENGTH                                0x1
#define _ADCON0_nDONE_MASK                                  0x2
#define _ADCON0_ADCAL_POSN                                  0x7
#define _ADCON0_ADCAL_POSITION                              0x7
#define _ADCON0_ADCAL_SIZE                                  0x1
#define _ADCON0_ADCAL_LENGTH                                0x1
#define _ADCON0_ADCAL_MASK                                  0x80
#define _ADCON0_GODONE_POSN                                 0x1
#define _ADCON0_GODONE_POSITION                             0x1
#define _ADCON0_GODONE_SIZE                                 0x1
#define _ADCON0_GODONE_LENGTH                               0x1
#define _ADCON0_GODONE_MASK                                 0x2

// Register: ADRES
extern volatile unsigned short          ADRES               @ 0xFC3;
#ifndef _LIB_BUILD
asm("ADRES equ 0FC3h");
#endif

// Register: ADRESL
extern volatile unsigned char           ADRESL              @ 0xFC3;
#ifndef _LIB_BUILD
asm("ADRESL equ 0FC3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESL                 :8;
    };
} ADRESLbits_t;
extern volatile ADRESLbits_t ADRESLbits @ 0xFC3;
// bitfield macros
#define _ADRESL_ADRESL_POSN                                 0x0
#define _ADRESL_ADRESL_POSITION                             0x0
#define _ADRESL_ADRESL_SIZE                                 0x8
#define _ADRESL_ADRESL_LENGTH                               0x8
#define _ADRESL_ADRESL_MASK                                 0xFF

// Register: ADRESH
extern volatile unsigned char           ADRESH              @ 0xFC4;
#ifndef _LIB_BUILD
asm("ADRESH equ 0FC4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned ADRESH                 :8;
    };
} ADRESHbits_t;
extern volatile ADRESHbits_t ADRESHbits @ 0xFC4;
// bitfield macros
#define _ADRESH_ADRESH_POSN                                 0x0
#define _ADRESH_ADRESH_POSITION                             0x0
#define _ADRESH_ADRESH_SIZE                                 0x8
#define _ADRESH_ADRESH_LENGTH                               0x8
#define _ADRESH_ADRESH_MASK                                 0xFF

// Register: SSP1CON2
extern volatile unsigned char           SSP1CON2            @ 0xFC5;
#ifndef _LIB_BUILD
asm("SSP1CON2 equ 0FC5h");
#endif
// aliases
extern volatile unsigned char           SSPCON2             @ 0xFC5;
#ifndef _LIB_BUILD
asm("SSPCON2 equ 0FC5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned ACKDT1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned ACKEN1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned ACKSTAT1               :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK11                :1;
    };
    struct {
        unsigned                        :2;
        unsigned ADMSK21                :1;
    };
    struct {
        unsigned                        :3;
        unsigned ADMSK31                :1;
    };
    struct {
        unsigned                        :4;
        unsigned ADMSK41                :1;
    };
    struct {
        unsigned                        :5;
        unsigned ADMSK51                :1;
    };
    struct {
        unsigned                        :7;
        unsigned GCEN1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned PEN1                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned RCEN1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN1                  :1;
    };
    struct {
        unsigned SEN1                   :1;
    };
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits @ 0xFC5;
// bitfield macros
#define _SSP1CON2_SEN_POSN                                  0x0
#define _SSP1CON2_SEN_POSITION                              0x0
#define _SSP1CON2_SEN_SIZE                                  0x1
#define _SSP1CON2_SEN_LENGTH                                0x1
#define _SSP1CON2_SEN_MASK                                  0x1
#define _SSP1CON2_RSEN_POSN                                 0x1
#define _SSP1CON2_RSEN_POSITION                             0x1
#define _SSP1CON2_RSEN_SIZE                                 0x1
#define _SSP1CON2_RSEN_LENGTH                               0x1
#define _SSP1CON2_RSEN_MASK                                 0x2
#define _SSP1CON2_PEN_POSN                                  0x2
#define _SSP1CON2_PEN_POSITION                              0x2
#define _SSP1CON2_PEN_SIZE                                  0x1
#define _SSP1CON2_PEN_LENGTH                                0x1
#define _SSP1CON2_PEN_MASK                                  0x4
#define _SSP1CON2_RCEN_POSN                                 0x3
#define _SSP1CON2_RCEN_POSITION                             0x3
#define _SSP1CON2_RCEN_SIZE                                 0x1
#define _SSP1CON2_RCEN_LENGTH                               0x1
#define _SSP1CON2_RCEN_MASK                                 0x8
#define _SSP1CON2_ACKEN_POSN                                0x4
#define _SSP1CON2_ACKEN_POSITION                            0x4
#define _SSP1CON2_ACKEN_SIZE                                0x1
#define _SSP1CON2_ACKEN_LENGTH                              0x1
#define _SSP1CON2_ACKEN_MASK                                0x10
#define _SSP1CON2_ACKDT_POSN                                0x5
#define _SSP1CON2_ACKDT_POSITION                            0x5
#define _SSP1CON2_ACKDT_SIZE                                0x1
#define _SSP1CON2_ACKDT_LENGTH                              0x1
#define _SSP1CON2_ACKDT_MASK                                0x20
#define _SSP1CON2_ACKSTAT_POSN                              0x6
#define _SSP1CON2_ACKSTAT_POSITION                          0x6
#define _SSP1CON2_ACKSTAT_SIZE                              0x1
#define _SSP1CON2_ACKSTAT_LENGTH                            0x1
#define _SSP1CON2_ACKSTAT_MASK                              0x40
#define _SSP1CON2_GCEN_POSN                                 0x7
#define _SSP1CON2_GCEN_POSITION                             0x7
#define _SSP1CON2_GCEN_SIZE                                 0x1
#define _SSP1CON2_GCEN_LENGTH                               0x1
#define _SSP1CON2_GCEN_MASK                                 0x80
#define _SSP1CON2_ADMSK1_POSN                               0x1
#define _SSP1CON2_ADMSK1_POSITION                           0x1
#define _SSP1CON2_ADMSK1_SIZE                               0x1
#define _SSP1CON2_ADMSK1_LENGTH                             0x1
#define _SSP1CON2_ADMSK1_MASK                               0x2
#define _SSP1CON2_ADMSK2_POSN                               0x2
#define _SSP1CON2_ADMSK2_POSITION                           0x2
#define _SSP1CON2_ADMSK2_SIZE                               0x1
#define _SSP1CON2_ADMSK2_LENGTH                             0x1
#define _SSP1CON2_ADMSK2_MASK                               0x4
#define _SSP1CON2_ADMSK3_POSN                               0x3
#define _SSP1CON2_ADMSK3_POSITION                           0x3
#define _SSP1CON2_ADMSK3_SIZE                               0x1
#define _SSP1CON2_ADMSK3_LENGTH                             0x1
#define _SSP1CON2_ADMSK3_MASK                               0x8
#define _SSP1CON2_ADMSK4_POSN                               0x4
#define _SSP1CON2_ADMSK4_POSITION                           0x4
#define _SSP1CON2_ADMSK4_SIZE                               0x1
#define _SSP1CON2_ADMSK4_LENGTH                             0x1
#define _SSP1CON2_ADMSK4_MASK                               0x10
#define _SSP1CON2_ADMSK5_POSN                               0x5
#define _SSP1CON2_ADMSK5_POSITION                           0x5
#define _SSP1CON2_ADMSK5_SIZE                               0x1
#define _SSP1CON2_ADMSK5_LENGTH                             0x1
#define _SSP1CON2_ADMSK5_MASK                               0x20
#define _SSP1CON2_ACKDT1_POSN                               0x5
#define _SSP1CON2_ACKDT1_POSITION                           0x5
#define _SSP1CON2_ACKDT1_SIZE                               0x1
#define _SSP1CON2_ACKDT1_LENGTH                             0x1
#define _SSP1CON2_ACKDT1_MASK                               0x20
#define _SSP1CON2_ACKEN1_POSN                               0x4
#define _SSP1CON2_ACKEN1_POSITION                           0x4
#define _SSP1CON2_ACKEN1_SIZE                               0x1
#define _SSP1CON2_ACKEN1_LENGTH                             0x1
#define _SSP1CON2_ACKEN1_MASK                               0x10
#define _SSP1CON2_ACKSTAT1_POSN                             0x6
#define _SSP1CON2_ACKSTAT1_POSITION                         0x6
#define _SSP1CON2_ACKSTAT1_SIZE                             0x1
#define _SSP1CON2_ACKSTAT1_LENGTH                           0x1
#define _SSP1CON2_ACKSTAT1_MASK                             0x40
#define _SSP1CON2_ADMSK11_POSN                              0x1
#define _SSP1CON2_ADMSK11_POSITION                          0x1
#define _SSP1CON2_ADMSK11_SIZE                              0x1
#define _SSP1CON2_ADMSK11_LENGTH                            0x1
#define _SSP1CON2_ADMSK11_MASK                              0x2
#define _SSP1CON2_ADMSK21_POSN                              0x2
#define _SSP1CON2_ADMSK21_POSITION                          0x2
#define _SSP1CON2_ADMSK21_SIZE                              0x1
#define _SSP1CON2_ADMSK21_LENGTH                            0x1
#define _SSP1CON2_ADMSK21_MASK                              0x4
#define _SSP1CON2_ADMSK31_POSN                              0x3
#define _SSP1CON2_ADMSK31_POSITION                          0x3
#define _SSP1CON2_ADMSK31_SIZE                              0x1
#define _SSP1CON2_ADMSK31_LENGTH                            0x1
#define _SSP1CON2_ADMSK31_MASK                              0x8
#define _SSP1CON2_ADMSK41_POSN                              0x4
#define _SSP1CON2_ADMSK41_POSITION                          0x4
#define _SSP1CON2_ADMSK41_SIZE                              0x1
#define _SSP1CON2_ADMSK41_LENGTH                            0x1
#define _SSP1CON2_ADMSK41_MASK                              0x10
#define _SSP1CON2_ADMSK51_POSN                              0x5
#define _SSP1CON2_ADMSK51_POSITION                          0x5
#define _SSP1CON2_ADMSK51_SIZE                              0x1
#define _SSP1CON2_ADMSK51_LENGTH                            0x1
#define _SSP1CON2_ADMSK51_MASK                              0x20
#define _SSP1CON2_GCEN1_POSN                                0x7
#define _SSP1CON2_GCEN1_POSITION                            0x7
#define _SSP1CON2_GCEN1_SIZE                                0x1
#define _SSP1CON2_GCEN1_LENGTH                              0x1
#define _SSP1CON2_GCEN1_MASK                                0x80
#define _SSP1CON2_PEN1_POSN                                 0x2
#define _SSP1CON2_PEN1_POSITION                             0x2
#define _SSP1CON2_PEN1_SIZE                                 0x1
#define _SSP1CON2_PEN1_LENGTH                               0x1
#define _SSP1CON2_PEN1_MASK                                 0x4
#define _SSP1CON2_RCEN1_POSN                                0x3
#define _SSP1CON2_RCEN1_POSITION                            0x3
#define _SSP1CON2_RCEN1_SIZE                                0x1
#define _SSP1CON2_RCEN1_LENGTH                              0x1
#define _SSP1CON2_RCEN1_MASK                                0x8
#define _SSP1CON2_RSEN1_POSN                                0x1
#define _SSP1CON2_RSEN1_POSITION                            0x1
#define _SSP1CON2_RSEN1_SIZE                                0x1
#define _SSP1CON2_RSEN1_LENGTH                              0x1
#define _SSP1CON2_RSEN1_MASK                                0x2
#define _SSP1CON2_SEN1_POSN                                 0x0
#define _SSP1CON2_SEN1_POSITION                             0x0
#define _SSP1CON2_SEN1_SIZE                                 0x1
#define _SSP1CON2_SEN1_LENGTH                               0x1
#define _SSP1CON2_SEN1_MASK                                 0x1
// alias bitfield definitions
typedef union {
    struct {
        unsigned SEN                    :1;
        unsigned RSEN                   :1;
        unsigned PEN                    :1;
        unsigned RCEN                   :1;
        unsigned ACKEN                  :1;
        unsigned ACKDT                  :1;
        unsigned ACKSTAT                :1;
        unsigned GCEN                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK1                 :1;
        unsigned ADMSK2                 :1;
        unsigned ADMSK3                 :1;
        unsigned ADMSK4                 :1;
        unsigned ADMSK5                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned ACKDT1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned ACKEN1                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned ACKSTAT1               :1;
    };
    struct {
        unsigned                        :1;
        unsigned ADMSK11                :1;
    };
    struct {
        unsigned                        :2;
        unsigned ADMSK21                :1;
    };
    struct {
        unsigned                        :3;
        unsigned ADMSK31                :1;
    };
    struct {
        unsigned                        :4;
        unsigned ADMSK41                :1;
    };
    struct {
        unsigned                        :5;
        unsigned ADMSK51                :1;
    };
    struct {
        unsigned                        :7;
        unsigned GCEN1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned PEN1                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned RCEN1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned RSEN1                  :1;
    };
    struct {
        unsigned SEN1                   :1;
    };
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits @ 0xFC5;
// bitfield macros
#define _SSPCON2_SEN_POSN                                   0x0
#define _SSPCON2_SEN_POSITION                               0x0
#define _SSPCON2_SEN_SIZE                                   0x1
#define _SSPCON2_SEN_LENGTH                                 0x1
#define _SSPCON2_SEN_MASK                                   0x1
#define _SSPCON2_RSEN_POSN                                  0x1
#define _SSPCON2_RSEN_POSITION                              0x1
#define _SSPCON2_RSEN_SIZE                                  0x1
#define _SSPCON2_RSEN_LENGTH                                0x1
#define _SSPCON2_RSEN_MASK                                  0x2
#define _SSPCON2_PEN_POSN                                   0x2
#define _SSPCON2_PEN_POSITION                               0x2
#define _SSPCON2_PEN_SIZE                                   0x1
#define _SSPCON2_PEN_LENGTH                                 0x1
#define _SSPCON2_PEN_MASK                                   0x4
#define _SSPCON2_RCEN_POSN                                  0x3
#define _SSPCON2_RCEN_POSITION                              0x3
#define _SSPCON2_RCEN_SIZE                                  0x1
#define _SSPCON2_RCEN_LENGTH                                0x1
#define _SSPCON2_RCEN_MASK                                  0x8
#define _SSPCON2_ACKEN_POSN                                 0x4
#define _SSPCON2_ACKEN_POSITION                             0x4
#define _SSPCON2_ACKEN_SIZE                                 0x1
#define _SSPCON2_ACKEN_LENGTH                               0x1
#define _SSPCON2_ACKEN_MASK                                 0x10
#define _SSPCON2_ACKDT_POSN                                 0x5
#define _SSPCON2_ACKDT_POSITION                             0x5
#define _SSPCON2_ACKDT_SIZE                                 0x1
#define _SSPCON2_ACKDT_LENGTH                               0x1
#define _SSPCON2_ACKDT_MASK                                 0x20
#define _SSPCON2_ACKSTAT_POSN                               0x6
#define _SSPCON2_ACKSTAT_POSITION                           0x6
#define _SSPCON2_ACKSTAT_SIZE                               0x1
#define _SSPCON2_ACKSTAT_LENGTH                             0x1
#define _SSPCON2_ACKSTAT_MASK                               0x40
#define _SSPCON2_GCEN_POSN                                  0x7
#define _SSPCON2_GCEN_POSITION                              0x7
#define _SSPCON2_GCEN_SIZE                                  0x1
#define _SSPCON2_GCEN_LENGTH                                0x1
#define _SSPCON2_GCEN_MASK                                  0x80
#define _SSPCON2_ADMSK1_POSN                                0x1
#define _SSPCON2_ADMSK1_POSITION                            0x1
#define _SSPCON2_ADMSK1_SIZE                                0x1
#define _SSPCON2_ADMSK1_LENGTH                              0x1
#define _SSPCON2_ADMSK1_MASK                                0x2
#define _SSPCON2_ADMSK2_POSN                                0x2
#define _SSPCON2_ADMSK2_POSITION                            0x2
#define _SSPCON2_ADMSK2_SIZE                                0x1
#define _SSPCON2_ADMSK2_LENGTH                              0x1
#define _SSPCON2_ADMSK2_MASK                                0x4
#define _SSPCON2_ADMSK3_POSN                                0x3
#define _SSPCON2_ADMSK3_POSITION                            0x3
#define _SSPCON2_ADMSK3_SIZE                                0x1
#define _SSPCON2_ADMSK3_LENGTH                              0x1
#define _SSPCON2_ADMSK3_MASK                                0x8
#define _SSPCON2_ADMSK4_POSN                                0x4
#define _SSPCON2_ADMSK4_POSITION                            0x4
#define _SSPCON2_ADMSK4_SIZE                                0x1
#define _SSPCON2_ADMSK4_LENGTH                              0x1
#define _SSPCON2_ADMSK4_MASK                                0x10
#define _SSPCON2_ADMSK5_POSN                                0x5
#define _SSPCON2_ADMSK5_POSITION                            0x5
#define _SSPCON2_ADMSK5_SIZE                                0x1
#define _SSPCON2_ADMSK5_LENGTH                              0x1
#define _SSPCON2_ADMSK5_MASK                                0x20
#define _SSPCON2_ACKDT1_POSN                                0x5
#define _SSPCON2_ACKDT1_POSITION                            0x5
#define _SSPCON2_ACKDT1_SIZE                                0x1
#define _SSPCON2_ACKDT1_LENGTH                              0x1
#define _SSPCON2_ACKDT1_MASK                                0x20
#define _SSPCON2_ACKEN1_POSN                                0x4
#define _SSPCON2_ACKEN1_POSITION                            0x4
#define _SSPCON2_ACKEN1_SIZE                                0x1
#define _SSPCON2_ACKEN1_LENGTH                              0x1
#define _SSPCON2_ACKEN1_MASK                                0x10
#define _SSPCON2_ACKSTAT1_POSN                              0x6
#define _SSPCON2_ACKSTAT1_POSITION                          0x6
#define _SSPCON2_ACKSTAT1_SIZE                              0x1
#define _SSPCON2_ACKSTAT1_LENGTH                            0x1
#define _SSPCON2_ACKSTAT1_MASK                              0x40
#define _SSPCON2_ADMSK11_POSN                               0x1
#define _SSPCON2_ADMSK11_POSITION                           0x1
#define _SSPCON2_ADMSK11_SIZE                               0x1
#define _SSPCON2_ADMSK11_LENGTH                             0x1
#define _SSPCON2_ADMSK11_MASK                               0x2
#define _SSPCON2_ADMSK21_POSN                               0x2
#define _SSPCON2_ADMSK21_POSITION                           0x2
#define _SSPCON2_ADMSK21_SIZE                               0x1
#define _SSPCON2_ADMSK21_LENGTH                             0x1
#define _SSPCON2_ADMSK21_MASK                               0x4
#define _SSPCON2_ADMSK31_POSN                               0x3
#define _SSPCON2_ADMSK31_POSITION                           0x3
#define _SSPCON2_ADMSK31_SIZE                               0x1
#define _SSPCON2_ADMSK31_LENGTH                             0x1
#define _SSPCON2_ADMSK31_MASK                               0x8
#define _SSPCON2_ADMSK41_POSN                               0x4
#define _SSPCON2_ADMSK41_POSITION                           0x4
#define _SSPCON2_ADMSK41_SIZE                               0x1
#define _SSPCON2_ADMSK41_LENGTH                             0x1
#define _SSPCON2_ADMSK41_MASK                               0x10
#define _SSPCON2_ADMSK51_POSN                               0x5
#define _SSPCON2_ADMSK51_POSITION                           0x5
#define _SSPCON2_ADMSK51_SIZE                               0x1
#define _SSPCON2_ADMSK51_LENGTH                             0x1
#define _SSPCON2_ADMSK51_MASK                               0x20
#define _SSPCON2_GCEN1_POSN                                 0x7
#define _SSPCON2_GCEN1_POSITION                             0x7
#define _SSPCON2_GCEN1_SIZE                                 0x1
#define _SSPCON2_GCEN1_LENGTH                               0x1
#define _SSPCON2_GCEN1_MASK                                 0x80
#define _SSPCON2_PEN1_POSN                                  0x2
#define _SSPCON2_PEN1_POSITION                              0x2
#define _SSPCON2_PEN1_SIZE                                  0x1
#define _SSPCON2_PEN1_LENGTH                                0x1
#define _SSPCON2_PEN1_MASK                                  0x4
#define _SSPCON2_RCEN1_POSN                                 0x3
#define _SSPCON2_RCEN1_POSITION                             0x3
#define _SSPCON2_RCEN1_SIZE                                 0x1
#define _SSPCON2_RCEN1_LENGTH                               0x1
#define _SSPCON2_RCEN1_MASK                                 0x8
#define _SSPCON2_RSEN1_POSN                                 0x1
#define _SSPCON2_RSEN1_POSITION                             0x1
#define _SSPCON2_RSEN1_SIZE                                 0x1
#define _SSPCON2_RSEN1_LENGTH                               0x1
#define _SSPCON2_RSEN1_MASK                                 0x2
#define _SSPCON2_SEN1_POSN                                  0x0
#define _SSPCON2_SEN1_POSITION                              0x0
#define _SSPCON2_SEN1_SIZE                                  0x1
#define _SSPCON2_SEN1_LENGTH                                0x1
#define _SSPCON2_SEN1_MASK                                  0x1

// Register: SSP1CON1
extern volatile unsigned char           SSP1CON1            @ 0xFC6;
#ifndef _LIB_BUILD
asm("SSP1CON1 equ 0FC6h");
#endif
// aliases
extern volatile unsigned char           SSPCON1             @ 0xFC6;
#ifndef _LIB_BUILD
asm("SSPCON1 equ 0FC6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKP1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SSPEN1                 :1;
    };
    struct {
        unsigned SSPM01                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned SSPM11                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned SSPM21                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPM31                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned SSPOV1                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned WCOL1                  :1;
    };
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits @ 0xFC6;
// bitfield macros
#define _SSP1CON1_SSPM_POSN                                 0x0
#define _SSP1CON1_SSPM_POSITION                             0x0
#define _SSP1CON1_SSPM_SIZE                                 0x4
#define _SSP1CON1_SSPM_LENGTH                               0x4
#define _SSP1CON1_SSPM_MASK                                 0xF
#define _SSP1CON1_CKP_POSN                                  0x4
#define _SSP1CON1_CKP_POSITION                              0x4
#define _SSP1CON1_CKP_SIZE                                  0x1
#define _SSP1CON1_CKP_LENGTH                                0x1
#define _SSP1CON1_CKP_MASK                                  0x10
#define _SSP1CON1_SSPEN_POSN                                0x5
#define _SSP1CON1_SSPEN_POSITION                            0x5
#define _SSP1CON1_SSPEN_SIZE                                0x1
#define _SSP1CON1_SSPEN_LENGTH                              0x1
#define _SSP1CON1_SSPEN_MASK                                0x20
#define _SSP1CON1_SSPOV_POSN                                0x6
#define _SSP1CON1_SSPOV_POSITION                            0x6
#define _SSP1CON1_SSPOV_SIZE                                0x1
#define _SSP1CON1_SSPOV_LENGTH                              0x1
#define _SSP1CON1_SSPOV_MASK                                0x40
#define _SSP1CON1_WCOL_POSN                                 0x7
#define _SSP1CON1_WCOL_POSITION                             0x7
#define _SSP1CON1_WCOL_SIZE                                 0x1
#define _SSP1CON1_WCOL_LENGTH                               0x1
#define _SSP1CON1_WCOL_MASK                                 0x80
#define _SSP1CON1_SSPM0_POSN                                0x0
#define _SSP1CON1_SSPM0_POSITION                            0x0
#define _SSP1CON1_SSPM0_SIZE                                0x1
#define _SSP1CON1_SSPM0_LENGTH                              0x1
#define _SSP1CON1_SSPM0_MASK                                0x1
#define _SSP1CON1_SSPM1_POSN                                0x1
#define _SSP1CON1_SSPM1_POSITION                            0x1
#define _SSP1CON1_SSPM1_SIZE                                0x1
#define _SSP1CON1_SSPM1_LENGTH                              0x1
#define _SSP1CON1_SSPM1_MASK                                0x2
#define _SSP1CON1_SSPM2_POSN                                0x2
#define _SSP1CON1_SSPM2_POSITION                            0x2
#define _SSP1CON1_SSPM2_SIZE                                0x1
#define _SSP1CON1_SSPM2_LENGTH                              0x1
#define _SSP1CON1_SSPM2_MASK                                0x4
#define _SSP1CON1_SSPM3_POSN                                0x3
#define _SSP1CON1_SSPM3_POSITION                            0x3
#define _SSP1CON1_SSPM3_SIZE                                0x1
#define _SSP1CON1_SSPM3_LENGTH                              0x1
#define _SSP1CON1_SSPM3_MASK                                0x8
#define _SSP1CON1_CKP1_POSN                                 0x4
#define _SSP1CON1_CKP1_POSITION                             0x4
#define _SSP1CON1_CKP1_SIZE                                 0x1
#define _SSP1CON1_CKP1_LENGTH                               0x1
#define _SSP1CON1_CKP1_MASK                                 0x10
#define _SSP1CON1_SSPEN1_POSN                               0x5
#define _SSP1CON1_SSPEN1_POSITION                           0x5
#define _SSP1CON1_SSPEN1_SIZE                               0x1
#define _SSP1CON1_SSPEN1_LENGTH                             0x1
#define _SSP1CON1_SSPEN1_MASK                               0x20
#define _SSP1CON1_SSPM01_POSN                               0x0
#define _SSP1CON1_SSPM01_POSITION                           0x0
#define _SSP1CON1_SSPM01_SIZE                               0x1
#define _SSP1CON1_SSPM01_LENGTH                             0x1
#define _SSP1CON1_SSPM01_MASK                               0x1
#define _SSP1CON1_SSPM11_POSN                               0x1
#define _SSP1CON1_SSPM11_POSITION                           0x1
#define _SSP1CON1_SSPM11_SIZE                               0x1
#define _SSP1CON1_SSPM11_LENGTH                             0x1
#define _SSP1CON1_SSPM11_MASK                               0x2
#define _SSP1CON1_SSPM21_POSN                               0x2
#define _SSP1CON1_SSPM21_POSITION                           0x2
#define _SSP1CON1_SSPM21_SIZE                               0x1
#define _SSP1CON1_SSPM21_LENGTH                             0x1
#define _SSP1CON1_SSPM21_MASK                               0x4
#define _SSP1CON1_SSPM31_POSN                               0x3
#define _SSP1CON1_SSPM31_POSITION                           0x3
#define _SSP1CON1_SSPM31_SIZE                               0x1
#define _SSP1CON1_SSPM31_LENGTH                             0x1
#define _SSP1CON1_SSPM31_MASK                               0x8
#define _SSP1CON1_SSPOV1_POSN                               0x6
#define _SSP1CON1_SSPOV1_POSITION                           0x6
#define _SSP1CON1_SSPOV1_SIZE                               0x1
#define _SSP1CON1_SSPOV1_LENGTH                             0x1
#define _SSP1CON1_SSPOV1_MASK                               0x40
#define _SSP1CON1_WCOL1_POSN                                0x7
#define _SSP1CON1_WCOL1_POSITION                            0x7
#define _SSP1CON1_WCOL1_SIZE                                0x1
#define _SSP1CON1_WCOL1_LENGTH                              0x1
#define _SSP1CON1_WCOL1_MASK                                0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPM                   :4;
        unsigned CKP                    :1;
        unsigned SSPEN                  :1;
        unsigned SSPOV                  :1;
        unsigned WCOL                   :1;
    };
    struct {
        unsigned SSPM0                  :1;
        unsigned SSPM1                  :1;
        unsigned SSPM2                  :1;
        unsigned SSPM3                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned CKP1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned SSPEN1                 :1;
    };
    struct {
        unsigned SSPM01                 :1;
    };
    struct {
        unsigned                        :1;
        unsigned SSPM11                 :1;
    };
    struct {
        unsigned                        :2;
        unsigned SSPM21                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned SSPM31                 :1;
    };
    struct {
        unsigned                        :6;
        unsigned SSPOV1                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned WCOL1                  :1;
    };
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;
// bitfield macros
#define _SSPCON1_SSPM_POSN                                  0x0
#define _SSPCON1_SSPM_POSITION                              0x0
#define _SSPCON1_SSPM_SIZE                                  0x4
#define _SSPCON1_SSPM_LENGTH                                0x4
#define _SSPCON1_SSPM_MASK                                  0xF
#define _SSPCON1_CKP_POSN                                   0x4
#define _SSPCON1_CKP_POSITION                               0x4
#define _SSPCON1_CKP_SIZE                                   0x1
#define _SSPCON1_CKP_LENGTH                                 0x1
#define _SSPCON1_CKP_MASK                                   0x10
#define _SSPCON1_SSPEN_POSN                                 0x5
#define _SSPCON1_SSPEN_POSITION                             0x5
#define _SSPCON1_SSPEN_SIZE                                 0x1
#define _SSPCON1_SSPEN_LENGTH                               0x1
#define _SSPCON1_SSPEN_MASK                                 0x20
#define _SSPCON1_SSPOV_POSN                                 0x6
#define _SSPCON1_SSPOV_POSITION                             0x6
#define _SSPCON1_SSPOV_SIZE                                 0x1
#define _SSPCON1_SSPOV_LENGTH                               0x1
#define _SSPCON1_SSPOV_MASK                                 0x40
#define _SSPCON1_WCOL_POSN                                  0x7
#define _SSPCON1_WCOL_POSITION                              0x7
#define _SSPCON1_WCOL_SIZE                                  0x1
#define _SSPCON1_WCOL_LENGTH                                0x1
#define _SSPCON1_WCOL_MASK                                  0x80
#define _SSPCON1_SSPM0_POSN                                 0x0
#define _SSPCON1_SSPM0_POSITION                             0x0
#define _SSPCON1_SSPM0_SIZE                                 0x1
#define _SSPCON1_SSPM0_LENGTH                               0x1
#define _SSPCON1_SSPM0_MASK                                 0x1
#define _SSPCON1_SSPM1_POSN                                 0x1
#define _SSPCON1_SSPM1_POSITION                             0x1
#define _SSPCON1_SSPM1_SIZE                                 0x1
#define _SSPCON1_SSPM1_LENGTH                               0x1
#define _SSPCON1_SSPM1_MASK                                 0x2
#define _SSPCON1_SSPM2_POSN                                 0x2
#define _SSPCON1_SSPM2_POSITION                             0x2
#define _SSPCON1_SSPM2_SIZE                                 0x1
#define _SSPCON1_SSPM2_LENGTH                               0x1
#define _SSPCON1_SSPM2_MASK                                 0x4
#define _SSPCON1_SSPM3_POSN                                 0x3
#define _SSPCON1_SSPM3_POSITION                             0x3
#define _SSPCON1_SSPM3_SIZE                                 0x1
#define _SSPCON1_SSPM3_LENGTH                               0x1
#define _SSPCON1_SSPM3_MASK                                 0x8
#define _SSPCON1_CKP1_POSN                                  0x4
#define _SSPCON1_CKP1_POSITION                              0x4
#define _SSPCON1_CKP1_SIZE                                  0x1
#define _SSPCON1_CKP1_LENGTH                                0x1
#define _SSPCON1_CKP1_MASK                                  0x10
#define _SSPCON1_SSPEN1_POSN                                0x5
#define _SSPCON1_SSPEN1_POSITION                            0x5
#define _SSPCON1_SSPEN1_SIZE                                0x1
#define _SSPCON1_SSPEN1_LENGTH                              0x1
#define _SSPCON1_SSPEN1_MASK                                0x20
#define _SSPCON1_SSPM01_POSN                                0x0
#define _SSPCON1_SSPM01_POSITION                            0x0
#define _SSPCON1_SSPM01_SIZE                                0x1
#define _SSPCON1_SSPM01_LENGTH                              0x1
#define _SSPCON1_SSPM01_MASK                                0x1
#define _SSPCON1_SSPM11_POSN                                0x1
#define _SSPCON1_SSPM11_POSITION                            0x1
#define _SSPCON1_SSPM11_SIZE                                0x1
#define _SSPCON1_SSPM11_LENGTH                              0x1
#define _SSPCON1_SSPM11_MASK                                0x2
#define _SSPCON1_SSPM21_POSN                                0x2
#define _SSPCON1_SSPM21_POSITION                            0x2
#define _SSPCON1_SSPM21_SIZE                                0x1
#define _SSPCON1_SSPM21_LENGTH                              0x1
#define _SSPCON1_SSPM21_MASK                                0x4
#define _SSPCON1_SSPM31_POSN                                0x3
#define _SSPCON1_SSPM31_POSITION                            0x3
#define _SSPCON1_SSPM31_SIZE                                0x1
#define _SSPCON1_SSPM31_LENGTH                              0x1
#define _SSPCON1_SSPM31_MASK                                0x8
#define _SSPCON1_SSPOV1_POSN                                0x6
#define _SSPCON1_SSPOV1_POSITION                            0x6
#define _SSPCON1_SSPOV1_SIZE                                0x1
#define _SSPCON1_SSPOV1_LENGTH                              0x1
#define _SSPCON1_SSPOV1_MASK                                0x40
#define _SSPCON1_WCOL1_POSN                                 0x7
#define _SSPCON1_WCOL1_POSITION                             0x7
#define _SSPCON1_WCOL1_SIZE                                 0x1
#define _SSPCON1_WCOL1_LENGTH                               0x1
#define _SSPCON1_WCOL1_MASK                                 0x80

// Register: SSP1STAT
extern volatile unsigned char           SSP1STAT            @ 0xFC7;
#ifndef _LIB_BUILD
asm("SSP1STAT equ 0FC7h");
#endif
// aliases
extern volatile unsigned char           SSPSTAT             @ 0xFC7;
#ifndef _LIB_BUILD
asm("SSPSTAT equ 0FC7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned BF1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned CKE1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned DA                     :1;
    };
    struct {
        unsigned                        :5;
        unsigned DA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW1                    :1;
    };
    struct {
        unsigned                        :7;
        unsigned SMP1                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned START                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned START1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned STOP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned STOP1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned UA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_A                  :1;
    };
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits @ 0xFC7;
// bitfield macros
#define _SSP1STAT_R_NOT_W_POSN                              0x2
#define _SSP1STAT_R_NOT_W_POSITION                          0x2
#define _SSP1STAT_R_NOT_W_SIZE                              0x1
#define _SSP1STAT_R_NOT_W_LENGTH                            0x1
#define _SSP1STAT_R_NOT_W_MASK                              0x4
#define _SSP1STAT_D_NOT_A_POSN                              0x5
#define _SSP1STAT_D_NOT_A_POSITION                          0x5
#define _SSP1STAT_D_NOT_A_SIZE                              0x1
#define _SSP1STAT_D_NOT_A_LENGTH                            0x1
#define _SSP1STAT_D_NOT_A_MASK                              0x20
#define _SSP1STAT_BF_POSN                                   0x0
#define _SSP1STAT_BF_POSITION                               0x0
#define _SSP1STAT_BF_SIZE                                   0x1
#define _SSP1STAT_BF_LENGTH                                 0x1
#define _SSP1STAT_BF_MASK                                   0x1
#define _SSP1STAT_UA_POSN                                   0x1
#define _SSP1STAT_UA_POSITION                               0x1
#define _SSP1STAT_UA_SIZE                                   0x1
#define _SSP1STAT_UA_LENGTH                                 0x1
#define _SSP1STAT_UA_MASK                                   0x2
#define _SSP1STAT_R_nW_POSN                                 0x2
#define _SSP1STAT_R_nW_POSITION                             0x2
#define _SSP1STAT_R_nW_SIZE                                 0x1
#define _SSP1STAT_R_nW_LENGTH                               0x1
#define _SSP1STAT_R_nW_MASK                                 0x4
#define _SSP1STAT_S_POSN                                    0x3
#define _SSP1STAT_S_POSITION                                0x3
#define _SSP1STAT_S_SIZE                                    0x1
#define _SSP1STAT_S_LENGTH                                  0x1
#define _SSP1STAT_S_MASK                                    0x8
#define _SSP1STAT_P_POSN                                    0x4
#define _SSP1STAT_P_POSITION                                0x4
#define _SSP1STAT_P_SIZE                                    0x1
#define _SSP1STAT_P_LENGTH                                  0x1
#define _SSP1STAT_P_MASK                                    0x10
#define _SSP1STAT_D_nA_POSN                                 0x5
#define _SSP1STAT_D_nA_POSITION                             0x5
#define _SSP1STAT_D_nA_SIZE                                 0x1
#define _SSP1STAT_D_nA_LENGTH                               0x1
#define _SSP1STAT_D_nA_MASK                                 0x20
#define _SSP1STAT_CKE_POSN                                  0x6
#define _SSP1STAT_CKE_POSITION                              0x6
#define _SSP1STAT_CKE_SIZE                                  0x1
#define _SSP1STAT_CKE_LENGTH                                0x1
#define _SSP1STAT_CKE_MASK                                  0x40
#define _SSP1STAT_SMP_POSN                                  0x7
#define _SSP1STAT_SMP_POSITION                              0x7
#define _SSP1STAT_SMP_SIZE                                  0x1
#define _SSP1STAT_SMP_LENGTH                                0x1
#define _SSP1STAT_SMP_MASK                                  0x80
#define _SSP1STAT_R_POSN                                    0x2
#define _SSP1STAT_R_POSITION                                0x2
#define _SSP1STAT_R_SIZE                                    0x1
#define _SSP1STAT_R_LENGTH                                  0x1
#define _SSP1STAT_R_MASK                                    0x4
#define _SSP1STAT_D_POSN                                    0x5
#define _SSP1STAT_D_POSITION                                0x5
#define _SSP1STAT_D_SIZE                                    0x1
#define _SSP1STAT_D_LENGTH                                  0x1
#define _SSP1STAT_D_MASK                                    0x20
#define _SSP1STAT_R_W_POSN                                  0x2
#define _SSP1STAT_R_W_POSITION                              0x2
#define _SSP1STAT_R_W_SIZE                                  0x1
#define _SSP1STAT_R_W_LENGTH                                0x1
#define _SSP1STAT_R_W_MASK                                  0x4
#define _SSP1STAT_D_A_POSN                                  0x5
#define _SSP1STAT_D_A_POSITION                              0x5
#define _SSP1STAT_D_A_SIZE                                  0x1
#define _SSP1STAT_D_A_LENGTH                                0x1
#define _SSP1STAT_D_A_MASK                                  0x20
#define _SSP1STAT_nW_POSN                                   0x2
#define _SSP1STAT_nW_POSITION                               0x2
#define _SSP1STAT_nW_SIZE                                   0x1
#define _SSP1STAT_nW_LENGTH                                 0x1
#define _SSP1STAT_nW_MASK                                   0x4
#define _SSP1STAT_nA_POSN                                   0x5
#define _SSP1STAT_nA_POSITION                               0x5
#define _SSP1STAT_nA_SIZE                                   0x1
#define _SSP1STAT_nA_LENGTH                                 0x1
#define _SSP1STAT_nA_MASK                                   0x20
#define _SSP1STAT_NOT_WRITE_POSN                            0x2
#define _SSP1STAT_NOT_WRITE_POSITION                        0x2
#define _SSP1STAT_NOT_WRITE_SIZE                            0x1
#define _SSP1STAT_NOT_WRITE_LENGTH                          0x1
#define _SSP1STAT_NOT_WRITE_MASK                            0x4
#define _SSP1STAT_NOT_ADDRESS_POSN                          0x5
#define _SSP1STAT_NOT_ADDRESS_POSITION                      0x5
#define _SSP1STAT_NOT_ADDRESS_SIZE                          0x1
#define _SSP1STAT_NOT_ADDRESS_LENGTH                        0x1
#define _SSP1STAT_NOT_ADDRESS_MASK                          0x20
#define _SSP1STAT_nWRITE_POSN                               0x2
#define _SSP1STAT_nWRITE_POSITION                           0x2
#define _SSP1STAT_nWRITE_SIZE                               0x1
#define _SSP1STAT_nWRITE_LENGTH                             0x1
#define _SSP1STAT_nWRITE_MASK                               0x4
#define _SSP1STAT_nADDRESS_POSN                             0x5
#define _SSP1STAT_nADDRESS_POSITION                         0x5
#define _SSP1STAT_nADDRESS_SIZE                             0x1
#define _SSP1STAT_nADDRESS_LENGTH                           0x1
#define _SSP1STAT_nADDRESS_MASK                             0x20
#define _SSP1STAT_READ_WRITE_POSN                           0x2
#define _SSP1STAT_READ_WRITE_POSITION                       0x2
#define _SSP1STAT_READ_WRITE_SIZE                           0x1
#define _SSP1STAT_READ_WRITE_LENGTH                         0x1
#define _SSP1STAT_READ_WRITE_MASK                           0x4
#define _SSP1STAT_DATA_ADDRESS_POSN                         0x5
#define _SSP1STAT_DATA_ADDRESS_POSITION                     0x5
#define _SSP1STAT_DATA_ADDRESS_SIZE                         0x1
#define _SSP1STAT_DATA_ADDRESS_LENGTH                       0x1
#define _SSP1STAT_DATA_ADDRESS_MASK                         0x20
#define _SSP1STAT_I2C_READ_POSN                             0x2
#define _SSP1STAT_I2C_READ_POSITION                         0x2
#define _SSP1STAT_I2C_READ_SIZE                             0x1
#define _SSP1STAT_I2C_READ_LENGTH                           0x1
#define _SSP1STAT_I2C_READ_MASK                             0x4
#define _SSP1STAT_I2C_START_POSN                            0x3
#define _SSP1STAT_I2C_START_POSITION                        0x3
#define _SSP1STAT_I2C_START_SIZE                            0x1
#define _SSP1STAT_I2C_START_LENGTH                          0x1
#define _SSP1STAT_I2C_START_MASK                            0x8
#define _SSP1STAT_I2C_STOP_POSN                             0x4
#define _SSP1STAT_I2C_STOP_POSITION                         0x4
#define _SSP1STAT_I2C_STOP_SIZE                             0x1
#define _SSP1STAT_I2C_STOP_LENGTH                           0x1
#define _SSP1STAT_I2C_STOP_MASK                             0x10
#define _SSP1STAT_I2C_DAT_POSN                              0x5
#define _SSP1STAT_I2C_DAT_POSITION                          0x5
#define _SSP1STAT_I2C_DAT_SIZE                              0x1
#define _SSP1STAT_I2C_DAT_LENGTH                            0x1
#define _SSP1STAT_I2C_DAT_MASK                              0x20
#define _SSP1STAT_BF1_POSN                                  0x0
#define _SSP1STAT_BF1_POSITION                              0x0
#define _SSP1STAT_BF1_SIZE                                  0x1
#define _SSP1STAT_BF1_LENGTH                                0x1
#define _SSP1STAT_BF1_MASK                                  0x1
#define _SSP1STAT_CKE1_POSN                                 0x6
#define _SSP1STAT_CKE1_POSITION                             0x6
#define _SSP1STAT_CKE1_SIZE                                 0x1
#define _SSP1STAT_CKE1_LENGTH                               0x1
#define _SSP1STAT_CKE1_MASK                                 0x40
#define _SSP1STAT_DA_POSN                                   0x5
#define _SSP1STAT_DA_POSITION                               0x5
#define _SSP1STAT_DA_SIZE                                   0x1
#define _SSP1STAT_DA_LENGTH                                 0x1
#define _SSP1STAT_DA_MASK                                   0x20
#define _SSP1STAT_DA1_POSN                                  0x5
#define _SSP1STAT_DA1_POSITION                              0x5
#define _SSP1STAT_DA1_SIZE                                  0x1
#define _SSP1STAT_DA1_LENGTH                                0x1
#define _SSP1STAT_DA1_MASK                                  0x20
#define _SSP1STAT_RW_POSN                                   0x2
#define _SSP1STAT_RW_POSITION                               0x2
#define _SSP1STAT_RW_SIZE                                   0x1
#define _SSP1STAT_RW_LENGTH                                 0x1
#define _SSP1STAT_RW_MASK                                   0x4
#define _SSP1STAT_RW1_POSN                                  0x2
#define _SSP1STAT_RW1_POSITION                              0x2
#define _SSP1STAT_RW1_SIZE                                  0x1
#define _SSP1STAT_RW1_LENGTH                                0x1
#define _SSP1STAT_RW1_MASK                                  0x4
#define _SSP1STAT_SMP1_POSN                                 0x7
#define _SSP1STAT_SMP1_POSITION                             0x7
#define _SSP1STAT_SMP1_SIZE                                 0x1
#define _SSP1STAT_SMP1_LENGTH                               0x1
#define _SSP1STAT_SMP1_MASK                                 0x80
#define _SSP1STAT_START_POSN                                0x3
#define _SSP1STAT_START_POSITION                            0x3
#define _SSP1STAT_START_SIZE                                0x1
#define _SSP1STAT_START_LENGTH                              0x1
#define _SSP1STAT_START_MASK                                0x8
#define _SSP1STAT_START1_POSN                               0x3
#define _SSP1STAT_START1_POSITION                           0x3
#define _SSP1STAT_START1_SIZE                               0x1
#define _SSP1STAT_START1_LENGTH                             0x1
#define _SSP1STAT_START1_MASK                               0x8
#define _SSP1STAT_STOP_POSN                                 0x4
#define _SSP1STAT_STOP_POSITION                             0x4
#define _SSP1STAT_STOP_SIZE                                 0x1
#define _SSP1STAT_STOP_LENGTH                               0x1
#define _SSP1STAT_STOP_MASK                                 0x10
#define _SSP1STAT_STOP1_POSN                                0x4
#define _SSP1STAT_STOP1_POSITION                            0x4
#define _SSP1STAT_STOP1_SIZE                                0x1
#define _SSP1STAT_STOP1_LENGTH                              0x1
#define _SSP1STAT_STOP1_MASK                                0x10
#define _SSP1STAT_UA1_POSN                                  0x1
#define _SSP1STAT_UA1_POSITION                              0x1
#define _SSP1STAT_UA1_SIZE                                  0x1
#define _SSP1STAT_UA1_LENGTH                                0x1
#define _SSP1STAT_UA1_MASK                                  0x2
#define _SSP1STAT_NOT_W_POSN                                0x2
#define _SSP1STAT_NOT_W_POSITION                            0x2
#define _SSP1STAT_NOT_W_SIZE                                0x1
#define _SSP1STAT_NOT_W_LENGTH                              0x1
#define _SSP1STAT_NOT_W_MASK                                0x4
#define _SSP1STAT_NOT_A_POSN                                0x5
#define _SSP1STAT_NOT_A_POSITION                            0x5
#define _SSP1STAT_NOT_A_SIZE                                0x1
#define _SSP1STAT_NOT_A_LENGTH                              0x1
#define _SSP1STAT_NOT_A_MASK                                0x20
// alias bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned R_NOT_W                :1;
    };
    struct {
        unsigned                        :5;
        unsigned D_NOT_A                :1;
    };
    struct {
        unsigned BF                     :1;
        unsigned UA                     :1;
        unsigned R_nW                   :1;
        unsigned S                      :1;
        unsigned P                      :1;
        unsigned D_nA                   :1;
        unsigned CKE                    :1;
        unsigned SMP                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned R                      :1;
        unsigned                        :2;
        unsigned D                      :1;
    };
    struct {
        unsigned                        :2;
        unsigned R_W                    :1;
        unsigned                        :2;
        unsigned D_A                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned nW                     :1;
        unsigned                        :2;
        unsigned nA                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_WRITE              :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_ADDRESS            :1;
    };
    struct {
        unsigned                        :2;
        unsigned nWRITE                 :1;
        unsigned                        :2;
        unsigned nADDRESS               :1;
    };
    struct {
        unsigned                        :2;
        unsigned READ_WRITE             :1;
        unsigned                        :2;
        unsigned DATA_ADDRESS           :1;
    };
    struct {
        unsigned                        :2;
        unsigned I2C_READ               :1;
        unsigned I2C_START              :1;
        unsigned I2C_STOP               :1;
        unsigned I2C_DAT                :1;
    };
    struct {
        unsigned BF1                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned CKE1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned DA                     :1;
    };
    struct {
        unsigned                        :5;
        unsigned DA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW                     :1;
    };
    struct {
        unsigned                        :2;
        unsigned RW1                    :1;
    };
    struct {
        unsigned                        :7;
        unsigned SMP1                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned START                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned START1                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned STOP                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned STOP1                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned UA1                    :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_W                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_A                  :1;
    };
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;
// bitfield macros
#define _SSPSTAT_R_NOT_W_POSN                               0x2
#define _SSPSTAT_R_NOT_W_POSITION                           0x2
#define _SSPSTAT_R_NOT_W_SIZE                               0x1
#define _SSPSTAT_R_NOT_W_LENGTH                             0x1
#define _SSPSTAT_R_NOT_W_MASK                               0x4
#define _SSPSTAT_D_NOT_A_POSN                               0x5
#define _SSPSTAT_D_NOT_A_POSITION                           0x5
#define _SSPSTAT_D_NOT_A_SIZE                               0x1
#define _SSPSTAT_D_NOT_A_LENGTH                             0x1
#define _SSPSTAT_D_NOT_A_MASK                               0x20
#define _SSPSTAT_BF_POSN                                    0x0
#define _SSPSTAT_BF_POSITION                                0x0
#define _SSPSTAT_BF_SIZE                                    0x1
#define _SSPSTAT_BF_LENGTH                                  0x1
#define _SSPSTAT_BF_MASK                                    0x1
#define _SSPSTAT_UA_POSN                                    0x1
#define _SSPSTAT_UA_POSITION                                0x1
#define _SSPSTAT_UA_SIZE                                    0x1
#define _SSPSTAT_UA_LENGTH                                  0x1
#define _SSPSTAT_UA_MASK                                    0x2
#define _SSPSTAT_R_nW_POSN                                  0x2
#define _SSPSTAT_R_nW_POSITION                              0x2
#define _SSPSTAT_R_nW_SIZE                                  0x1
#define _SSPSTAT_R_nW_LENGTH                                0x1
#define _SSPSTAT_R_nW_MASK                                  0x4
#define _SSPSTAT_S_POSN                                     0x3
#define _SSPSTAT_S_POSITION                                 0x3
#define _SSPSTAT_S_SIZE                                     0x1
#define _SSPSTAT_S_LENGTH                                   0x1
#define _SSPSTAT_S_MASK                                     0x8
#define _SSPSTAT_P_POSN                                     0x4
#define _SSPSTAT_P_POSITION                                 0x4
#define _SSPSTAT_P_SIZE                                     0x1
#define _SSPSTAT_P_LENGTH                                   0x1
#define _SSPSTAT_P_MASK                                     0x10
#define _SSPSTAT_D_nA_POSN                                  0x5
#define _SSPSTAT_D_nA_POSITION                              0x5
#define _SSPSTAT_D_nA_SIZE                                  0x1
#define _SSPSTAT_D_nA_LENGTH                                0x1
#define _SSPSTAT_D_nA_MASK                                  0x20
#define _SSPSTAT_CKE_POSN                                   0x6
#define _SSPSTAT_CKE_POSITION                               0x6
#define _SSPSTAT_CKE_SIZE                                   0x1
#define _SSPSTAT_CKE_LENGTH                                 0x1
#define _SSPSTAT_CKE_MASK                                   0x40
#define _SSPSTAT_SMP_POSN                                   0x7
#define _SSPSTAT_SMP_POSITION                               0x7
#define _SSPSTAT_SMP_SIZE                                   0x1
#define _SSPSTAT_SMP_LENGTH                                 0x1
#define _SSPSTAT_SMP_MASK                                   0x80
#define _SSPSTAT_R_POSN                                     0x2
#define _SSPSTAT_R_POSITION                                 0x2
#define _SSPSTAT_R_SIZE                                     0x1
#define _SSPSTAT_R_LENGTH                                   0x1
#define _SSPSTAT_R_MASK                                     0x4
#define _SSPSTAT_D_POSN                                     0x5
#define _SSPSTAT_D_POSITION                                 0x5
#define _SSPSTAT_D_SIZE                                     0x1
#define _SSPSTAT_D_LENGTH                                   0x1
#define _SSPSTAT_D_MASK                                     0x20
#define _SSPSTAT_R_W_POSN                                   0x2
#define _SSPSTAT_R_W_POSITION                               0x2
#define _SSPSTAT_R_W_SIZE                                   0x1
#define _SSPSTAT_R_W_LENGTH                                 0x1
#define _SSPSTAT_R_W_MASK                                   0x4
#define _SSPSTAT_D_A_POSN                                   0x5
#define _SSPSTAT_D_A_POSITION                               0x5
#define _SSPSTAT_D_A_SIZE                                   0x1
#define _SSPSTAT_D_A_LENGTH                                 0x1
#define _SSPSTAT_D_A_MASK                                   0x20
#define _SSPSTAT_nW_POSN                                    0x2
#define _SSPSTAT_nW_POSITION                                0x2
#define _SSPSTAT_nW_SIZE                                    0x1
#define _SSPSTAT_nW_LENGTH                                  0x1
#define _SSPSTAT_nW_MASK                                    0x4
#define _SSPSTAT_nA_POSN                                    0x5
#define _SSPSTAT_nA_POSITION                                0x5
#define _SSPSTAT_nA_SIZE                                    0x1
#define _SSPSTAT_nA_LENGTH                                  0x1
#define _SSPSTAT_nA_MASK                                    0x20
#define _SSPSTAT_NOT_WRITE_POSN                             0x2
#define _SSPSTAT_NOT_WRITE_POSITION                         0x2
#define _SSPSTAT_NOT_WRITE_SIZE                             0x1
#define _SSPSTAT_NOT_WRITE_LENGTH                           0x1
#define _SSPSTAT_NOT_WRITE_MASK                             0x4
#define _SSPSTAT_NOT_ADDRESS_POSN                           0x5
#define _SSPSTAT_NOT_ADDRESS_POSITION                       0x5
#define _SSPSTAT_NOT_ADDRESS_SIZE                           0x1
#define _SSPSTAT_NOT_ADDRESS_LENGTH                         0x1
#define _SSPSTAT_NOT_ADDRESS_MASK                           0x20
#define _SSPSTAT_nWRITE_POSN                                0x2
#define _SSPSTAT_nWRITE_POSITION                            0x2
#define _SSPSTAT_nWRITE_SIZE                                0x1
#define _SSPSTAT_nWRITE_LENGTH                              0x1
#define _SSPSTAT_nWRITE_MASK                                0x4
#define _SSPSTAT_nADDRESS_POSN                              0x5
#define _SSPSTAT_nADDRESS_POSITION                          0x5
#define _SSPSTAT_nADDRESS_SIZE                              0x1
#define _SSPSTAT_nADDRESS_LENGTH                            0x1
#define _SSPSTAT_nADDRESS_MASK                              0x20
#define _SSPSTAT_READ_WRITE_POSN                            0x2
#define _SSPSTAT_READ_WRITE_POSITION                        0x2
#define _SSPSTAT_READ_WRITE_SIZE                            0x1
#define _SSPSTAT_READ_WRITE_LENGTH                          0x1
#define _SSPSTAT_READ_WRITE_MASK                            0x4
#define _SSPSTAT_DATA_ADDRESS_POSN                          0x5
#define _SSPSTAT_DATA_ADDRESS_POSITION                      0x5
#define _SSPSTAT_DATA_ADDRESS_SIZE                          0x1
#define _SSPSTAT_DATA_ADDRESS_LENGTH                        0x1
#define _SSPSTAT_DATA_ADDRESS_MASK                          0x20
#define _SSPSTAT_I2C_READ_POSN                              0x2
#define _SSPSTAT_I2C_READ_POSITION                          0x2
#define _SSPSTAT_I2C_READ_SIZE                              0x1
#define _SSPSTAT_I2C_READ_LENGTH                            0x1
#define _SSPSTAT_I2C_READ_MASK                              0x4
#define _SSPSTAT_I2C_START_POSN                             0x3
#define _SSPSTAT_I2C_START_POSITION                         0x3
#define _SSPSTAT_I2C_START_SIZE                             0x1
#define _SSPSTAT_I2C_START_LENGTH                           0x1
#define _SSPSTAT_I2C_START_MASK                             0x8
#define _SSPSTAT_I2C_STOP_POSN                              0x4
#define _SSPSTAT_I2C_STOP_POSITION                          0x4
#define _SSPSTAT_I2C_STOP_SIZE                              0x1
#define _SSPSTAT_I2C_STOP_LENGTH                            0x1
#define _SSPSTAT_I2C_STOP_MASK                              0x10
#define _SSPSTAT_I2C_DAT_POSN                               0x5
#define _SSPSTAT_I2C_DAT_POSITION                           0x5
#define _SSPSTAT_I2C_DAT_SIZE                               0x1
#define _SSPSTAT_I2C_DAT_LENGTH                             0x1
#define _SSPSTAT_I2C_DAT_MASK                               0x20
#define _SSPSTAT_BF1_POSN                                   0x0
#define _SSPSTAT_BF1_POSITION                               0x0
#define _SSPSTAT_BF1_SIZE                                   0x1
#define _SSPSTAT_BF1_LENGTH                                 0x1
#define _SSPSTAT_BF1_MASK                                   0x1
#define _SSPSTAT_CKE1_POSN                                  0x6
#define _SSPSTAT_CKE1_POSITION                              0x6
#define _SSPSTAT_CKE1_SIZE                                  0x1
#define _SSPSTAT_CKE1_LENGTH                                0x1
#define _SSPSTAT_CKE1_MASK                                  0x40
#define _SSPSTAT_DA_POSN                                    0x5
#define _SSPSTAT_DA_POSITION                                0x5
#define _SSPSTAT_DA_SIZE                                    0x1
#define _SSPSTAT_DA_LENGTH                                  0x1
#define _SSPSTAT_DA_MASK                                    0x20
#define _SSPSTAT_DA1_POSN                                   0x5
#define _SSPSTAT_DA1_POSITION                               0x5
#define _SSPSTAT_DA1_SIZE                                   0x1
#define _SSPSTAT_DA1_LENGTH                                 0x1
#define _SSPSTAT_DA1_MASK                                   0x20
#define _SSPSTAT_RW_POSN                                    0x2
#define _SSPSTAT_RW_POSITION                                0x2
#define _SSPSTAT_RW_SIZE                                    0x1
#define _SSPSTAT_RW_LENGTH                                  0x1
#define _SSPSTAT_RW_MASK                                    0x4
#define _SSPSTAT_RW1_POSN                                   0x2
#define _SSPSTAT_RW1_POSITION                               0x2
#define _SSPSTAT_RW1_SIZE                                   0x1
#define _SSPSTAT_RW1_LENGTH                                 0x1
#define _SSPSTAT_RW1_MASK                                   0x4
#define _SSPSTAT_SMP1_POSN                                  0x7
#define _SSPSTAT_SMP1_POSITION                              0x7
#define _SSPSTAT_SMP1_SIZE                                  0x1
#define _SSPSTAT_SMP1_LENGTH                                0x1
#define _SSPSTAT_SMP1_MASK                                  0x80
#define _SSPSTAT_START_POSN                                 0x3
#define _SSPSTAT_START_POSITION                             0x3
#define _SSPSTAT_START_SIZE                                 0x1
#define _SSPSTAT_START_LENGTH                               0x1
#define _SSPSTAT_START_MASK                                 0x8
#define _SSPSTAT_START1_POSN                                0x3
#define _SSPSTAT_START1_POSITION                            0x3
#define _SSPSTAT_START1_SIZE                                0x1
#define _SSPSTAT_START1_LENGTH                              0x1
#define _SSPSTAT_START1_MASK                                0x8
#define _SSPSTAT_STOP_POSN                                  0x4
#define _SSPSTAT_STOP_POSITION                              0x4
#define _SSPSTAT_STOP_SIZE                                  0x1
#define _SSPSTAT_STOP_LENGTH                                0x1
#define _SSPSTAT_STOP_MASK                                  0x10
#define _SSPSTAT_STOP1_POSN                                 0x4
#define _SSPSTAT_STOP1_POSITION                             0x4
#define _SSPSTAT_STOP1_SIZE                                 0x1
#define _SSPSTAT_STOP1_LENGTH                               0x1
#define _SSPSTAT_STOP1_MASK                                 0x10
#define _SSPSTAT_UA1_POSN                                   0x1
#define _SSPSTAT_UA1_POSITION                               0x1
#define _SSPSTAT_UA1_SIZE                                   0x1
#define _SSPSTAT_UA1_LENGTH                                 0x1
#define _SSPSTAT_UA1_MASK                                   0x2
#define _SSPSTAT_NOT_W_POSN                                 0x2
#define _SSPSTAT_NOT_W_POSITION                             0x2
#define _SSPSTAT_NOT_W_SIZE                                 0x1
#define _SSPSTAT_NOT_W_LENGTH                               0x1
#define _SSPSTAT_NOT_W_MASK                                 0x4
#define _SSPSTAT_NOT_A_POSN                                 0x5
#define _SSPSTAT_NOT_A_POSITION                             0x5
#define _SSPSTAT_NOT_A_SIZE                                 0x1
#define _SSPSTAT_NOT_A_LENGTH                               0x1
#define _SSPSTAT_NOT_A_MASK                                 0x20

// Register: SSP1ADD
extern volatile unsigned char           SSP1ADD             @ 0xFC8;
#ifndef _LIB_BUILD
asm("SSP1ADD equ 0FC8h");
#endif
// aliases
extern volatile unsigned char           SSPADD              @ 0xFC8;
#ifndef _LIB_BUILD
asm("SSPADD equ 0FC8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPADD                 :8;
    };
    struct {
        unsigned MSK0                   :1;
    };
    struct {
        unsigned MSK01                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned MSK1                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned MSK11                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned MSK2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned MSK21                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned MSK3                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned MSK31                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned MSK4                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned MSK41                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned MSK5                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned MSK51                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned MSK6                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned MSK61                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned MSK71                  :1;
    };
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits @ 0xFC8;
// bitfield macros
#define _SSP1ADD_SSPADD_POSN                                0x0
#define _SSP1ADD_SSPADD_POSITION                            0x0
#define _SSP1ADD_SSPADD_SIZE                                0x8
#define _SSP1ADD_SSPADD_LENGTH                              0x8
#define _SSP1ADD_SSPADD_MASK                                0xFF
#define _SSP1ADD_MSK0_POSN                                  0x0
#define _SSP1ADD_MSK0_POSITION                              0x0
#define _SSP1ADD_MSK0_SIZE                                  0x1
#define _SSP1ADD_MSK0_LENGTH                                0x1
#define _SSP1ADD_MSK0_MASK                                  0x1
#define _SSP1ADD_MSK01_POSN                                 0x0
#define _SSP1ADD_MSK01_POSITION                             0x0
#define _SSP1ADD_MSK01_SIZE                                 0x1
#define _SSP1ADD_MSK01_LENGTH                               0x1
#define _SSP1ADD_MSK01_MASK                                 0x1
#define _SSP1ADD_MSK1_POSN                                  0x1
#define _SSP1ADD_MSK1_POSITION                              0x1
#define _SSP1ADD_MSK1_SIZE                                  0x1
#define _SSP1ADD_MSK1_LENGTH                                0x1
#define _SSP1ADD_MSK1_MASK                                  0x2
#define _SSP1ADD_MSK11_POSN                                 0x1
#define _SSP1ADD_MSK11_POSITION                             0x1
#define _SSP1ADD_MSK11_SIZE                                 0x1
#define _SSP1ADD_MSK11_LENGTH                               0x1
#define _SSP1ADD_MSK11_MASK                                 0x2
#define _SSP1ADD_MSK2_POSN                                  0x2
#define _SSP1ADD_MSK2_POSITION                              0x2
#define _SSP1ADD_MSK2_SIZE                                  0x1
#define _SSP1ADD_MSK2_LENGTH                                0x1
#define _SSP1ADD_MSK2_MASK                                  0x4
#define _SSP1ADD_MSK21_POSN                                 0x2
#define _SSP1ADD_MSK21_POSITION                             0x2
#define _SSP1ADD_MSK21_SIZE                                 0x1
#define _SSP1ADD_MSK21_LENGTH                               0x1
#define _SSP1ADD_MSK21_MASK                                 0x4
#define _SSP1ADD_MSK3_POSN                                  0x3
#define _SSP1ADD_MSK3_POSITION                              0x3
#define _SSP1ADD_MSK3_SIZE                                  0x1
#define _SSP1ADD_MSK3_LENGTH                                0x1
#define _SSP1ADD_MSK3_MASK                                  0x8
#define _SSP1ADD_MSK31_POSN                                 0x3
#define _SSP1ADD_MSK31_POSITION                             0x3
#define _SSP1ADD_MSK31_SIZE                                 0x1
#define _SSP1ADD_MSK31_LENGTH                               0x1
#define _SSP1ADD_MSK31_MASK                                 0x8
#define _SSP1ADD_MSK4_POSN                                  0x4
#define _SSP1ADD_MSK4_POSITION                              0x4
#define _SSP1ADD_MSK4_SIZE                                  0x1
#define _SSP1ADD_MSK4_LENGTH                                0x1
#define _SSP1ADD_MSK4_MASK                                  0x10
#define _SSP1ADD_MSK41_POSN                                 0x4
#define _SSP1ADD_MSK41_POSITION                             0x4
#define _SSP1ADD_MSK41_SIZE                                 0x1
#define _SSP1ADD_MSK41_LENGTH                               0x1
#define _SSP1ADD_MSK41_MASK                                 0x10
#define _SSP1ADD_MSK5_POSN                                  0x5
#define _SSP1ADD_MSK5_POSITION                              0x5
#define _SSP1ADD_MSK5_SIZE                                  0x1
#define _SSP1ADD_MSK5_LENGTH                                0x1
#define _SSP1ADD_MSK5_MASK                                  0x20
#define _SSP1ADD_MSK51_POSN                                 0x5
#define _SSP1ADD_MSK51_POSITION                             0x5
#define _SSP1ADD_MSK51_SIZE                                 0x1
#define _SSP1ADD_MSK51_LENGTH                               0x1
#define _SSP1ADD_MSK51_MASK                                 0x20
#define _SSP1ADD_MSK6_POSN                                  0x6
#define _SSP1ADD_MSK6_POSITION                              0x6
#define _SSP1ADD_MSK6_SIZE                                  0x1
#define _SSP1ADD_MSK6_LENGTH                                0x1
#define _SSP1ADD_MSK6_MASK                                  0x40
#define _SSP1ADD_MSK61_POSN                                 0x6
#define _SSP1ADD_MSK61_POSITION                             0x6
#define _SSP1ADD_MSK61_SIZE                                 0x1
#define _SSP1ADD_MSK61_LENGTH                               0x1
#define _SSP1ADD_MSK61_MASK                                 0x40
#define _SSP1ADD_MSK7_POSN                                  0x7
#define _SSP1ADD_MSK7_POSITION                              0x7
#define _SSP1ADD_MSK7_SIZE                                  0x1
#define _SSP1ADD_MSK7_LENGTH                                0x1
#define _SSP1ADD_MSK7_MASK                                  0x80
#define _SSP1ADD_MSK71_POSN                                 0x7
#define _SSP1ADD_MSK71_POSITION                             0x7
#define _SSP1ADD_MSK71_SIZE                                 0x1
#define _SSP1ADD_MSK71_LENGTH                               0x1
#define _SSP1ADD_MSK71_MASK                                 0x80
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPADD                 :8;
    };
    struct {
        unsigned MSK0                   :1;
    };
    struct {
        unsigned MSK01                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned MSK1                   :1;
    };
    struct {
        unsigned                        :1;
        unsigned MSK11                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned MSK2                   :1;
    };
    struct {
        unsigned                        :2;
        unsigned MSK21                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned MSK3                   :1;
    };
    struct {
        unsigned                        :3;
        unsigned MSK31                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned MSK4                   :1;
    };
    struct {
        unsigned                        :4;
        unsigned MSK41                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned MSK5                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned MSK51                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned MSK6                   :1;
    };
    struct {
        unsigned                        :6;
        unsigned MSK61                  :1;
    };
    struct {
        unsigned                        :7;
        unsigned MSK7                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned MSK71                  :1;
    };
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits @ 0xFC8;
// bitfield macros
#define _SSPADD_SSPADD_POSN                                 0x0
#define _SSPADD_SSPADD_POSITION                             0x0
#define _SSPADD_SSPADD_SIZE                                 0x8
#define _SSPADD_SSPADD_LENGTH                               0x8
#define _SSPADD_SSPADD_MASK                                 0xFF
#define _SSPADD_MSK0_POSN                                   0x0
#define _SSPADD_MSK0_POSITION                               0x0
#define _SSPADD_MSK0_SIZE                                   0x1
#define _SSPADD_MSK0_LENGTH                                 0x1
#define _SSPADD_MSK0_MASK                                   0x1
#define _SSPADD_MSK01_POSN                                  0x0
#define _SSPADD_MSK01_POSITION                              0x0
#define _SSPADD_MSK01_SIZE                                  0x1
#define _SSPADD_MSK01_LENGTH                                0x1
#define _SSPADD_MSK01_MASK                                  0x1
#define _SSPADD_MSK1_POSN                                   0x1
#define _SSPADD_MSK1_POSITION                               0x1
#define _SSPADD_MSK1_SIZE                                   0x1
#define _SSPADD_MSK1_LENGTH                                 0x1
#define _SSPADD_MSK1_MASK                                   0x2
#define _SSPADD_MSK11_POSN                                  0x1
#define _SSPADD_MSK11_POSITION                              0x1
#define _SSPADD_MSK11_SIZE                                  0x1
#define _SSPADD_MSK11_LENGTH                                0x1
#define _SSPADD_MSK11_MASK                                  0x2
#define _SSPADD_MSK2_POSN                                   0x2
#define _SSPADD_MSK2_POSITION                               0x2
#define _SSPADD_MSK2_SIZE                                   0x1
#define _SSPADD_MSK2_LENGTH                                 0x1
#define _SSPADD_MSK2_MASK                                   0x4
#define _SSPADD_MSK21_POSN                                  0x2
#define _SSPADD_MSK21_POSITION                              0x2
#define _SSPADD_MSK21_SIZE                                  0x1
#define _SSPADD_MSK21_LENGTH                                0x1
#define _SSPADD_MSK21_MASK                                  0x4
#define _SSPADD_MSK3_POSN                                   0x3
#define _SSPADD_MSK3_POSITION                               0x3
#define _SSPADD_MSK3_SIZE                                   0x1
#define _SSPADD_MSK3_LENGTH                                 0x1
#define _SSPADD_MSK3_MASK                                   0x8
#define _SSPADD_MSK31_POSN                                  0x3
#define _SSPADD_MSK31_POSITION                              0x3
#define _SSPADD_MSK31_SIZE                                  0x1
#define _SSPADD_MSK31_LENGTH                                0x1
#define _SSPADD_MSK31_MASK                                  0x8
#define _SSPADD_MSK4_POSN                                   0x4
#define _SSPADD_MSK4_POSITION                               0x4
#define _SSPADD_MSK4_SIZE                                   0x1
#define _SSPADD_MSK4_LENGTH                                 0x1
#define _SSPADD_MSK4_MASK                                   0x10
#define _SSPADD_MSK41_POSN                                  0x4
#define _SSPADD_MSK41_POSITION                              0x4
#define _SSPADD_MSK41_SIZE                                  0x1
#define _SSPADD_MSK41_LENGTH                                0x1
#define _SSPADD_MSK41_MASK                                  0x10
#define _SSPADD_MSK5_POSN                                   0x5
#define _SSPADD_MSK5_POSITION                               0x5
#define _SSPADD_MSK5_SIZE                                   0x1
#define _SSPADD_MSK5_LENGTH                                 0x1
#define _SSPADD_MSK5_MASK                                   0x20
#define _SSPADD_MSK51_POSN                                  0x5
#define _SSPADD_MSK51_POSITION                              0x5
#define _SSPADD_MSK51_SIZE                                  0x1
#define _SSPADD_MSK51_LENGTH                                0x1
#define _SSPADD_MSK51_MASK                                  0x20
#define _SSPADD_MSK6_POSN                                   0x6
#define _SSPADD_MSK6_POSITION                               0x6
#define _SSPADD_MSK6_SIZE                                   0x1
#define _SSPADD_MSK6_LENGTH                                 0x1
#define _SSPADD_MSK6_MASK                                   0x40
#define _SSPADD_MSK61_POSN                                  0x6
#define _SSPADD_MSK61_POSITION                              0x6
#define _SSPADD_MSK61_SIZE                                  0x1
#define _SSPADD_MSK61_LENGTH                                0x1
#define _SSPADD_MSK61_MASK                                  0x40
#define _SSPADD_MSK7_POSN                                   0x7
#define _SSPADD_MSK7_POSITION                               0x7
#define _SSPADD_MSK7_SIZE                                   0x1
#define _SSPADD_MSK7_LENGTH                                 0x1
#define _SSPADD_MSK7_MASK                                   0x80
#define _SSPADD_MSK71_POSN                                  0x7
#define _SSPADD_MSK71_POSITION                              0x7
#define _SSPADD_MSK71_SIZE                                  0x1
#define _SSPADD_MSK71_LENGTH                                0x1
#define _SSPADD_MSK71_MASK                                  0x80

// Register: SSP1MSK
extern volatile unsigned char           SSP1MSK             @ 0xFC8;
#ifndef _LIB_BUILD
asm("SSP1MSK equ 0FC8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned MSK0                   :1;
        unsigned MSK1                   :1;
        unsigned MSK2                   :1;
        unsigned MSK3                   :1;
        unsigned MSK4                   :1;
        unsigned MSK5                   :1;
        unsigned MSK6                   :1;
        unsigned MSK7                   :1;
    };
} SSP1MSKbits_t;
extern volatile SSP1MSKbits_t SSP1MSKbits @ 0xFC8;
// bitfield macros
#define _SSP1MSK_MSK0_POSN                                  0x0
#define _SSP1MSK_MSK0_POSITION                              0x0
#define _SSP1MSK_MSK0_SIZE                                  0x1
#define _SSP1MSK_MSK0_LENGTH                                0x1
#define _SSP1MSK_MSK0_MASK                                  0x1
#define _SSP1MSK_MSK1_POSN                                  0x1
#define _SSP1MSK_MSK1_POSITION                              0x1
#define _SSP1MSK_MSK1_SIZE                                  0x1
#define _SSP1MSK_MSK1_LENGTH                                0x1
#define _SSP1MSK_MSK1_MASK                                  0x2
#define _SSP1MSK_MSK2_POSN                                  0x2
#define _SSP1MSK_MSK2_POSITION                              0x2
#define _SSP1MSK_MSK2_SIZE                                  0x1
#define _SSP1MSK_MSK2_LENGTH                                0x1
#define _SSP1MSK_MSK2_MASK                                  0x4
#define _SSP1MSK_MSK3_POSN                                  0x3
#define _SSP1MSK_MSK3_POSITION                              0x3
#define _SSP1MSK_MSK3_SIZE                                  0x1
#define _SSP1MSK_MSK3_LENGTH                                0x1
#define _SSP1MSK_MSK3_MASK                                  0x8
#define _SSP1MSK_MSK4_POSN                                  0x4
#define _SSP1MSK_MSK4_POSITION                              0x4
#define _SSP1MSK_MSK4_SIZE                                  0x1
#define _SSP1MSK_MSK4_LENGTH                                0x1
#define _SSP1MSK_MSK4_MASK                                  0x10
#define _SSP1MSK_MSK5_POSN                                  0x5
#define _SSP1MSK_MSK5_POSITION                              0x5
#define _SSP1MSK_MSK5_SIZE                                  0x1
#define _SSP1MSK_MSK5_LENGTH                                0x1
#define _SSP1MSK_MSK5_MASK                                  0x20
#define _SSP1MSK_MSK6_POSN                                  0x6
#define _SSP1MSK_MSK6_POSITION                              0x6
#define _SSP1MSK_MSK6_SIZE                                  0x1
#define _SSP1MSK_MSK6_LENGTH                                0x1
#define _SSP1MSK_MSK6_MASK                                  0x40
#define _SSP1MSK_MSK7_POSN                                  0x7
#define _SSP1MSK_MSK7_POSITION                              0x7
#define _SSP1MSK_MSK7_SIZE                                  0x1
#define _SSP1MSK_MSK7_LENGTH                                0x1
#define _SSP1MSK_MSK7_MASK                                  0x80

// Register: SSP1BUF
extern volatile unsigned char           SSP1BUF             @ 0xFC9;
#ifndef _LIB_BUILD
asm("SSP1BUF equ 0FC9h");
#endif
// aliases
extern volatile unsigned char           SSPBUF              @ 0xFC9;
#ifndef _LIB_BUILD
asm("SSPBUF equ 0FC9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SSPBUF                 :8;
    };
} SSP1BUFbits_t;
extern volatile SSP1BUFbits_t SSP1BUFbits @ 0xFC9;
// bitfield macros
#define _SSP1BUF_SSPBUF_POSN                                0x0
#define _SSP1BUF_SSPBUF_POSITION                            0x0
#define _SSP1BUF_SSPBUF_SIZE                                0x8
#define _SSP1BUF_SSPBUF_LENGTH                              0x8
#define _SSP1BUF_SSPBUF_MASK                                0xFF
// alias bitfield definitions
typedef union {
    struct {
        unsigned SSPBUF                 :8;
    };
} SSPBUFbits_t;
extern volatile SSPBUFbits_t SSPBUFbits @ 0xFC9;
// bitfield macros
#define _SSPBUF_SSPBUF_POSN                                 0x0
#define _SSPBUF_SSPBUF_POSITION                             0x0
#define _SSPBUF_SSPBUF_SIZE                                 0x8
#define _SSPBUF_SSPBUF_LENGTH                               0x8
#define _SSPBUF_SSPBUF_MASK                                 0xFF

// Register: T2CON
extern volatile unsigned char           T2CON               @ 0xFCA;
#ifndef _LIB_BUILD
asm("T2CON equ 0FCAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T2CKPS                 :2;
        unsigned TMR2ON                 :1;
        unsigned T2OUTPS                :4;
    };
    struct {
        unsigned T2CKPS0                :1;
        unsigned T2CKPS1                :1;
        unsigned                        :1;
        unsigned T2OUTPS0               :1;
        unsigned T2OUTPS1               :1;
        unsigned T2OUTPS2               :1;
        unsigned T2OUTPS3               :1;
    };
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0xFCA;
// bitfield macros
#define _T2CON_T2CKPS_POSN                                  0x0
#define _T2CON_T2CKPS_POSITION                              0x0
#define _T2CON_T2CKPS_SIZE                                  0x2
#define _T2CON_T2CKPS_LENGTH                                0x2
#define _T2CON_T2CKPS_MASK                                  0x3
#define _T2CON_TMR2ON_POSN                                  0x2
#define _T2CON_TMR2ON_POSITION                              0x2
#define _T2CON_TMR2ON_SIZE                                  0x1
#define _T2CON_TMR2ON_LENGTH                                0x1
#define _T2CON_TMR2ON_MASK                                  0x4
#define _T2CON_T2OUTPS_POSN                                 0x3
#define _T2CON_T2OUTPS_POSITION                             0x3
#define _T2CON_T2OUTPS_SIZE                                 0x4
#define _T2CON_T2OUTPS_LENGTH                               0x4
#define _T2CON_T2OUTPS_MASK                                 0x78
#define _T2CON_T2CKPS0_POSN                                 0x0
#define _T2CON_T2CKPS0_POSITION                             0x0
#define _T2CON_T2CKPS0_SIZE                                 0x1
#define _T2CON_T2CKPS0_LENGTH                               0x1
#define _T2CON_T2CKPS0_MASK                                 0x1
#define _T2CON_T2CKPS1_POSN                                 0x1
#define _T2CON_T2CKPS1_POSITION                             0x1
#define _T2CON_T2CKPS1_SIZE                                 0x1
#define _T2CON_T2CKPS1_LENGTH                               0x1
#define _T2CON_T2CKPS1_MASK                                 0x2
#define _T2CON_T2OUTPS0_POSN                                0x3
#define _T2CON_T2OUTPS0_POSITION                            0x3
#define _T2CON_T2OUTPS0_SIZE                                0x1
#define _T2CON_T2OUTPS0_LENGTH                              0x1
#define _T2CON_T2OUTPS0_MASK                                0x8
#define _T2CON_T2OUTPS1_POSN                                0x4
#define _T2CON_T2OUTPS1_POSITION                            0x4
#define _T2CON_T2OUTPS1_SIZE                                0x1
#define _T2CON_T2OUTPS1_LENGTH                              0x1
#define _T2CON_T2OUTPS1_MASK                                0x10
#define _T2CON_T2OUTPS2_POSN                                0x5
#define _T2CON_T2OUTPS2_POSITION                            0x5
#define _T2CON_T2OUTPS2_SIZE                                0x1
#define _T2CON_T2OUTPS2_LENGTH                              0x1
#define _T2CON_T2OUTPS2_MASK                                0x20
#define _T2CON_T2OUTPS3_POSN                                0x6
#define _T2CON_T2OUTPS3_POSITION                            0x6
#define _T2CON_T2OUTPS3_SIZE                                0x1
#define _T2CON_T2OUTPS3_LENGTH                              0x1
#define _T2CON_T2OUTPS3_MASK                                0x40

// Register: PR2
extern volatile unsigned char           PR2                 @ 0xFCB;
#ifndef _LIB_BUILD
asm("PR2 equ 0FCBh");
#endif
// aliases
extern volatile unsigned char           MEMCON              @ 0xFCB;
#ifndef _LIB_BUILD
asm("MEMCON equ 0FCBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PR2                    :8;
    };
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} PR2bits_t;
extern volatile PR2bits_t PR2bits @ 0xFCB;
// bitfield macros
#define _PR2_PR2_POSN                                       0x0
#define _PR2_PR2_POSITION                                   0x0
#define _PR2_PR2_SIZE                                       0x8
#define _PR2_PR2_LENGTH                                     0x8
#define _PR2_PR2_MASK                                       0xFF
#define _PR2_EBDIS_POSN                                     0x7
#define _PR2_EBDIS_POSITION                                 0x7
#define _PR2_EBDIS_SIZE                                     0x1
#define _PR2_EBDIS_LENGTH                                   0x1
#define _PR2_EBDIS_MASK                                     0x80
#define _PR2_WAIT0_POSN                                     0x4
#define _PR2_WAIT0_POSITION                                 0x4
#define _PR2_WAIT0_SIZE                                     0x1
#define _PR2_WAIT0_LENGTH                                   0x1
#define _PR2_WAIT0_MASK                                     0x10
#define _PR2_WAIT1_POSN                                     0x5
#define _PR2_WAIT1_POSITION                                 0x5
#define _PR2_WAIT1_SIZE                                     0x1
#define _PR2_WAIT1_LENGTH                                   0x1
#define _PR2_WAIT1_MASK                                     0x20
#define _PR2_WM0_POSN                                       0x0
#define _PR2_WM0_POSITION                                   0x0
#define _PR2_WM0_SIZE                                       0x1
#define _PR2_WM0_LENGTH                                     0x1
#define _PR2_WM0_MASK                                       0x1
#define _PR2_WM1_POSN                                       0x1
#define _PR2_WM1_POSITION                                   0x1
#define _PR2_WM1_SIZE                                       0x1
#define _PR2_WM1_LENGTH                                     0x1
#define _PR2_WM1_MASK                                       0x2
// alias bitfield definitions
typedef union {
    struct {
        unsigned PR2                    :8;
    };
    struct {
        unsigned                        :7;
        unsigned EBDIS                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned WAIT0                  :1;
    };
    struct {
        unsigned                        :5;
        unsigned WAIT1                  :1;
    };
    struct {
        unsigned WM0                    :1;
    };
    struct {
        unsigned                        :1;
        unsigned WM1                    :1;
    };
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits @ 0xFCB;
// bitfield macros
#define _MEMCON_PR2_POSN                                    0x0
#define _MEMCON_PR2_POSITION                                0x0
#define _MEMCON_PR2_SIZE                                    0x8
#define _MEMCON_PR2_LENGTH                                  0x8
#define _MEMCON_PR2_MASK                                    0xFF
#define _MEMCON_EBDIS_POSN                                  0x7
#define _MEMCON_EBDIS_POSITION                              0x7
#define _MEMCON_EBDIS_SIZE                                  0x1
#define _MEMCON_EBDIS_LENGTH                                0x1
#define _MEMCON_EBDIS_MASK                                  0x80
#define _MEMCON_WAIT0_POSN                                  0x4
#define _MEMCON_WAIT0_POSITION                              0x4
#define _MEMCON_WAIT0_SIZE                                  0x1
#define _MEMCON_WAIT0_LENGTH                                0x1
#define _MEMCON_WAIT0_MASK                                  0x10
#define _MEMCON_WAIT1_POSN                                  0x5
#define _MEMCON_WAIT1_POSITION                              0x5
#define _MEMCON_WAIT1_SIZE                                  0x1
#define _MEMCON_WAIT1_LENGTH                                0x1
#define _MEMCON_WAIT1_MASK                                  0x20
#define _MEMCON_WM0_POSN                                    0x0
#define _MEMCON_WM0_POSITION                                0x0
#define _MEMCON_WM0_SIZE                                    0x1
#define _MEMCON_WM0_LENGTH                                  0x1
#define _MEMCON_WM0_MASK                                    0x1
#define _MEMCON_WM1_POSN                                    0x1
#define _MEMCON_WM1_POSITION                                0x1
#define _MEMCON_WM1_SIZE                                    0x1
#define _MEMCON_WM1_LENGTH                                  0x1
#define _MEMCON_WM1_MASK                                    0x2

// Register: TMR2
extern volatile unsigned char           TMR2                @ 0xFCC;
#ifndef _LIB_BUILD
asm("TMR2 equ 0FCCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR2                   :8;
    };
} TMR2bits_t;
extern volatile TMR2bits_t TMR2bits @ 0xFCC;
// bitfield macros
#define _TMR2_TMR2_POSN                                     0x0
#define _TMR2_TMR2_POSITION                                 0x0
#define _TMR2_TMR2_SIZE                                     0x8
#define _TMR2_TMR2_LENGTH                                   0x8
#define _TMR2_TMR2_MASK                                     0xFF

// Register: T1CON
extern volatile unsigned char           T1CON               @ 0xFCD;
#ifndef _LIB_BUILD
asm("T1CON equ 0FCDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :2;
        unsigned NOT_T1SYNC             :1;
    };
    struct {
        unsigned TMR1ON                 :1;
        unsigned RD16                   :1;
        unsigned nT1SYNC                :1;
        unsigned T1OSCEN                :1;
        unsigned T1CKPS                 :2;
        unsigned TMR1CS                 :2;
    };
    struct {
        unsigned                        :4;
        unsigned T1CKPS0                :1;
        unsigned T1CKPS1                :1;
        unsigned TMR1CS0                :1;
        unsigned TMR1CS1                :1;
    };
    struct {
        unsigned                        :3;
        unsigned SOSCEN                 :1;
    };
    struct {
        unsigned                        :7;
        unsigned T1RD16                 :1;
    };
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0xFCD;
// bitfield macros
#define _T1CON_NOT_T1SYNC_POSN                              0x2
#define _T1CON_NOT_T1SYNC_POSITION                          0x2
#define _T1CON_NOT_T1SYNC_SIZE                              0x1
#define _T1CON_NOT_T1SYNC_LENGTH                            0x1
#define _T1CON_NOT_T1SYNC_MASK                              0x4
#define _T1CON_TMR1ON_POSN                                  0x0
#define _T1CON_TMR1ON_POSITION                              0x0
#define _T1CON_TMR1ON_SIZE                                  0x1
#define _T1CON_TMR1ON_LENGTH                                0x1
#define _T1CON_TMR1ON_MASK                                  0x1
#define _T1CON_RD16_POSN                                    0x1
#define _T1CON_RD16_POSITION                                0x1
#define _T1CON_RD16_SIZE                                    0x1
#define _T1CON_RD16_LENGTH                                  0x1
#define _T1CON_RD16_MASK                                    0x2
#define _T1CON_nT1SYNC_POSN                                 0x2
#define _T1CON_nT1SYNC_POSITION                             0x2
#define _T1CON_nT1SYNC_SIZE                                 0x1
#define _T1CON_nT1SYNC_LENGTH                               0x1
#define _T1CON_nT1SYNC_MASK                                 0x4
#define _T1CON_T1OSCEN_POSN                                 0x3
#define _T1CON_T1OSCEN_POSITION                             0x3
#define _T1CON_T1OSCEN_SIZE                                 0x1
#define _T1CON_T1OSCEN_LENGTH                               0x1
#define _T1CON_T1OSCEN_MASK                                 0x8
#define _T1CON_T1CKPS_POSN                                  0x4
#define _T1CON_T1CKPS_POSITION                              0x4
#define _T1CON_T1CKPS_SIZE                                  0x2
#define _T1CON_T1CKPS_LENGTH                                0x2
#define _T1CON_T1CKPS_MASK                                  0x30
#define _T1CON_TMR1CS_POSN                                  0x6
#define _T1CON_TMR1CS_POSITION                              0x6
#define _T1CON_TMR1CS_SIZE                                  0x2
#define _T1CON_TMR1CS_LENGTH                                0x2
#define _T1CON_TMR1CS_MASK                                  0xC0
#define _T1CON_T1CKPS0_POSN                                 0x4
#define _T1CON_T1CKPS0_POSITION                             0x4
#define _T1CON_T1CKPS0_SIZE                                 0x1
#define _T1CON_T1CKPS0_LENGTH                               0x1
#define _T1CON_T1CKPS0_MASK                                 0x10
#define _T1CON_T1CKPS1_POSN                                 0x5
#define _T1CON_T1CKPS1_POSITION                             0x5
#define _T1CON_T1CKPS1_SIZE                                 0x1
#define _T1CON_T1CKPS1_LENGTH                               0x1
#define _T1CON_T1CKPS1_MASK                                 0x20
#define _T1CON_TMR1CS0_POSN                                 0x6
#define _T1CON_TMR1CS0_POSITION                             0x6
#define _T1CON_TMR1CS0_SIZE                                 0x1
#define _T1CON_TMR1CS0_LENGTH                               0x1
#define _T1CON_TMR1CS0_MASK                                 0x40
#define _T1CON_TMR1CS1_POSN                                 0x7
#define _T1CON_TMR1CS1_POSITION                             0x7
#define _T1CON_TMR1CS1_SIZE                                 0x1
#define _T1CON_TMR1CS1_LENGTH                               0x1
#define _T1CON_TMR1CS1_MASK                                 0x80
#define _T1CON_SOSCEN_POSN                                  0x3
#define _T1CON_SOSCEN_POSITION                              0x3
#define _T1CON_SOSCEN_SIZE                                  0x1
#define _T1CON_SOSCEN_LENGTH                                0x1
#define _T1CON_SOSCEN_MASK                                  0x8
#define _T1CON_T1RD16_POSN                                  0x7
#define _T1CON_T1RD16_POSITION                              0x7
#define _T1CON_T1RD16_SIZE                                  0x1
#define _T1CON_T1RD16_LENGTH                                0x1
#define _T1CON_T1RD16_MASK                                  0x80

// Register: TMR1
extern volatile unsigned short          TMR1                @ 0xFCE;
#ifndef _LIB_BUILD
asm("TMR1 equ 0FCEh");
#endif

// Register: TMR1L
extern volatile unsigned char           TMR1L               @ 0xFCE;
#ifndef _LIB_BUILD
asm("TMR1L equ 0FCEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1L                  :8;
    };
} TMR1Lbits_t;
extern volatile TMR1Lbits_t TMR1Lbits @ 0xFCE;
// bitfield macros
#define _TMR1L_TMR1L_POSN                                   0x0
#define _TMR1L_TMR1L_POSITION                               0x0
#define _TMR1L_TMR1L_SIZE                                   0x8
#define _TMR1L_TMR1L_LENGTH                                 0x8
#define _TMR1L_TMR1L_MASK                                   0xFF

// Register: TMR1H
extern volatile unsigned char           TMR1H               @ 0xFCF;
#ifndef _LIB_BUILD
asm("TMR1H equ 0FCFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR1H                  :8;
    };
} TMR1Hbits_t;
extern volatile TMR1Hbits_t TMR1Hbits @ 0xFCF;
// bitfield macros
#define _TMR1H_TMR1H_POSN                                   0x0
#define _TMR1H_TMR1H_POSITION                               0x0
#define _TMR1H_TMR1H_SIZE                                   0x8
#define _TMR1H_TMR1H_LENGTH                                 0x8
#define _TMR1H_TMR1H_MASK                                   0xFF

// Register: RCON
extern volatile unsigned char           RCON                @ 0xFD0;
#ifndef _LIB_BUILD
asm("RCON equ 0FD0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned NOT_BOR                :1;
    };
    struct {
        unsigned                        :1;
        unsigned NOT_POR                :1;
    };
    struct {
        unsigned                        :2;
        unsigned NOT_PD                 :1;
    };
    struct {
        unsigned                        :3;
        unsigned NOT_TO                 :1;
    };
    struct {
        unsigned                        :4;
        unsigned NOT_RI                 :1;
    };
    struct {
        unsigned                        :5;
        unsigned NOT_CM                 :1;
    };
    struct {
        unsigned nBOR                   :1;
        unsigned nPOR                   :1;
        unsigned nPD                    :1;
        unsigned nTO                    :1;
        unsigned nRI                    :1;
        unsigned nCM                    :1;
        unsigned                        :1;
        unsigned IPEN                   :1;
    };
    struct {
        unsigned BOR                    :1;
        unsigned POR                    :1;
        unsigned PD                     :1;
        unsigned TO                     :1;
        unsigned RI                     :1;
        unsigned CM                     :1;
    };
} RCONbits_t;
extern volatile RCONbits_t RCONbits @ 0xFD0;
// bitfield macros
#define _RCON_NOT_BOR_POSN                                  0x0
#define _RCON_NOT_BOR_POSITION                              0x0
#define _RCON_NOT_BOR_SIZE                                  0x1
#define _RCON_NOT_BOR_LENGTH                                0x1
#define _RCON_NOT_BOR_MASK                                  0x1
#define _RCON_NOT_POR_POSN                                  0x1
#define _RCON_NOT_POR_POSITION                              0x1
#define _RCON_NOT_POR_SIZE                                  0x1
#define _RCON_NOT_POR_LENGTH                                0x1
#define _RCON_NOT_POR_MASK                                  0x2
#define _RCON_NOT_PD_POSN                                   0x2
#define _RCON_NOT_PD_POSITION                               0x2
#define _RCON_NOT_PD_SIZE                                   0x1
#define _RCON_NOT_PD_LENGTH                                 0x1
#define _RCON_NOT_PD_MASK                                   0x4
#define _RCON_NOT_TO_POSN                                   0x3
#define _RCON_NOT_TO_POSITION                               0x3
#define _RCON_NOT_TO_SIZE                                   0x1
#define _RCON_NOT_TO_LENGTH                                 0x1
#define _RCON_NOT_TO_MASK                                   0x8
#define _RCON_NOT_RI_POSN                                   0x4
#define _RCON_NOT_RI_POSITION                               0x4
#define _RCON_NOT_RI_SIZE                                   0x1
#define _RCON_NOT_RI_LENGTH                                 0x1
#define _RCON_NOT_RI_MASK                                   0x10
#define _RCON_NOT_CM_POSN                                   0x5
#define _RCON_NOT_CM_POSITION                               0x5
#define _RCON_NOT_CM_SIZE                                   0x1
#define _RCON_NOT_CM_LENGTH                                 0x1
#define _RCON_NOT_CM_MASK                                   0x20
#define _RCON_nBOR_POSN                                     0x0
#define _RCON_nBOR_POSITION                                 0x0
#define _RCON_nBOR_SIZE                                     0x1
#define _RCON_nBOR_LENGTH                                   0x1
#define _RCON_nBOR_MASK                                     0x1
#define _RCON_nPOR_POSN                                     0x1
#define _RCON_nPOR_POSITION                                 0x1
#define _RCON_nPOR_SIZE                                     0x1
#define _RCON_nPOR_LENGTH                                   0x1
#define _RCON_nPOR_MASK                                     0x2
#define _RCON_nPD_POSN                                      0x2
#define _RCON_nPD_POSITION                                  0x2
#define _RCON_nPD_SIZE                                      0x1
#define _RCON_nPD_LENGTH                                    0x1
#define _RCON_nPD_MASK                                      0x4
#define _RCON_nTO_POSN                                      0x3
#define _RCON_nTO_POSITION                                  0x3
#define _RCON_nTO_SIZE                                      0x1
#define _RCON_nTO_LENGTH                                    0x1
#define _RCON_nTO_MASK                                      0x8
#define _RCON_nRI_POSN                                      0x4
#define _RCON_nRI_POSITION                                  0x4
#define _RCON_nRI_SIZE                                      0x1
#define _RCON_nRI_LENGTH                                    0x1
#define _RCON_nRI_MASK                                      0x10
#define _RCON_nCM_POSN                                      0x5
#define _RCON_nCM_POSITION                                  0x5
#define _RCON_nCM_SIZE                                      0x1
#define _RCON_nCM_LENGTH                                    0x1
#define _RCON_nCM_MASK                                      0x20
#define _RCON_IPEN_POSN                                     0x7
#define _RCON_IPEN_POSITION                                 0x7
#define _RCON_IPEN_SIZE                                     0x1
#define _RCON_IPEN_LENGTH                                   0x1
#define _RCON_IPEN_MASK                                     0x80
#define _RCON_BOR_POSN                                      0x0
#define _RCON_BOR_POSITION                                  0x0
#define _RCON_BOR_SIZE                                      0x1
#define _RCON_BOR_LENGTH                                    0x1
#define _RCON_BOR_MASK                                      0x1
#define _RCON_POR_POSN                                      0x1
#define _RCON_POR_POSITION                                  0x1
#define _RCON_POR_SIZE                                      0x1
#define _RCON_POR_LENGTH                                    0x1
#define _RCON_POR_MASK                                      0x2
#define _RCON_PD_POSN                                       0x2
#define _RCON_PD_POSITION                                   0x2
#define _RCON_PD_SIZE                                       0x1
#define _RCON_PD_LENGTH                                     0x1
#define _RCON_PD_MASK                                       0x4
#define _RCON_TO_POSN                                       0x3
#define _RCON_TO_POSITION                                   0x3
#define _RCON_TO_SIZE                                       0x1
#define _RCON_TO_LENGTH                                     0x1
#define _RCON_TO_MASK                                       0x8
#define _RCON_RI_POSN                                       0x4
#define _RCON_RI_POSITION                                   0x4
#define _RCON_RI_SIZE                                       0x1
#define _RCON_RI_LENGTH                                     0x1
#define _RCON_RI_MASK                                       0x10
#define _RCON_CM_POSN                                       0x5
#define _RCON_CM_POSITION                                   0x5
#define _RCON_CM_SIZE                                       0x1
#define _RCON_CM_LENGTH                                     0x1
#define _RCON_CM_MASK                                       0x20

// Register: CM2CON
extern volatile unsigned char           CM2CON              @ 0xFD1;
#ifndef _LIB_BUILD
asm("CM2CON equ 0FD1h");
#endif
// aliases
extern volatile unsigned char           CM2CON1             @ 0xFD1;
#ifndef _LIB_BUILD
asm("CM2CON1 equ 0FD1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH02                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH12                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned COE2                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned CON2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CPOL2                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CREF2                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL02                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL12                :1;
    };
} CM2CONbits_t;
extern volatile CM2CONbits_t CM2CONbits @ 0xFD1;
// bitfield macros
#define _CM2CON_CCH_POSN                                    0x0
#define _CM2CON_CCH_POSITION                                0x0
#define _CM2CON_CCH_SIZE                                    0x2
#define _CM2CON_CCH_LENGTH                                  0x2
#define _CM2CON_CCH_MASK                                    0x3
#define _CM2CON_CREF_POSN                                   0x2
#define _CM2CON_CREF_POSITION                               0x2
#define _CM2CON_CREF_SIZE                                   0x1
#define _CM2CON_CREF_LENGTH                                 0x1
#define _CM2CON_CREF_MASK                                   0x4
#define _CM2CON_EVPOL_POSN                                  0x3
#define _CM2CON_EVPOL_POSITION                              0x3
#define _CM2CON_EVPOL_SIZE                                  0x2
#define _CM2CON_EVPOL_LENGTH                                0x2
#define _CM2CON_EVPOL_MASK                                  0x18
#define _CM2CON_CPOL_POSN                                   0x5
#define _CM2CON_CPOL_POSITION                               0x5
#define _CM2CON_CPOL_SIZE                                   0x1
#define _CM2CON_CPOL_LENGTH                                 0x1
#define _CM2CON_CPOL_MASK                                   0x20
#define _CM2CON_COE_POSN                                    0x6
#define _CM2CON_COE_POSITION                                0x6
#define _CM2CON_COE_SIZE                                    0x1
#define _CM2CON_COE_LENGTH                                  0x1
#define _CM2CON_COE_MASK                                    0x40
#define _CM2CON_CON_POSN                                    0x7
#define _CM2CON_CON_POSITION                                0x7
#define _CM2CON_CON_SIZE                                    0x1
#define _CM2CON_CON_LENGTH                                  0x1
#define _CM2CON_CON_MASK                                    0x80
#define _CM2CON_CCH0_POSN                                   0x0
#define _CM2CON_CCH0_POSITION                               0x0
#define _CM2CON_CCH0_SIZE                                   0x1
#define _CM2CON_CCH0_LENGTH                                 0x1
#define _CM2CON_CCH0_MASK                                   0x1
#define _CM2CON_CCH1_POSN                                   0x1
#define _CM2CON_CCH1_POSITION                               0x1
#define _CM2CON_CCH1_SIZE                                   0x1
#define _CM2CON_CCH1_LENGTH                                 0x1
#define _CM2CON_CCH1_MASK                                   0x2
#define _CM2CON_EVPOL0_POSN                                 0x3
#define _CM2CON_EVPOL0_POSITION                             0x3
#define _CM2CON_EVPOL0_SIZE                                 0x1
#define _CM2CON_EVPOL0_LENGTH                               0x1
#define _CM2CON_EVPOL0_MASK                                 0x8
#define _CM2CON_EVPOL1_POSN                                 0x4
#define _CM2CON_EVPOL1_POSITION                             0x4
#define _CM2CON_EVPOL1_SIZE                                 0x1
#define _CM2CON_EVPOL1_LENGTH                               0x1
#define _CM2CON_EVPOL1_MASK                                 0x10
#define _CM2CON_CCH02_POSN                                  0x0
#define _CM2CON_CCH02_POSITION                              0x0
#define _CM2CON_CCH02_SIZE                                  0x1
#define _CM2CON_CCH02_LENGTH                                0x1
#define _CM2CON_CCH02_MASK                                  0x1
#define _CM2CON_CCH12_POSN                                  0x1
#define _CM2CON_CCH12_POSITION                              0x1
#define _CM2CON_CCH12_SIZE                                  0x1
#define _CM2CON_CCH12_LENGTH                                0x1
#define _CM2CON_CCH12_MASK                                  0x2
#define _CM2CON_COE2_POSN                                   0x6
#define _CM2CON_COE2_POSITION                               0x6
#define _CM2CON_COE2_SIZE                                   0x1
#define _CM2CON_COE2_LENGTH                                 0x1
#define _CM2CON_COE2_MASK                                   0x40
#define _CM2CON_CON2_POSN                                   0x7
#define _CM2CON_CON2_POSITION                               0x7
#define _CM2CON_CON2_SIZE                                   0x1
#define _CM2CON_CON2_LENGTH                                 0x1
#define _CM2CON_CON2_MASK                                   0x80
#define _CM2CON_CPOL2_POSN                                  0x5
#define _CM2CON_CPOL2_POSITION                              0x5
#define _CM2CON_CPOL2_SIZE                                  0x1
#define _CM2CON_CPOL2_LENGTH                                0x1
#define _CM2CON_CPOL2_MASK                                  0x20
#define _CM2CON_CREF2_POSN                                  0x2
#define _CM2CON_CREF2_POSITION                              0x2
#define _CM2CON_CREF2_SIZE                                  0x1
#define _CM2CON_CREF2_LENGTH                                0x1
#define _CM2CON_CREF2_MASK                                  0x4
#define _CM2CON_EVPOL02_POSN                                0x3
#define _CM2CON_EVPOL02_POSITION                            0x3
#define _CM2CON_EVPOL02_SIZE                                0x1
#define _CM2CON_EVPOL02_LENGTH                              0x1
#define _CM2CON_EVPOL02_MASK                                0x8
#define _CM2CON_EVPOL12_POSN                                0x4
#define _CM2CON_EVPOL12_POSITION                            0x4
#define _CM2CON_EVPOL12_SIZE                                0x1
#define _CM2CON_EVPOL12_LENGTH                              0x1
#define _CM2CON_EVPOL12_MASK                                0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned CCH02                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH12                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned COE2                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned CON2                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CPOL2                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CREF2                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL02                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL12                :1;
    };
} CM2CON1bits_t;
extern volatile CM2CON1bits_t CM2CON1bits @ 0xFD1;
// bitfield macros
#define _CM2CON1_CCH_POSN                                   0x0
#define _CM2CON1_CCH_POSITION                               0x0
#define _CM2CON1_CCH_SIZE                                   0x2
#define _CM2CON1_CCH_LENGTH                                 0x2
#define _CM2CON1_CCH_MASK                                   0x3
#define _CM2CON1_CREF_POSN                                  0x2
#define _CM2CON1_CREF_POSITION                              0x2
#define _CM2CON1_CREF_SIZE                                  0x1
#define _CM2CON1_CREF_LENGTH                                0x1
#define _CM2CON1_CREF_MASK                                  0x4
#define _CM2CON1_EVPOL_POSN                                 0x3
#define _CM2CON1_EVPOL_POSITION                             0x3
#define _CM2CON1_EVPOL_SIZE                                 0x2
#define _CM2CON1_EVPOL_LENGTH                               0x2
#define _CM2CON1_EVPOL_MASK                                 0x18
#define _CM2CON1_CPOL_POSN                                  0x5
#define _CM2CON1_CPOL_POSITION                              0x5
#define _CM2CON1_CPOL_SIZE                                  0x1
#define _CM2CON1_CPOL_LENGTH                                0x1
#define _CM2CON1_CPOL_MASK                                  0x20
#define _CM2CON1_COE_POSN                                   0x6
#define _CM2CON1_COE_POSITION                               0x6
#define _CM2CON1_COE_SIZE                                   0x1
#define _CM2CON1_COE_LENGTH                                 0x1
#define _CM2CON1_COE_MASK                                   0x40
#define _CM2CON1_CON_POSN                                   0x7
#define _CM2CON1_CON_POSITION                               0x7
#define _CM2CON1_CON_SIZE                                   0x1
#define _CM2CON1_CON_LENGTH                                 0x1
#define _CM2CON1_CON_MASK                                   0x80
#define _CM2CON1_CCH0_POSN                                  0x0
#define _CM2CON1_CCH0_POSITION                              0x0
#define _CM2CON1_CCH0_SIZE                                  0x1
#define _CM2CON1_CCH0_LENGTH                                0x1
#define _CM2CON1_CCH0_MASK                                  0x1
#define _CM2CON1_CCH1_POSN                                  0x1
#define _CM2CON1_CCH1_POSITION                              0x1
#define _CM2CON1_CCH1_SIZE                                  0x1
#define _CM2CON1_CCH1_LENGTH                                0x1
#define _CM2CON1_CCH1_MASK                                  0x2
#define _CM2CON1_EVPOL0_POSN                                0x3
#define _CM2CON1_EVPOL0_POSITION                            0x3
#define _CM2CON1_EVPOL0_SIZE                                0x1
#define _CM2CON1_EVPOL0_LENGTH                              0x1
#define _CM2CON1_EVPOL0_MASK                                0x8
#define _CM2CON1_EVPOL1_POSN                                0x4
#define _CM2CON1_EVPOL1_POSITION                            0x4
#define _CM2CON1_EVPOL1_SIZE                                0x1
#define _CM2CON1_EVPOL1_LENGTH                              0x1
#define _CM2CON1_EVPOL1_MASK                                0x10
#define _CM2CON1_CCH02_POSN                                 0x0
#define _CM2CON1_CCH02_POSITION                             0x0
#define _CM2CON1_CCH02_SIZE                                 0x1
#define _CM2CON1_CCH02_LENGTH                               0x1
#define _CM2CON1_CCH02_MASK                                 0x1
#define _CM2CON1_CCH12_POSN                                 0x1
#define _CM2CON1_CCH12_POSITION                             0x1
#define _CM2CON1_CCH12_SIZE                                 0x1
#define _CM2CON1_CCH12_LENGTH                               0x1
#define _CM2CON1_CCH12_MASK                                 0x2
#define _CM2CON1_COE2_POSN                                  0x6
#define _CM2CON1_COE2_POSITION                              0x6
#define _CM2CON1_COE2_SIZE                                  0x1
#define _CM2CON1_COE2_LENGTH                                0x1
#define _CM2CON1_COE2_MASK                                  0x40
#define _CM2CON1_CON2_POSN                                  0x7
#define _CM2CON1_CON2_POSITION                              0x7
#define _CM2CON1_CON2_SIZE                                  0x1
#define _CM2CON1_CON2_LENGTH                                0x1
#define _CM2CON1_CON2_MASK                                  0x80
#define _CM2CON1_CPOL2_POSN                                 0x5
#define _CM2CON1_CPOL2_POSITION                             0x5
#define _CM2CON1_CPOL2_SIZE                                 0x1
#define _CM2CON1_CPOL2_LENGTH                               0x1
#define _CM2CON1_CPOL2_MASK                                 0x20
#define _CM2CON1_CREF2_POSN                                 0x2
#define _CM2CON1_CREF2_POSITION                             0x2
#define _CM2CON1_CREF2_SIZE                                 0x1
#define _CM2CON1_CREF2_LENGTH                               0x1
#define _CM2CON1_CREF2_MASK                                 0x4
#define _CM2CON1_EVPOL02_POSN                               0x3
#define _CM2CON1_EVPOL02_POSITION                           0x3
#define _CM2CON1_EVPOL02_SIZE                               0x1
#define _CM2CON1_EVPOL02_LENGTH                             0x1
#define _CM2CON1_EVPOL02_MASK                               0x8
#define _CM2CON1_EVPOL12_POSN                               0x4
#define _CM2CON1_EVPOL12_POSITION                           0x4
#define _CM2CON1_EVPOL12_SIZE                               0x1
#define _CM2CON1_EVPOL12_LENGTH                             0x1
#define _CM2CON1_EVPOL12_MASK                               0x10

// Register: CM1CON
extern volatile unsigned char           CM1CON              @ 0xFD2;
#ifndef _LIB_BUILD
asm("CM1CON equ 0FD2h");
#endif
// aliases
extern volatile unsigned char           CM1CON1             @ 0xFD2;
#ifndef _LIB_BUILD
asm("CM1CON1 equ 0FD2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned C1CH0                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned C1CH1                  :1;
    };
    struct {
        unsigned CCH01                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH11                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned COE1                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned CON1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CPOL1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CREF1                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL01                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL11                :1;
    };
} CM1CONbits_t;
extern volatile CM1CONbits_t CM1CONbits @ 0xFD2;
// bitfield macros
#define _CM1CON_CCH_POSN                                    0x0
#define _CM1CON_CCH_POSITION                                0x0
#define _CM1CON_CCH_SIZE                                    0x2
#define _CM1CON_CCH_LENGTH                                  0x2
#define _CM1CON_CCH_MASK                                    0x3
#define _CM1CON_CREF_POSN                                   0x2
#define _CM1CON_CREF_POSITION                               0x2
#define _CM1CON_CREF_SIZE                                   0x1
#define _CM1CON_CREF_LENGTH                                 0x1
#define _CM1CON_CREF_MASK                                   0x4
#define _CM1CON_EVPOL_POSN                                  0x3
#define _CM1CON_EVPOL_POSITION                              0x3
#define _CM1CON_EVPOL_SIZE                                  0x2
#define _CM1CON_EVPOL_LENGTH                                0x2
#define _CM1CON_EVPOL_MASK                                  0x18
#define _CM1CON_CPOL_POSN                                   0x5
#define _CM1CON_CPOL_POSITION                               0x5
#define _CM1CON_CPOL_SIZE                                   0x1
#define _CM1CON_CPOL_LENGTH                                 0x1
#define _CM1CON_CPOL_MASK                                   0x20
#define _CM1CON_COE_POSN                                    0x6
#define _CM1CON_COE_POSITION                                0x6
#define _CM1CON_COE_SIZE                                    0x1
#define _CM1CON_COE_LENGTH                                  0x1
#define _CM1CON_COE_MASK                                    0x40
#define _CM1CON_CON_POSN                                    0x7
#define _CM1CON_CON_POSITION                                0x7
#define _CM1CON_CON_SIZE                                    0x1
#define _CM1CON_CON_LENGTH                                  0x1
#define _CM1CON_CON_MASK                                    0x80
#define _CM1CON_CCH0_POSN                                   0x0
#define _CM1CON_CCH0_POSITION                               0x0
#define _CM1CON_CCH0_SIZE                                   0x1
#define _CM1CON_CCH0_LENGTH                                 0x1
#define _CM1CON_CCH0_MASK                                   0x1
#define _CM1CON_CCH1_POSN                                   0x1
#define _CM1CON_CCH1_POSITION                               0x1
#define _CM1CON_CCH1_SIZE                                   0x1
#define _CM1CON_CCH1_LENGTH                                 0x1
#define _CM1CON_CCH1_MASK                                   0x2
#define _CM1CON_EVPOL0_POSN                                 0x3
#define _CM1CON_EVPOL0_POSITION                             0x3
#define _CM1CON_EVPOL0_SIZE                                 0x1
#define _CM1CON_EVPOL0_LENGTH                               0x1
#define _CM1CON_EVPOL0_MASK                                 0x8
#define _CM1CON_EVPOL1_POSN                                 0x4
#define _CM1CON_EVPOL1_POSITION                             0x4
#define _CM1CON_EVPOL1_SIZE                                 0x1
#define _CM1CON_EVPOL1_LENGTH                               0x1
#define _CM1CON_EVPOL1_MASK                                 0x10
#define _CM1CON_C1CH0_POSN                                  0x0
#define _CM1CON_C1CH0_POSITION                              0x0
#define _CM1CON_C1CH0_SIZE                                  0x1
#define _CM1CON_C1CH0_LENGTH                                0x1
#define _CM1CON_C1CH0_MASK                                  0x1
#define _CM1CON_C1CH1_POSN                                  0x1
#define _CM1CON_C1CH1_POSITION                              0x1
#define _CM1CON_C1CH1_SIZE                                  0x1
#define _CM1CON_C1CH1_LENGTH                                0x1
#define _CM1CON_C1CH1_MASK                                  0x2
#define _CM1CON_CCH01_POSN                                  0x0
#define _CM1CON_CCH01_POSITION                              0x0
#define _CM1CON_CCH01_SIZE                                  0x1
#define _CM1CON_CCH01_LENGTH                                0x1
#define _CM1CON_CCH01_MASK                                  0x1
#define _CM1CON_CCH11_POSN                                  0x1
#define _CM1CON_CCH11_POSITION                              0x1
#define _CM1CON_CCH11_SIZE                                  0x1
#define _CM1CON_CCH11_LENGTH                                0x1
#define _CM1CON_CCH11_MASK                                  0x2
#define _CM1CON_COE1_POSN                                   0x6
#define _CM1CON_COE1_POSITION                               0x6
#define _CM1CON_COE1_SIZE                                   0x1
#define _CM1CON_COE1_LENGTH                                 0x1
#define _CM1CON_COE1_MASK                                   0x40
#define _CM1CON_CON1_POSN                                   0x7
#define _CM1CON_CON1_POSITION                               0x7
#define _CM1CON_CON1_SIZE                                   0x1
#define _CM1CON_CON1_LENGTH                                 0x1
#define _CM1CON_CON1_MASK                                   0x80
#define _CM1CON_CPOL1_POSN                                  0x5
#define _CM1CON_CPOL1_POSITION                              0x5
#define _CM1CON_CPOL1_SIZE                                  0x1
#define _CM1CON_CPOL1_LENGTH                                0x1
#define _CM1CON_CPOL1_MASK                                  0x20
#define _CM1CON_CREF1_POSN                                  0x2
#define _CM1CON_CREF1_POSITION                              0x2
#define _CM1CON_CREF1_SIZE                                  0x1
#define _CM1CON_CREF1_LENGTH                                0x1
#define _CM1CON_CREF1_MASK                                  0x4
#define _CM1CON_EVPOL01_POSN                                0x3
#define _CM1CON_EVPOL01_POSITION                            0x3
#define _CM1CON_EVPOL01_SIZE                                0x1
#define _CM1CON_EVPOL01_LENGTH                              0x1
#define _CM1CON_EVPOL01_MASK                                0x8
#define _CM1CON_EVPOL11_POSN                                0x4
#define _CM1CON_EVPOL11_POSITION                            0x4
#define _CM1CON_EVPOL11_SIZE                                0x1
#define _CM1CON_EVPOL11_LENGTH                              0x1
#define _CM1CON_EVPOL11_MASK                                0x10
// alias bitfield definitions
typedef union {
    struct {
        unsigned CCH                    :2;
        unsigned CREF                   :1;
        unsigned EVPOL                  :2;
        unsigned CPOL                   :1;
        unsigned COE                    :1;
        unsigned CON                    :1;
    };
    struct {
        unsigned CCH0                   :1;
        unsigned CCH1                   :1;
        unsigned                        :1;
        unsigned EVPOL0                 :1;
        unsigned EVPOL1                 :1;
    };
    struct {
        unsigned C1CH0                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned C1CH1                  :1;
    };
    struct {
        unsigned CCH01                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned CCH11                  :1;
    };
    struct {
        unsigned                        :6;
        unsigned COE1                   :1;
    };
    struct {
        unsigned                        :7;
        unsigned CON1                   :1;
    };
    struct {
        unsigned                        :5;
        unsigned CPOL1                  :1;
    };
    struct {
        unsigned                        :2;
        unsigned CREF1                  :1;
    };
    struct {
        unsigned                        :3;
        unsigned EVPOL01                :1;
    };
    struct {
        unsigned                        :4;
        unsigned EVPOL11                :1;
    };
} CM1CON1bits_t;
extern volatile CM1CON1bits_t CM1CON1bits @ 0xFD2;
// bitfield macros
#define _CM1CON1_CCH_POSN                                   0x0
#define _CM1CON1_CCH_POSITION                               0x0
#define _CM1CON1_CCH_SIZE                                   0x2
#define _CM1CON1_CCH_LENGTH                                 0x2
#define _CM1CON1_CCH_MASK                                   0x3
#define _CM1CON1_CREF_POSN                                  0x2
#define _CM1CON1_CREF_POSITION                              0x2
#define _CM1CON1_CREF_SIZE                                  0x1
#define _CM1CON1_CREF_LENGTH                                0x1
#define _CM1CON1_CREF_MASK                                  0x4
#define _CM1CON1_EVPOL_POSN                                 0x3
#define _CM1CON1_EVPOL_POSITION                             0x3
#define _CM1CON1_EVPOL_SIZE                                 0x2
#define _CM1CON1_EVPOL_LENGTH                               0x2
#define _CM1CON1_EVPOL_MASK                                 0x18
#define _CM1CON1_CPOL_POSN                                  0x5
#define _CM1CON1_CPOL_POSITION                              0x5
#define _CM1CON1_CPOL_SIZE                                  0x1
#define _CM1CON1_CPOL_LENGTH                                0x1
#define _CM1CON1_CPOL_MASK                                  0x20
#define _CM1CON1_COE_POSN                                   0x6
#define _CM1CON1_COE_POSITION                               0x6
#define _CM1CON1_COE_SIZE                                   0x1
#define _CM1CON1_COE_LENGTH                                 0x1
#define _CM1CON1_COE_MASK                                   0x40
#define _CM1CON1_CON_POSN                                   0x7
#define _CM1CON1_CON_POSITION                               0x7
#define _CM1CON1_CON_SIZE                                   0x1
#define _CM1CON1_CON_LENGTH                                 0x1
#define _CM1CON1_CON_MASK                                   0x80
#define _CM1CON1_CCH0_POSN                                  0x0
#define _CM1CON1_CCH0_POSITION                              0x0
#define _CM1CON1_CCH0_SIZE                                  0x1
#define _CM1CON1_CCH0_LENGTH                                0x1
#define _CM1CON1_CCH0_MASK                                  0x1
#define _CM1CON1_CCH1_POSN                                  0x1
#define _CM1CON1_CCH1_POSITION                              0x1
#define _CM1CON1_CCH1_SIZE                                  0x1
#define _CM1CON1_CCH1_LENGTH                                0x1
#define _CM1CON1_CCH1_MASK                                  0x2
#define _CM1CON1_EVPOL0_POSN                                0x3
#define _CM1CON1_EVPOL0_POSITION                            0x3
#define _CM1CON1_EVPOL0_SIZE                                0x1
#define _CM1CON1_EVPOL0_LENGTH                              0x1
#define _CM1CON1_EVPOL0_MASK                                0x8
#define _CM1CON1_EVPOL1_POSN                                0x4
#define _CM1CON1_EVPOL1_POSITION                            0x4
#define _CM1CON1_EVPOL1_SIZE                                0x1
#define _CM1CON1_EVPOL1_LENGTH                              0x1
#define _CM1CON1_EVPOL1_MASK                                0x10
#define _CM1CON1_C1CH0_POSN                                 0x0
#define _CM1CON1_C1CH0_POSITION                             0x0
#define _CM1CON1_C1CH0_SIZE                                 0x1
#define _CM1CON1_C1CH0_LENGTH                               0x1
#define _CM1CON1_C1CH0_MASK                                 0x1
#define _CM1CON1_C1CH1_POSN                                 0x1
#define _CM1CON1_C1CH1_POSITION                             0x1
#define _CM1CON1_C1CH1_SIZE                                 0x1
#define _CM1CON1_C1CH1_LENGTH                               0x1
#define _CM1CON1_C1CH1_MASK                                 0x2
#define _CM1CON1_CCH01_POSN                                 0x0
#define _CM1CON1_CCH01_POSITION                             0x0
#define _CM1CON1_CCH01_SIZE                                 0x1
#define _CM1CON1_CCH01_LENGTH                               0x1
#define _CM1CON1_CCH01_MASK                                 0x1
#define _CM1CON1_CCH11_POSN                                 0x1
#define _CM1CON1_CCH11_POSITION                             0x1
#define _CM1CON1_CCH11_SIZE                                 0x1
#define _CM1CON1_CCH11_LENGTH                               0x1
#define _CM1CON1_CCH11_MASK                                 0x2
#define _CM1CON1_COE1_POSN                                  0x6
#define _CM1CON1_COE1_POSITION                              0x6
#define _CM1CON1_COE1_SIZE                                  0x1
#define _CM1CON1_COE1_LENGTH                                0x1
#define _CM1CON1_COE1_MASK                                  0x40
#define _CM1CON1_CON1_POSN                                  0x7
#define _CM1CON1_CON1_POSITION                              0x7
#define _CM1CON1_CON1_SIZE                                  0x1
#define _CM1CON1_CON1_LENGTH                                0x1
#define _CM1CON1_CON1_MASK                                  0x80
#define _CM1CON1_CPOL1_POSN                                 0x5
#define _CM1CON1_CPOL1_POSITION                             0x5
#define _CM1CON1_CPOL1_SIZE                                 0x1
#define _CM1CON1_CPOL1_LENGTH                               0x1
#define _CM1CON1_CPOL1_MASK                                 0x20
#define _CM1CON1_CREF1_POSN                                 0x2
#define _CM1CON1_CREF1_POSITION                             0x2
#define _CM1CON1_CREF1_SIZE                                 0x1
#define _CM1CON1_CREF1_LENGTH                               0x1
#define _CM1CON1_CREF1_MASK                                 0x4
#define _CM1CON1_EVPOL01_POSN                               0x3
#define _CM1CON1_EVPOL01_POSITION                           0x3
#define _CM1CON1_EVPOL01_SIZE                               0x1
#define _CM1CON1_EVPOL01_LENGTH                             0x1
#define _CM1CON1_EVPOL01_MASK                               0x8
#define _CM1CON1_EVPOL11_POSN                               0x4
#define _CM1CON1_EVPOL11_POSITION                           0x4
#define _CM1CON1_EVPOL11_SIZE                               0x1
#define _CM1CON1_EVPOL11_LENGTH                             0x1
#define _CM1CON1_EVPOL11_MASK                               0x10

// Register: OSCCON
extern volatile unsigned char           OSCCON              @ 0xFD3;
#ifndef _LIB_BUILD
asm("OSCCON equ 0FD3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned SCS                    :2;
        unsigned FLTS                   :1;
        unsigned OSTS                   :1;
        unsigned IRCF                   :3;
        unsigned IDLEN                  :1;
    };
    struct {
        unsigned SCS0                   :1;
        unsigned SCS1                   :1;
        unsigned                        :2;
        unsigned IRCF0                  :1;
        unsigned IRCF1                  :1;
        unsigned IRCF2                  :1;
    };
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;
// bitfield macros
#define _OSCCON_SCS_POSN                                    0x0
#define _OSCCON_SCS_POSITION                                0x0
#define _OSCCON_SCS_SIZE                                    0x2
#define _OSCCON_SCS_LENGTH                                  0x2
#define _OSCCON_SCS_MASK                                    0x3
#define _OSCCON_FLTS_POSN                                   0x2
#define _OSCCON_FLTS_POSITION                               0x2
#define _OSCCON_FLTS_SIZE                                   0x1
#define _OSCCON_FLTS_LENGTH                                 0x1
#define _OSCCON_FLTS_MASK                                   0x4
#define _OSCCON_OSTS_POSN                                   0x3
#define _OSCCON_OSTS_POSITION                               0x3
#define _OSCCON_OSTS_SIZE                                   0x1
#define _OSCCON_OSTS_LENGTH                                 0x1
#define _OSCCON_OSTS_MASK                                   0x8
#define _OSCCON_IRCF_POSN                                   0x4
#define _OSCCON_IRCF_POSITION                               0x4
#define _OSCCON_IRCF_SIZE                                   0x3
#define _OSCCON_IRCF_LENGTH                                 0x3
#define _OSCCON_IRCF_MASK                                   0x70
#define _OSCCON_IDLEN_POSN                                  0x7
#define _OSCCON_IDLEN_POSITION                              0x7
#define _OSCCON_IDLEN_SIZE                                  0x1
#define _OSCCON_IDLEN_LENGTH                                0x1
#define _OSCCON_IDLEN_MASK                                  0x80
#define _OSCCON_SCS0_POSN                                   0x0
#define _OSCCON_SCS0_POSITION                               0x0
#define _OSCCON_SCS0_SIZE                                   0x1
#define _OSCCON_SCS0_LENGTH                                 0x1
#define _OSCCON_SCS0_MASK                                   0x1
#define _OSCCON_SCS1_POSN                                   0x1
#define _OSCCON_SCS1_POSITION                               0x1
#define _OSCCON_SCS1_SIZE                                   0x1
#define _OSCCON_SCS1_LENGTH                                 0x1
#define _OSCCON_SCS1_MASK                                   0x2
#define _OSCCON_IRCF0_POSN                                  0x4
#define _OSCCON_IRCF0_POSITION                              0x4
#define _OSCCON_IRCF0_SIZE                                  0x1
#define _OSCCON_IRCF0_LENGTH                                0x1
#define _OSCCON_IRCF0_MASK                                  0x10
#define _OSCCON_IRCF1_POSN                                  0x5
#define _OSCCON_IRCF1_POSITION                              0x5
#define _OSCCON_IRCF1_SIZE                                  0x1
#define _OSCCON_IRCF1_LENGTH                                0x1
#define _OSCCON_IRCF1_MASK                                  0x20
#define _OSCCON_IRCF2_POSN                                  0x6
#define _OSCCON_IRCF2_POSITION                              0x6
#define _OSCCON_IRCF2_SIZE                                  0x1
#define _OSCCON_IRCF2_LENGTH                                0x1
#define _OSCCON_IRCF2_MASK                                  0x40

// Register: T0CON
extern volatile unsigned char           T0CON               @ 0xFD5;
#ifndef _LIB_BUILD
asm("T0CON equ 0FD5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned T0PS                   :3;
        unsigned PSA                    :1;
        unsigned T0SE                   :1;
        unsigned T0CS                   :1;
        unsigned T08BIT                 :1;
        unsigned TMR0ON                 :1;
    };
    struct {
        unsigned T0PS0                  :1;
        unsigned T0PS1                  :1;
        unsigned T0PS2                  :1;
    };
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits @ 0xFD5;
// bitfield macros
#define _T0CON_T0PS_POSN                                    0x0
#define _T0CON_T0PS_POSITION                                0x0
#define _T0CON_T0PS_SIZE                                    0x3
#define _T0CON_T0PS_LENGTH                                  0x3
#define _T0CON_T0PS_MASK                                    0x7
#define _T0CON_PSA_POSN                                     0x3
#define _T0CON_PSA_POSITION                                 0x3
#define _T0CON_PSA_SIZE                                     0x1
#define _T0CON_PSA_LENGTH                                   0x1
#define _T0CON_PSA_MASK                                     0x8
#define _T0CON_T0SE_POSN                                    0x4
#define _T0CON_T0SE_POSITION                                0x4
#define _T0CON_T0SE_SIZE                                    0x1
#define _T0CON_T0SE_LENGTH                                  0x1
#define _T0CON_T0SE_MASK                                    0x10
#define _T0CON_T0CS_POSN                                    0x5
#define _T0CON_T0CS_POSITION                                0x5
#define _T0CON_T0CS_SIZE                                    0x1
#define _T0CON_T0CS_LENGTH                                  0x1
#define _T0CON_T0CS_MASK                                    0x20
#define _T0CON_T08BIT_POSN                                  0x6
#define _T0CON_T08BIT_POSITION                              0x6
#define _T0CON_T08BIT_SIZE                                  0x1
#define _T0CON_T08BIT_LENGTH                                0x1
#define _T0CON_T08BIT_MASK                                  0x40
#define _T0CON_TMR0ON_POSN                                  0x7
#define _T0CON_TMR0ON_POSITION                              0x7
#define _T0CON_TMR0ON_SIZE                                  0x1
#define _T0CON_TMR0ON_LENGTH                                0x1
#define _T0CON_TMR0ON_MASK                                  0x80
#define _T0CON_T0PS0_POSN                                   0x0
#define _T0CON_T0PS0_POSITION                               0x0
#define _T0CON_T0PS0_SIZE                                   0x1
#define _T0CON_T0PS0_LENGTH                                 0x1
#define _T0CON_T0PS0_MASK                                   0x1
#define _T0CON_T0PS1_POSN                                   0x1
#define _T0CON_T0PS1_POSITION                               0x1
#define _T0CON_T0PS1_SIZE                                   0x1
#define _T0CON_T0PS1_LENGTH                                 0x1
#define _T0CON_T0PS1_MASK                                   0x2
#define _T0CON_T0PS2_POSN                                   0x2
#define _T0CON_T0PS2_POSITION                               0x2
#define _T0CON_T0PS2_SIZE                                   0x1
#define _T0CON_T0PS2_LENGTH                                 0x1
#define _T0CON_T0PS2_MASK                                   0x4

// Register: TMR0
extern volatile unsigned short          TMR0                @ 0xFD6;
#ifndef _LIB_BUILD
asm("TMR0 equ 0FD6h");
#endif

// Register: TMR0L
extern volatile unsigned char           TMR0L               @ 0xFD6;
#ifndef _LIB_BUILD
asm("TMR0L equ 0FD6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0L                  :8;
    };
} TMR0Lbits_t;
extern volatile TMR0Lbits_t TMR0Lbits @ 0xFD6;
// bitfield macros
#define _TMR0L_TMR0L_POSN                                   0x0
#define _TMR0L_TMR0L_POSITION                               0x0
#define _TMR0L_TMR0L_SIZE                                   0x8
#define _TMR0L_TMR0L_LENGTH                                 0x8
#define _TMR0L_TMR0L_MASK                                   0xFF

// Register: TMR0H
extern volatile unsigned char           TMR0H               @ 0xFD7;
#ifndef _LIB_BUILD
asm("TMR0H equ 0FD7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TMR0H                  :8;
    };
} TMR0Hbits_t;
extern volatile TMR0Hbits_t TMR0Hbits @ 0xFD7;
// bitfield macros
#define _TMR0H_TMR0H_POSN                                   0x0
#define _TMR0H_TMR0H_POSITION                               0x0
#define _TMR0H_TMR0H_SIZE                                   0x8
#define _TMR0H_TMR0H_LENGTH                                 0x8
#define _TMR0H_TMR0H_MASK                                   0xFF

// Register: STATUS
extern volatile unsigned char           STATUS              @ 0xFD8;
#ifndef _LIB_BUILD
asm("STATUS equ 0FD8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned C                      :1;
        unsigned DC                     :1;
        unsigned Z                      :1;
        unsigned OV                     :1;
        unsigned N                      :1;
    };
    struct {
        unsigned CARRY                  :1;
    };
    struct {
        unsigned                        :4;
        unsigned NEGATIVE               :1;
    };
    struct {
        unsigned                        :3;
        unsigned OVERFLOW               :1;
    };
    struct {
        unsigned                        :2;
        unsigned ZERO                   :1;
    };
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0xFD8;
// bitfield macros
#define _STATUS_C_POSN                                      0x0
#define _STATUS_C_POSITION                                  0x0
#define _STATUS_C_SIZE                                      0x1
#define _STATUS_C_LENGTH                                    0x1
#define _STATUS_C_MASK                                      0x1
#define _STATUS_DC_POSN                                     0x1
#define _STATUS_DC_POSITION                                 0x1
#define _STATUS_DC_SIZE                                     0x1
#define _STATUS_DC_LENGTH                                   0x1
#define _STATUS_DC_MASK                                     0x2
#define _STATUS_Z_POSN                                      0x2
#define _STATUS_Z_POSITION                                  0x2
#define _STATUS_Z_SIZE                                      0x1
#define _STATUS_Z_LENGTH                                    0x1
#define _STATUS_Z_MASK                                      0x4
#define _STATUS_OV_POSN                                     0x3
#define _STATUS_OV_POSITION                                 0x3
#define _STATUS_OV_SIZE                                     0x1
#define _STATUS_OV_LENGTH                                   0x1
#define _STATUS_OV_MASK                                     0x8
#define _STATUS_N_POSN                                      0x4
#define _STATUS_N_POSITION                                  0x4
#define _STATUS_N_SIZE                                      0x1
#define _STATUS_N_LENGTH                                    0x1
#define _STATUS_N_MASK                                      0x10
#define _STATUS_CARRY_POSN                                  0x0
#define _STATUS_CARRY_POSITION                              0x0
#define _STATUS_CARRY_SIZE                                  0x1
#define _STATUS_CARRY_LENGTH                                0x1
#define _STATUS_CARRY_MASK                                  0x1
#define _STATUS_NEGATIVE_POSN                               0x4
#define _STATUS_NEGATIVE_POSITION                           0x4
#define _STATUS_NEGATIVE_SIZE                               0x1
#define _STATUS_NEGATIVE_LENGTH                             0x1
#define _STATUS_NEGATIVE_MASK                               0x10
#define _STATUS_OVERFLOW_POSN                               0x3
#define _STATUS_OVERFLOW_POSITION                           0x3
#define _STATUS_OVERFLOW_SIZE                               0x1
#define _STATUS_OVERFLOW_LENGTH                             0x1
#define _STATUS_OVERFLOW_MASK                               0x8
#define _STATUS_ZERO_POSN                                   0x2
#define _STATUS_ZERO_POSITION                               0x2
#define _STATUS_ZERO_SIZE                                   0x1
#define _STATUS_ZERO_LENGTH                                 0x1
#define _STATUS_ZERO_MASK                                   0x4

// Register: FSR2
extern volatile unsigned short          FSR2                @ 0xFD9;
#ifndef _LIB_BUILD
asm("FSR2 equ 0FD9h");
#endif

// Register: FSR2L
extern volatile unsigned char           FSR2L               @ 0xFD9;
#ifndef _LIB_BUILD
asm("FSR2L equ 0FD9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR2L                  :8;
    };
} FSR2Lbits_t;
extern volatile FSR2Lbits_t FSR2Lbits @ 0xFD9;
// bitfield macros
#define _FSR2L_FSR2L_POSN                                   0x0
#define _FSR2L_FSR2L_POSITION                               0x0
#define _FSR2L_FSR2L_SIZE                                   0x8
#define _FSR2L_FSR2L_LENGTH                                 0x8
#define _FSR2L_FSR2L_MASK                                   0xFF

// Register: FSR2H
extern volatile unsigned char           FSR2H               @ 0xFDA;
#ifndef _LIB_BUILD
asm("FSR2H equ 0FDAh");
#endif

// Register: PLUSW2
extern volatile unsigned char           PLUSW2              @ 0xFDB;
#ifndef _LIB_BUILD
asm("PLUSW2 equ 0FDBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW2                 :8;
    };
} PLUSW2bits_t;
extern volatile PLUSW2bits_t PLUSW2bits @ 0xFDB;
// bitfield macros
#define _PLUSW2_PLUSW2_POSN                                 0x0
#define _PLUSW2_PLUSW2_POSITION                             0x0
#define _PLUSW2_PLUSW2_SIZE                                 0x8
#define _PLUSW2_PLUSW2_LENGTH                               0x8
#define _PLUSW2_PLUSW2_MASK                                 0xFF

// Register: PREINC2
extern volatile unsigned char           PREINC2             @ 0xFDC;
#ifndef _LIB_BUILD
asm("PREINC2 equ 0FDCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC2                :8;
    };
} PREINC2bits_t;
extern volatile PREINC2bits_t PREINC2bits @ 0xFDC;
// bitfield macros
#define _PREINC2_PREINC2_POSN                               0x0
#define _PREINC2_PREINC2_POSITION                           0x0
#define _PREINC2_PREINC2_SIZE                               0x8
#define _PREINC2_PREINC2_LENGTH                             0x8
#define _PREINC2_PREINC2_MASK                               0xFF

// Register: POSTDEC2
extern volatile unsigned char           POSTDEC2            @ 0xFDD;
#ifndef _LIB_BUILD
asm("POSTDEC2 equ 0FDDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC2               :8;
    };
} POSTDEC2bits_t;
extern volatile POSTDEC2bits_t POSTDEC2bits @ 0xFDD;
// bitfield macros
#define _POSTDEC2_POSTDEC2_POSN                             0x0
#define _POSTDEC2_POSTDEC2_POSITION                         0x0
#define _POSTDEC2_POSTDEC2_SIZE                             0x8
#define _POSTDEC2_POSTDEC2_LENGTH                           0x8
#define _POSTDEC2_POSTDEC2_MASK                             0xFF

// Register: POSTINC2
extern volatile unsigned char           POSTINC2            @ 0xFDE;
#ifndef _LIB_BUILD
asm("POSTINC2 equ 0FDEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC2               :8;
    };
} POSTINC2bits_t;
extern volatile POSTINC2bits_t POSTINC2bits @ 0xFDE;
// bitfield macros
#define _POSTINC2_POSTINC2_POSN                             0x0
#define _POSTINC2_POSTINC2_POSITION                         0x0
#define _POSTINC2_POSTINC2_SIZE                             0x8
#define _POSTINC2_POSTINC2_LENGTH                           0x8
#define _POSTINC2_POSTINC2_MASK                             0xFF

// Register: INDF2
extern volatile unsigned char           INDF2               @ 0xFDF;
#ifndef _LIB_BUILD
asm("INDF2 equ 0FDFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF2                  :8;
    };
} INDF2bits_t;
extern volatile INDF2bits_t INDF2bits @ 0xFDF;
// bitfield macros
#define _INDF2_INDF2_POSN                                   0x0
#define _INDF2_INDF2_POSITION                               0x0
#define _INDF2_INDF2_SIZE                                   0x8
#define _INDF2_INDF2_LENGTH                                 0x8
#define _INDF2_INDF2_MASK                                   0xFF

// Register: BSR
extern volatile unsigned char           BSR                 @ 0xFE0;
#ifndef _LIB_BUILD
asm("BSR equ 0FE0h");
#endif

// Register: FSR1
extern volatile unsigned short          FSR1                @ 0xFE1;
#ifndef _LIB_BUILD
asm("FSR1 equ 0FE1h");
#endif

// Register: FSR1L
extern volatile unsigned char           FSR1L               @ 0xFE1;
#ifndef _LIB_BUILD
asm("FSR1L equ 0FE1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR1L                  :8;
    };
} FSR1Lbits_t;
extern volatile FSR1Lbits_t FSR1Lbits @ 0xFE1;
// bitfield macros
#define _FSR1L_FSR1L_POSN                                   0x0
#define _FSR1L_FSR1L_POSITION                               0x0
#define _FSR1L_FSR1L_SIZE                                   0x8
#define _FSR1L_FSR1L_LENGTH                                 0x8
#define _FSR1L_FSR1L_MASK                                   0xFF

// Register: FSR1H
extern volatile unsigned char           FSR1H               @ 0xFE2;
#ifndef _LIB_BUILD
asm("FSR1H equ 0FE2h");
#endif

// Register: PLUSW1
extern volatile unsigned char           PLUSW1              @ 0xFE3;
#ifndef _LIB_BUILD
asm("PLUSW1 equ 0FE3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW1                 :8;
    };
} PLUSW1bits_t;
extern volatile PLUSW1bits_t PLUSW1bits @ 0xFE3;
// bitfield macros
#define _PLUSW1_PLUSW1_POSN                                 0x0
#define _PLUSW1_PLUSW1_POSITION                             0x0
#define _PLUSW1_PLUSW1_SIZE                                 0x8
#define _PLUSW1_PLUSW1_LENGTH                               0x8
#define _PLUSW1_PLUSW1_MASK                                 0xFF

// Register: PREINC1
extern volatile unsigned char           PREINC1             @ 0xFE4;
#ifndef _LIB_BUILD
asm("PREINC1 equ 0FE4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC1                :8;
    };
} PREINC1bits_t;
extern volatile PREINC1bits_t PREINC1bits @ 0xFE4;
// bitfield macros
#define _PREINC1_PREINC1_POSN                               0x0
#define _PREINC1_PREINC1_POSITION                           0x0
#define _PREINC1_PREINC1_SIZE                               0x8
#define _PREINC1_PREINC1_LENGTH                             0x8
#define _PREINC1_PREINC1_MASK                               0xFF

// Register: POSTDEC1
extern volatile unsigned char           POSTDEC1            @ 0xFE5;
#ifndef _LIB_BUILD
asm("POSTDEC1 equ 0FE5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC1               :8;
    };
} POSTDEC1bits_t;
extern volatile POSTDEC1bits_t POSTDEC1bits @ 0xFE5;
// bitfield macros
#define _POSTDEC1_POSTDEC1_POSN                             0x0
#define _POSTDEC1_POSTDEC1_POSITION                         0x0
#define _POSTDEC1_POSTDEC1_SIZE                             0x8
#define _POSTDEC1_POSTDEC1_LENGTH                           0x8
#define _POSTDEC1_POSTDEC1_MASK                             0xFF

// Register: POSTINC1
extern volatile unsigned char           POSTINC1            @ 0xFE6;
#ifndef _LIB_BUILD
asm("POSTINC1 equ 0FE6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC1               :8;
    };
} POSTINC1bits_t;
extern volatile POSTINC1bits_t POSTINC1bits @ 0xFE6;
// bitfield macros
#define _POSTINC1_POSTINC1_POSN                             0x0
#define _POSTINC1_POSTINC1_POSITION                         0x0
#define _POSTINC1_POSTINC1_SIZE                             0x8
#define _POSTINC1_POSTINC1_LENGTH                           0x8
#define _POSTINC1_POSTINC1_MASK                             0xFF

// Register: INDF1
extern volatile unsigned char           INDF1               @ 0xFE7;
#ifndef _LIB_BUILD
asm("INDF1 equ 0FE7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF1                  :8;
    };
} INDF1bits_t;
extern volatile INDF1bits_t INDF1bits @ 0xFE7;
// bitfield macros
#define _INDF1_INDF1_POSN                                   0x0
#define _INDF1_INDF1_POSITION                               0x0
#define _INDF1_INDF1_SIZE                                   0x8
#define _INDF1_INDF1_LENGTH                                 0x8
#define _INDF1_INDF1_MASK                                   0xFF

// Register: WREG
extern volatile unsigned char           WREG                @ 0xFE8;
#ifndef _LIB_BUILD
asm("WREG equ 0FE8h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned WREG                   :8;
    };
} WREGbits_t;
extern volatile WREGbits_t WREGbits @ 0xFE8;
// bitfield macros
#define _WREG_WREG_POSN                                     0x0
#define _WREG_WREG_POSITION                                 0x0
#define _WREG_WREG_SIZE                                     0x8
#define _WREG_WREG_LENGTH                                   0x8
#define _WREG_WREG_MASK                                     0xFF

// Register: FSR0
extern volatile unsigned short          FSR0                @ 0xFE9;
#ifndef _LIB_BUILD
asm("FSR0 equ 0FE9h");
#endif

// Register: FSR0L
extern volatile unsigned char           FSR0L               @ 0xFE9;
#ifndef _LIB_BUILD
asm("FSR0L equ 0FE9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned FSR0L                  :8;
    };
} FSR0Lbits_t;
extern volatile FSR0Lbits_t FSR0Lbits @ 0xFE9;
// bitfield macros
#define _FSR0L_FSR0L_POSN                                   0x0
#define _FSR0L_FSR0L_POSITION                               0x0
#define _FSR0L_FSR0L_SIZE                                   0x8
#define _FSR0L_FSR0L_LENGTH                                 0x8
#define _FSR0L_FSR0L_MASK                                   0xFF

// Register: FSR0H
extern volatile unsigned char           FSR0H               @ 0xFEA;
#ifndef _LIB_BUILD
asm("FSR0H equ 0FEAh");
#endif

// Register: PLUSW0
extern volatile unsigned char           PLUSW0              @ 0xFEB;
#ifndef _LIB_BUILD
asm("PLUSW0 equ 0FEBh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PLUSW0                 :8;
    };
} PLUSW0bits_t;
extern volatile PLUSW0bits_t PLUSW0bits @ 0xFEB;
// bitfield macros
#define _PLUSW0_PLUSW0_POSN                                 0x0
#define _PLUSW0_PLUSW0_POSITION                             0x0
#define _PLUSW0_PLUSW0_SIZE                                 0x8
#define _PLUSW0_PLUSW0_LENGTH                               0x8
#define _PLUSW0_PLUSW0_MASK                                 0xFF

// Register: PREINC0
extern volatile unsigned char           PREINC0             @ 0xFEC;
#ifndef _LIB_BUILD
asm("PREINC0 equ 0FECh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PREINC0                :8;
    };
} PREINC0bits_t;
extern volatile PREINC0bits_t PREINC0bits @ 0xFEC;
// bitfield macros
#define _PREINC0_PREINC0_POSN                               0x0
#define _PREINC0_PREINC0_POSITION                           0x0
#define _PREINC0_PREINC0_SIZE                               0x8
#define _PREINC0_PREINC0_LENGTH                             0x8
#define _PREINC0_PREINC0_MASK                               0xFF

// Register: POSTDEC0
extern volatile unsigned char           POSTDEC0            @ 0xFED;
#ifndef _LIB_BUILD
asm("POSTDEC0 equ 0FEDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTDEC0               :8;
    };
} POSTDEC0bits_t;
extern volatile POSTDEC0bits_t POSTDEC0bits @ 0xFED;
// bitfield macros
#define _POSTDEC0_POSTDEC0_POSN                             0x0
#define _POSTDEC0_POSTDEC0_POSITION                         0x0
#define _POSTDEC0_POSTDEC0_SIZE                             0x8
#define _POSTDEC0_POSTDEC0_LENGTH                           0x8
#define _POSTDEC0_POSTDEC0_MASK                             0xFF

// Register: POSTINC0
extern volatile unsigned char           POSTINC0            @ 0xFEE;
#ifndef _LIB_BUILD
asm("POSTINC0 equ 0FEEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned POSTINC0               :8;
    };
} POSTINC0bits_t;
extern volatile POSTINC0bits_t POSTINC0bits @ 0xFEE;
// bitfield macros
#define _POSTINC0_POSTINC0_POSN                             0x0
#define _POSTINC0_POSTINC0_POSITION                         0x0
#define _POSTINC0_POSTINC0_SIZE                             0x8
#define _POSTINC0_POSTINC0_LENGTH                           0x8
#define _POSTINC0_POSTINC0_MASK                             0xFF

// Register: INDF0
extern volatile unsigned char           INDF0               @ 0xFEF;
#ifndef _LIB_BUILD
asm("INDF0 equ 0FEFh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INDF0                  :8;
    };
} INDF0bits_t;
extern volatile INDF0bits_t INDF0bits @ 0xFEF;
// bitfield macros
#define _INDF0_INDF0_POSN                                   0x0
#define _INDF0_INDF0_POSITION                               0x0
#define _INDF0_INDF0_SIZE                                   0x8
#define _INDF0_INDF0_LENGTH                                 0x8
#define _INDF0_INDF0_MASK                                   0xFF

// Register: INTCON3
extern volatile unsigned char           INTCON3             @ 0xFF0;
#ifndef _LIB_BUILD
asm("INTCON3 equ 0FF0h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned INT1IF                 :1;
        unsigned INT2IF                 :1;
        unsigned INT3IF                 :1;
        unsigned INT1IE                 :1;
        unsigned INT2IE                 :1;
        unsigned INT3IE                 :1;
        unsigned INT1IP                 :1;
        unsigned INT2IP                 :1;
    };
    struct {
        unsigned INT1F                  :1;
        unsigned INT2F                  :1;
        unsigned INT3F                  :1;
        unsigned INT1E                  :1;
        unsigned INT2E                  :1;
        unsigned INT3E                  :1;
        unsigned INT1P                  :1;
        unsigned INT2P                  :1;
    };
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;
// bitfield macros
#define _INTCON3_INT1IF_POSN                                0x0
#define _INTCON3_INT1IF_POSITION                            0x0
#define _INTCON3_INT1IF_SIZE                                0x1
#define _INTCON3_INT1IF_LENGTH                              0x1
#define _INTCON3_INT1IF_MASK                                0x1
#define _INTCON3_INT2IF_POSN                                0x1
#define _INTCON3_INT2IF_POSITION                            0x1
#define _INTCON3_INT2IF_SIZE                                0x1
#define _INTCON3_INT2IF_LENGTH                              0x1
#define _INTCON3_INT2IF_MASK                                0x2
#define _INTCON3_INT3IF_POSN                                0x2
#define _INTCON3_INT3IF_POSITION                            0x2
#define _INTCON3_INT3IF_SIZE                                0x1
#define _INTCON3_INT3IF_LENGTH                              0x1
#define _INTCON3_INT3IF_MASK                                0x4
#define _INTCON3_INT1IE_POSN                                0x3
#define _INTCON3_INT1IE_POSITION                            0x3
#define _INTCON3_INT1IE_SIZE                                0x1
#define _INTCON3_INT1IE_LENGTH                              0x1
#define _INTCON3_INT1IE_MASK                                0x8
#define _INTCON3_INT2IE_POSN                                0x4
#define _INTCON3_INT2IE_POSITION                            0x4
#define _INTCON3_INT2IE_SIZE                                0x1
#define _INTCON3_INT2IE_LENGTH                              0x1
#define _INTCON3_INT2IE_MASK                                0x10
#define _INTCON3_INT3IE_POSN                                0x5
#define _INTCON3_INT3IE_POSITION                            0x5
#define _INTCON3_INT3IE_SIZE                                0x1
#define _INTCON3_INT3IE_LENGTH                              0x1
#define _INTCON3_INT3IE_MASK                                0x20
#define _INTCON3_INT1IP_POSN                                0x6
#define _INTCON3_INT1IP_POSITION                            0x6
#define _INTCON3_INT1IP_SIZE                                0x1
#define _INTCON3_INT1IP_LENGTH                              0x1
#define _INTCON3_INT1IP_MASK                                0x40
#define _INTCON3_INT2IP_POSN                                0x7
#define _INTCON3_INT2IP_POSITION                            0x7
#define _INTCON3_INT2IP_SIZE                                0x1
#define _INTCON3_INT2IP_LENGTH                              0x1
#define _INTCON3_INT2IP_MASK                                0x80
#define _INTCON3_INT1F_POSN                                 0x0
#define _INTCON3_INT1F_POSITION                             0x0
#define _INTCON3_INT1F_SIZE                                 0x1
#define _INTCON3_INT1F_LENGTH                               0x1
#define _INTCON3_INT1F_MASK                                 0x1
#define _INTCON3_INT2F_POSN                                 0x1
#define _INTCON3_INT2F_POSITION                             0x1
#define _INTCON3_INT2F_SIZE                                 0x1
#define _INTCON3_INT2F_LENGTH                               0x1
#define _INTCON3_INT2F_MASK                                 0x2
#define _INTCON3_INT3F_POSN                                 0x2
#define _INTCON3_INT3F_POSITION                             0x2
#define _INTCON3_INT3F_SIZE                                 0x1
#define _INTCON3_INT3F_LENGTH                               0x1
#define _INTCON3_INT3F_MASK                                 0x4
#define _INTCON3_INT1E_POSN                                 0x3
#define _INTCON3_INT1E_POSITION                             0x3
#define _INTCON3_INT1E_SIZE                                 0x1
#define _INTCON3_INT1E_LENGTH                               0x1
#define _INTCON3_INT1E_MASK                                 0x8
#define _INTCON3_INT2E_POSN                                 0x4
#define _INTCON3_INT2E_POSITION                             0x4
#define _INTCON3_INT2E_SIZE                                 0x1
#define _INTCON3_INT2E_LENGTH                               0x1
#define _INTCON3_INT2E_MASK                                 0x10
#define _INTCON3_INT3E_POSN                                 0x5
#define _INTCON3_INT3E_POSITION                             0x5
#define _INTCON3_INT3E_SIZE                                 0x1
#define _INTCON3_INT3E_LENGTH                               0x1
#define _INTCON3_INT3E_MASK                                 0x20
#define _INTCON3_INT1P_POSN                                 0x6
#define _INTCON3_INT1P_POSITION                             0x6
#define _INTCON3_INT1P_SIZE                                 0x1
#define _INTCON3_INT1P_LENGTH                               0x1
#define _INTCON3_INT1P_MASK                                 0x40
#define _INTCON3_INT2P_POSN                                 0x7
#define _INTCON3_INT2P_POSITION                             0x7
#define _INTCON3_INT2P_SIZE                                 0x1
#define _INTCON3_INT2P_LENGTH                               0x1
#define _INTCON3_INT2P_MASK                                 0x80

// Register: INTCON2
extern volatile unsigned char           INTCON2             @ 0xFF1;
#ifndef _LIB_BUILD
asm("INTCON2 equ 0FF1h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned                        :7;
        unsigned NOT_RBPU               :1;
    };
    struct {
        unsigned RBIP                   :1;
        unsigned INT3IP                 :1;
        unsigned TMR0IP                 :1;
        unsigned INTEDG3                :1;
        unsigned INTEDG2                :1;
        unsigned INTEDG1                :1;
        unsigned INTEDG0                :1;
        unsigned nRBPU                  :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT3P                  :1;
        unsigned T0IP                   :1;
        unsigned                        :4;
        unsigned RBPU                   :1;
    };
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;
// bitfield macros
#define _INTCON2_NOT_RBPU_POSN                              0x7
#define _INTCON2_NOT_RBPU_POSITION                          0x7
#define _INTCON2_NOT_RBPU_SIZE                              0x1
#define _INTCON2_NOT_RBPU_LENGTH                            0x1
#define _INTCON2_NOT_RBPU_MASK                              0x80
#define _INTCON2_RBIP_POSN                                  0x0
#define _INTCON2_RBIP_POSITION                              0x0
#define _INTCON2_RBIP_SIZE                                  0x1
#define _INTCON2_RBIP_LENGTH                                0x1
#define _INTCON2_RBIP_MASK                                  0x1
#define _INTCON2_INT3IP_POSN                                0x1
#define _INTCON2_INT3IP_POSITION                            0x1
#define _INTCON2_INT3IP_SIZE                                0x1
#define _INTCON2_INT3IP_LENGTH                              0x1
#define _INTCON2_INT3IP_MASK                                0x2
#define _INTCON2_TMR0IP_POSN                                0x2
#define _INTCON2_TMR0IP_POSITION                            0x2
#define _INTCON2_TMR0IP_SIZE                                0x1
#define _INTCON2_TMR0IP_LENGTH                              0x1
#define _INTCON2_TMR0IP_MASK                                0x4
#define _INTCON2_INTEDG3_POSN                               0x3
#define _INTCON2_INTEDG3_POSITION                           0x3
#define _INTCON2_INTEDG3_SIZE                               0x1
#define _INTCON2_INTEDG3_LENGTH                             0x1
#define _INTCON2_INTEDG3_MASK                               0x8
#define _INTCON2_INTEDG2_POSN                               0x4
#define _INTCON2_INTEDG2_POSITION                           0x4
#define _INTCON2_INTEDG2_SIZE                               0x1
#define _INTCON2_INTEDG2_LENGTH                             0x1
#define _INTCON2_INTEDG2_MASK                               0x10
#define _INTCON2_INTEDG1_POSN                               0x5
#define _INTCON2_INTEDG1_POSITION                           0x5
#define _INTCON2_INTEDG1_SIZE                               0x1
#define _INTCON2_INTEDG1_LENGTH                             0x1
#define _INTCON2_INTEDG1_MASK                               0x20
#define _INTCON2_INTEDG0_POSN                               0x6
#define _INTCON2_INTEDG0_POSITION                           0x6
#define _INTCON2_INTEDG0_SIZE                               0x1
#define _INTCON2_INTEDG0_LENGTH                             0x1
#define _INTCON2_INTEDG0_MASK                               0x40
#define _INTCON2_nRBPU_POSN                                 0x7
#define _INTCON2_nRBPU_POSITION                             0x7
#define _INTCON2_nRBPU_SIZE                                 0x1
#define _INTCON2_nRBPU_LENGTH                               0x1
#define _INTCON2_nRBPU_MASK                                 0x80
#define _INTCON2_INT3P_POSN                                 0x1
#define _INTCON2_INT3P_POSITION                             0x1
#define _INTCON2_INT3P_SIZE                                 0x1
#define _INTCON2_INT3P_LENGTH                               0x1
#define _INTCON2_INT3P_MASK                                 0x2
#define _INTCON2_T0IP_POSN                                  0x2
#define _INTCON2_T0IP_POSITION                              0x2
#define _INTCON2_T0IP_SIZE                                  0x1
#define _INTCON2_T0IP_LENGTH                                0x1
#define _INTCON2_T0IP_MASK                                  0x4
#define _INTCON2_RBPU_POSN                                  0x7
#define _INTCON2_RBPU_POSITION                              0x7
#define _INTCON2_RBPU_SIZE                                  0x1
#define _INTCON2_RBPU_LENGTH                                0x1
#define _INTCON2_RBPU_MASK                                  0x80

// Register: INTCON
extern volatile unsigned char           INTCON              @ 0xFF2;
#ifndef _LIB_BUILD
asm("INTCON equ 0FF2h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned RBIF                   :1;
        unsigned INT0IF                 :1;
        unsigned TMR0IF                 :1;
        unsigned RBIE                   :1;
        unsigned INT0IE                 :1;
        unsigned TMR0IE                 :1;
        unsigned PEIE_GIEL              :1;
        unsigned GIE_GIEH               :1;
    };
    struct {
        unsigned                        :1;
        unsigned INT0F                  :1;
        unsigned T0IF                   :1;
        unsigned                        :1;
        unsigned INT0E                  :1;
        unsigned T0IE                   :1;
        unsigned PEIE                   :1;
        unsigned GIE                    :1;
    };
    struct {
        unsigned                        :6;
        unsigned GIEL                   :1;
        unsigned GIEH                   :1;
    };
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0xFF2;
// bitfield macros
#define _INTCON_RBIF_POSN                                   0x0
#define _INTCON_RBIF_POSITION                               0x0
#define _INTCON_RBIF_SIZE                                   0x1
#define _INTCON_RBIF_LENGTH                                 0x1
#define _INTCON_RBIF_MASK                                   0x1
#define _INTCON_INT0IF_POSN                                 0x1
#define _INTCON_INT0IF_POSITION                             0x1
#define _INTCON_INT0IF_SIZE                                 0x1
#define _INTCON_INT0IF_LENGTH                               0x1
#define _INTCON_INT0IF_MASK                                 0x2
#define _INTCON_TMR0IF_POSN                                 0x2
#define _INTCON_TMR0IF_POSITION                             0x2
#define _INTCON_TMR0IF_SIZE                                 0x1
#define _INTCON_TMR0IF_LENGTH                               0x1
#define _INTCON_TMR0IF_MASK                                 0x4
#define _INTCON_RBIE_POSN                                   0x3
#define _INTCON_RBIE_POSITION                               0x3
#define _INTCON_RBIE_SIZE                                   0x1
#define _INTCON_RBIE_LENGTH                                 0x1
#define _INTCON_RBIE_MASK                                   0x8
#define _INTCON_INT0IE_POSN                                 0x4
#define _INTCON_INT0IE_POSITION                             0x4
#define _INTCON_INT0IE_SIZE                                 0x1
#define _INTCON_INT0IE_LENGTH                               0x1
#define _INTCON_INT0IE_MASK                                 0x10
#define _INTCON_TMR0IE_POSN                                 0x5
#define _INTCON_TMR0IE_POSITION                             0x5
#define _INTCON_TMR0IE_SIZE                                 0x1
#define _INTCON_TMR0IE_LENGTH                               0x1
#define _INTCON_TMR0IE_MASK                                 0x20
#define _INTCON_PEIE_GIEL_POSN                              0x6
#define _INTCON_PEIE_GIEL_POSITION                          0x6
#define _INTCON_PEIE_GIEL_SIZE                              0x1
#define _INTCON_PEIE_GIEL_LENGTH                            0x1
#define _INTCON_PEIE_GIEL_MASK                              0x40
#define _INTCON_GIE_GIEH_POSN                               0x7
#define _INTCON_GIE_GIEH_POSITION                           0x7
#define _INTCON_GIE_GIEH_SIZE                               0x1
#define _INTCON_GIE_GIEH_LENGTH                             0x1
#define _INTCON_GIE_GIEH_MASK                               0x80
#define _INTCON_INT0F_POSN                                  0x1
#define _INTCON_INT0F_POSITION                              0x1
#define _INTCON_INT0F_SIZE                                  0x1
#define _INTCON_INT0F_LENGTH                                0x1
#define _INTCON_INT0F_MASK                                  0x2
#define _INTCON_T0IF_POSN                                   0x2
#define _INTCON_T0IF_POSITION                               0x2
#define _INTCON_T0IF_SIZE                                   0x1
#define _INTCON_T0IF_LENGTH                                 0x1
#define _INTCON_T0IF_MASK                                   0x4
#define _INTCON_INT0E_POSN                                  0x4
#define _INTCON_INT0E_POSITION                              0x4
#define _INTCON_INT0E_SIZE                                  0x1
#define _INTCON_INT0E_LENGTH                                0x1
#define _INTCON_INT0E_MASK                                  0x10
#define _INTCON_T0IE_POSN                                   0x5
#define _INTCON_T0IE_POSITION                               0x5
#define _INTCON_T0IE_SIZE                                   0x1
#define _INTCON_T0IE_LENGTH                                 0x1
#define _INTCON_T0IE_MASK                                   0x20
#define _INTCON_PEIE_POSN                                   0x6
#define _INTCON_PEIE_POSITION                               0x6
#define _INTCON_PEIE_SIZE                                   0x1
#define _INTCON_PEIE_LENGTH                                 0x1
#define _INTCON_PEIE_MASK                                   0x40
#define _INTCON_GIE_POSN                                    0x7
#define _INTCON_GIE_POSITION                                0x7
#define _INTCON_GIE_SIZE                                    0x1
#define _INTCON_GIE_LENGTH                                  0x1
#define _INTCON_GIE_MASK                                    0x80
#define _INTCON_GIEL_POSN                                   0x6
#define _INTCON_GIEL_POSITION                               0x6
#define _INTCON_GIEL_SIZE                                   0x1
#define _INTCON_GIEL_LENGTH                                 0x1
#define _INTCON_GIEL_MASK                                   0x40
#define _INTCON_GIEH_POSN                                   0x7
#define _INTCON_GIEH_POSITION                               0x7
#define _INTCON_GIEH_SIZE                                   0x1
#define _INTCON_GIEH_LENGTH                                 0x1
#define _INTCON_GIEH_MASK                                   0x80

// Register: PROD
extern volatile unsigned short          PROD                @ 0xFF3;
#ifndef _LIB_BUILD
asm("PROD equ 0FF3h");
#endif

// Register: PRODL
extern volatile unsigned char           PRODL               @ 0xFF3;
#ifndef _LIB_BUILD
asm("PRODL equ 0FF3h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRODL                  :8;
    };
} PRODLbits_t;
extern volatile PRODLbits_t PRODLbits @ 0xFF3;
// bitfield macros
#define _PRODL_PRODL_POSN                                   0x0
#define _PRODL_PRODL_POSITION                               0x0
#define _PRODL_PRODL_SIZE                                   0x8
#define _PRODL_PRODL_LENGTH                                 0x8
#define _PRODL_PRODL_MASK                                   0xFF

// Register: PRODH
extern volatile unsigned char           PRODH               @ 0xFF4;
#ifndef _LIB_BUILD
asm("PRODH equ 0FF4h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PRODH                  :8;
    };
} PRODHbits_t;
extern volatile PRODHbits_t PRODHbits @ 0xFF4;
// bitfield macros
#define _PRODH_PRODH_POSN                                   0x0
#define _PRODH_PRODH_POSITION                               0x0
#define _PRODH_PRODH_SIZE                                   0x8
#define _PRODH_PRODH_LENGTH                                 0x8
#define _PRODH_PRODH_MASK                                   0xFF

// Register: TABLAT
extern volatile unsigned char           TABLAT              @ 0xFF5;
#ifndef _LIB_BUILD
asm("TABLAT equ 0FF5h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TABLAT                 :8;
    };
} TABLATbits_t;
extern volatile TABLATbits_t TABLATbits @ 0xFF5;
// bitfield macros
#define _TABLAT_TABLAT_POSN                                 0x0
#define _TABLAT_TABLAT_POSITION                             0x0
#define _TABLAT_TABLAT_SIZE                                 0x8
#define _TABLAT_TABLAT_LENGTH                               0x8
#define _TABLAT_TABLAT_MASK                                 0xFF

// Register: TBLPTR
#ifndef __CCI__
extern volatile unsigned short long     TBLPTR              @ 0xFF6;
#endif
#ifndef _LIB_BUILD
asm("TBLPTR equ 0FF6h");
#endif

// Register: TBLPTRL
extern volatile unsigned char           TBLPTRL             @ 0xFF6;
#ifndef _LIB_BUILD
asm("TBLPTRL equ 0FF6h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TBLPTRL                :8;
    };
} TBLPTRLbits_t;
extern volatile TBLPTRLbits_t TBLPTRLbits @ 0xFF6;
// bitfield macros
#define _TBLPTRL_TBLPTRL_POSN                               0x0
#define _TBLPTRL_TBLPTRL_POSITION                           0x0
#define _TBLPTRL_TBLPTRL_SIZE                               0x8
#define _TBLPTRL_TBLPTRL_LENGTH                             0x8
#define _TBLPTRL_TBLPTRL_MASK                               0xFF

// Register: TBLPTRH
extern volatile unsigned char           TBLPTRH             @ 0xFF7;
#ifndef _LIB_BUILD
asm("TBLPTRH equ 0FF7h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TBLPTRH                :8;
    };
} TBLPTRHbits_t;
extern volatile TBLPTRHbits_t TBLPTRHbits @ 0xFF7;
// bitfield macros
#define _TBLPTRH_TBLPTRH_POSN                               0x0
#define _TBLPTRH_TBLPTRH_POSITION                           0x0
#define _TBLPTRH_TBLPTRH_SIZE                               0x8
#define _TBLPTRH_TBLPTRH_LENGTH                             0x8
#define _TBLPTRH_TBLPTRH_MASK                               0xFF

// Register: TBLPTRU
extern volatile unsigned char           TBLPTRU             @ 0xFF8;
#ifndef _LIB_BUILD
asm("TBLPTRU equ 0FF8h");
#endif

// Register: PCLAT
#ifndef __CCI__
extern volatile unsigned short long     PCLAT               @ 0xFF9;
#endif
#ifndef _LIB_BUILD
asm("PCLAT equ 0FF9h");
#endif
// aliases
#ifndef __CCI__
extern volatile unsigned short long     PC                  @ 0xFF9;
#endif
#ifndef _LIB_BUILD
asm("PC equ 0FF9h");
#endif

// Register: PCL
extern volatile unsigned char           PCL                 @ 0xFF9;
#ifndef _LIB_BUILD
asm("PCL equ 0FF9h");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCL                    :8;
    };
} PCLbits_t;
extern volatile PCLbits_t PCLbits @ 0xFF9;
// bitfield macros
#define _PCL_PCL_POSN                                       0x0
#define _PCL_PCL_POSITION                                   0x0
#define _PCL_PCL_SIZE                                       0x8
#define _PCL_PCL_LENGTH                                     0x8
#define _PCL_PCL_MASK                                       0xFF

// Register: PCLATH
extern volatile unsigned char           PCLATH              @ 0xFFA;
#ifndef _LIB_BUILD
asm("PCLATH equ 0FFAh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned PCH                    :8;
    };
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits @ 0xFFA;
// bitfield macros
#define _PCLATH_PCH_POSN                                    0x0
#define _PCLATH_PCH_POSITION                                0x0
#define _PCLATH_PCH_SIZE                                    0x8
#define _PCLATH_PCH_LENGTH                                  0x8
#define _PCLATH_PCH_MASK                                    0xFF

// Register: PCLATU
extern volatile unsigned char           PCLATU              @ 0xFFB;
#ifndef _LIB_BUILD
asm("PCLATU equ 0FFBh");
#endif

// Register: STKPTR
extern volatile unsigned char           STKPTR              @ 0xFFC;
#ifndef _LIB_BUILD
asm("STKPTR equ 0FFCh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned STKPTR                 :5;
        unsigned                        :1;
        unsigned STKUNF                 :1;
        unsigned STKFUL                 :1;
    };
    struct {
        unsigned SP0                    :1;
        unsigned SP1                    :1;
        unsigned SP2                    :1;
        unsigned SP3                    :1;
        unsigned SP4                    :1;
        unsigned                        :2;
        unsigned STKOVF                 :1;
    };
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;
// bitfield macros
#define _STKPTR_STKPTR_POSN                                 0x0
#define _STKPTR_STKPTR_POSITION                             0x0
#define _STKPTR_STKPTR_SIZE                                 0x5
#define _STKPTR_STKPTR_LENGTH                               0x5
#define _STKPTR_STKPTR_MASK                                 0x1F
#define _STKPTR_STKUNF_POSN                                 0x6
#define _STKPTR_STKUNF_POSITION                             0x6
#define _STKPTR_STKUNF_SIZE                                 0x1
#define _STKPTR_STKUNF_LENGTH                               0x1
#define _STKPTR_STKUNF_MASK                                 0x40
#define _STKPTR_STKFUL_POSN                                 0x7
#define _STKPTR_STKFUL_POSITION                             0x7
#define _STKPTR_STKFUL_SIZE                                 0x1
#define _STKPTR_STKFUL_LENGTH                               0x1
#define _STKPTR_STKFUL_MASK                                 0x80
#define _STKPTR_SP0_POSN                                    0x0
#define _STKPTR_SP0_POSITION                                0x0
#define _STKPTR_SP0_SIZE                                    0x1
#define _STKPTR_SP0_LENGTH                                  0x1
#define _STKPTR_SP0_MASK                                    0x1
#define _STKPTR_SP1_POSN                                    0x1
#define _STKPTR_SP1_POSITION                                0x1
#define _STKPTR_SP1_SIZE                                    0x1
#define _STKPTR_SP1_LENGTH                                  0x1
#define _STKPTR_SP1_MASK                                    0x2
#define _STKPTR_SP2_POSN                                    0x2
#define _STKPTR_SP2_POSITION                                0x2
#define _STKPTR_SP2_SIZE                                    0x1
#define _STKPTR_SP2_LENGTH                                  0x1
#define _STKPTR_SP2_MASK                                    0x4
#define _STKPTR_SP3_POSN                                    0x3
#define _STKPTR_SP3_POSITION                                0x3
#define _STKPTR_SP3_SIZE                                    0x1
#define _STKPTR_SP3_LENGTH                                  0x1
#define _STKPTR_SP3_MASK                                    0x8
#define _STKPTR_SP4_POSN                                    0x4
#define _STKPTR_SP4_POSITION                                0x4
#define _STKPTR_SP4_SIZE                                    0x1
#define _STKPTR_SP4_LENGTH                                  0x1
#define _STKPTR_SP4_MASK                                    0x10
#define _STKPTR_STKOVF_POSN                                 0x7
#define _STKPTR_STKOVF_POSITION                             0x7
#define _STKPTR_STKOVF_SIZE                                 0x1
#define _STKPTR_STKOVF_LENGTH                               0x1
#define _STKPTR_STKOVF_MASK                                 0x80

// Register: TOS
#ifndef __CCI__
extern volatile unsigned short long     TOS                 @ 0xFFD;
#endif
#ifndef _LIB_BUILD
asm("TOS equ 0FFDh");
#endif

// Register: TOSL
extern volatile unsigned char           TOSL                @ 0xFFD;
#ifndef _LIB_BUILD
asm("TOSL equ 0FFDh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSL                   :8;
    };
} TOSLbits_t;
extern volatile TOSLbits_t TOSLbits @ 0xFFD;
// bitfield macros
#define _TOSL_TOSL_POSN                                     0x0
#define _TOSL_TOSL_POSITION                                 0x0
#define _TOSL_TOSL_SIZE                                     0x8
#define _TOSL_TOSL_LENGTH                                   0x8
#define _TOSL_TOSL_MASK                                     0xFF

// Register: TOSH
extern volatile unsigned char           TOSH                @ 0xFFE;
#ifndef _LIB_BUILD
asm("TOSH equ 0FFEh");
#endif
// bitfield definitions
typedef union {
    struct {
        unsigned TOSH                   :8;
    };
} TOSHbits_t;
extern volatile TOSHbits_t TOSHbits @ 0xFFE;
// bitfield macros
#define _TOSH_TOSH_POSN                                     0x0
#define _TOSH_TOSH_POSITION                                 0x0
#define _TOSH_TOSH_SIZE                                     0x8
#define _TOSH_TOSH_LENGTH                                   0x8
#define _TOSH_TOSH_MASK                                     0xFF

// Register: TOSU
extern volatile unsigned char           TOSU                @ 0xFFF;
#ifndef _LIB_BUILD
asm("TOSU equ 0FFFh");
#endif

/*
 * Bit Definitions
 *  */
#define _DEPRECATED __attribute__((__deprecated__))
#ifndef BANKMASK
#define BANKMASK(addr) ((addr)&0FFh)
#endif
extern volatile __bit                   ABDEN1              @ (((unsigned) &BAUDCON1)*8) + 0;
#define                                 ABDEN1_bit          BANKMASK(BAUDCON1), 0
extern volatile __bit                   ABDEN2              @ (((unsigned) &BAUDCON2)*8) + 0;
#define                                 ABDEN2_bit          BANKMASK(BAUDCON2), 0
extern volatile __bit                   ABDOVF1             @ (((unsigned) &BAUDCON1)*8) + 7;
#define                                 ABDOVF1_bit         BANKMASK(BAUDCON1), 7
extern volatile __bit                   ABDOVF2             @ (((unsigned) &BAUDCON2)*8) + 7;
#define                                 ABDOVF2_bit         BANKMASK(BAUDCON2), 7
extern volatile __bit                   ACKDT1              @ (((unsigned) &SSP1CON2)*8) + 5;
#define                                 ACKDT1_bit          BANKMASK(SSP1CON2), 5
extern volatile __bit                   ACKDT2              @ (((unsigned) &SSP2CON2)*8) + 5;
#define                                 ACKDT2_bit          BANKMASK(SSP2CON2), 5
extern volatile __bit                   ACKEN1              @ (((unsigned) &SSP1CON2)*8) + 4;
#define                                 ACKEN1_bit          BANKMASK(SSP1CON2), 4
extern volatile __bit                   ACKEN2              @ (((unsigned) &SSP2CON2)*8) + 4;
#define                                 ACKEN2_bit          BANKMASK(SSP2CON2), 4
extern volatile __bit                   ACKSTAT1            @ (((unsigned) &SSP1CON2)*8) + 6;
#define                                 ACKSTAT1_bit        BANKMASK(SSP1CON2), 6
extern volatile __bit                   ACKSTAT2            @ (((unsigned) &SSP2CON2)*8) + 6;
#define                                 ACKSTAT2_bit        BANKMASK(SSP2CON2), 6
extern volatile __bit                   ACQT0               @ (((unsigned) &ADCON1)*8) + 3;
#define                                 ACQT0_bit           BANKMASK(ADCON1), 3
extern volatile __bit                   ACQT1               @ (((unsigned) &ADCON1)*8) + 4;
#define                                 ACQT1_bit           BANKMASK(ADCON1), 4
extern volatile __bit                   ACQT2               @ (((unsigned) &ADCON1)*8) + 5;
#define                                 ACQT2_bit           BANKMASK(ADCON1), 5
extern volatile __bit                   ACTVIE              @ (((unsigned) &UIE)*8) + 2;
#define                                 ACTVIE_bit          BANKMASK(UIE), 2
extern volatile __bit                   ACTVIF              @ (((unsigned) &UIR)*8) + 2;
#define                                 ACTVIF_bit          BANKMASK(UIR), 2
extern volatile __bit _DEPRECATED       ADCAL               @ (((unsigned) &ADCON1)*8) + 6;
#define                                 ADCAL_bit           BANKMASK(ADCON1), 6
extern volatile __bit                   ADCMD               @ (((unsigned) &PMDIS0)*8) + 0;
#define                                 ADCMD_bit           BANKMASK(PMDIS0), 0
extern volatile __bit                   ADCS0               @ (((unsigned) &ADCON1)*8) + 0;
#define                                 ADCS0_bit           BANKMASK(ADCON1), 0
extern volatile __bit                   ADCS1               @ (((unsigned) &ADCON1)*8) + 1;
#define                                 ADCS1_bit           BANKMASK(ADCON1), 1
extern volatile __bit                   ADCS2               @ (((unsigned) &ADCON1)*8) + 2;
#define                                 ADCS2_bit           BANKMASK(ADCON1), 2
extern volatile __bit                   ADDEN1              @ (((unsigned) &RCSTA1)*8) + 3;
#define                                 ADDEN1_bit          BANKMASK(RCSTA1), 3
extern volatile __bit                   ADDEN2              @ (((unsigned) &RCSTA2)*8) + 3;
#define                                 ADDEN2_bit          BANKMASK(RCSTA2), 3
extern volatile __bit                   ADDR0               @ (((unsigned) &UADDR)*8) + 0;
#define                                 ADDR0_bit           BANKMASK(UADDR), 0
extern volatile __bit                   ADDR1               @ (((unsigned) &UADDR)*8) + 1;
#define                                 ADDR1_bit           BANKMASK(UADDR), 1
extern volatile __bit                   ADDR2               @ (((unsigned) &UADDR)*8) + 2;
#define                                 ADDR2_bit           BANKMASK(UADDR), 2
extern volatile __bit                   ADDR3               @ (((unsigned) &UADDR)*8) + 3;
#define                                 ADDR3_bit           BANKMASK(UADDR), 3
extern volatile __bit                   ADDR4               @ (((unsigned) &UADDR)*8) + 4;
#define                                 ADDR4_bit           BANKMASK(UADDR), 4
extern volatile __bit                   ADDR5               @ (((unsigned) &UADDR)*8) + 5;
#define                                 ADDR5_bit           BANKMASK(UADDR), 5
extern volatile __bit                   ADDR6               @ (((unsigned) &UADDR)*8) + 6;
#define                                 ADDR6_bit           BANKMASK(UADDR), 6
extern volatile __bit                   ADEN                @ (((unsigned) &RCSTA1)*8) + 3;
#define                                 ADEN_bit            BANKMASK(RCSTA1), 3
extern volatile __bit                   ADFM                @ (((unsigned) &ADCON1)*8) + 7;
#define                                 ADFM_bit            BANKMASK(ADCON1), 7
extern volatile __bit                   ADIE                @ (((unsigned) &PIE1)*8) + 6;
#define                                 ADIE_bit            BANKMASK(PIE1), 6
extern volatile __bit                   ADIF                @ (((unsigned) &PIR1)*8) + 6;
#define                                 ADIF_bit            BANKMASK(PIR1), 6
extern volatile __bit                   ADIP                @ (((unsigned) &IPR1)*8) + 6;
#define                                 ADIP_bit            BANKMASK(IPR1), 6
extern volatile __bit                   ADMSK11             @ (((unsigned) &SSP1CON2)*8) + 1;
#define                                 ADMSK11_bit         BANKMASK(SSP1CON2), 1
extern volatile __bit                   ADMSK12             @ (((unsigned) &SSP2CON2)*8) + 1;
#define                                 ADMSK12_bit         BANKMASK(SSP2CON2), 1
extern volatile __bit                   ADMSK21             @ (((unsigned) &SSP1CON2)*8) + 2;
#define                                 ADMSK21_bit         BANKMASK(SSP1CON2), 2
extern volatile __bit                   ADMSK22             @ (((unsigned) &SSP2CON2)*8) + 2;
#define                                 ADMSK22_bit         BANKMASK(SSP2CON2), 2
extern volatile __bit                   ADMSK31             @ (((unsigned) &SSP1CON2)*8) + 3;
#define                                 ADMSK31_bit         BANKMASK(SSP1CON2), 3
extern volatile __bit                   ADMSK32             @ (((unsigned) &SSP2CON2)*8) + 3;
#define                                 ADMSK32_bit         BANKMASK(SSP2CON2), 3
extern volatile __bit                   ADMSK41             @ (((unsigned) &SSP1CON2)*8) + 4;
#define                                 ADMSK41_bit         BANKMASK(SSP1CON2), 4
extern volatile __bit                   ADMSK42             @ (((unsigned) &SSP2CON2)*8) + 4;
#define                                 ADMSK42_bit         BANKMASK(SSP2CON2), 4
extern volatile __bit                   ADMSK51             @ (((unsigned) &SSP1CON2)*8) + 5;
#define                                 ADMSK51_bit         BANKMASK(SSP1CON2), 5
extern volatile __bit                   ADMSK52             @ (((unsigned) &SSP2CON2)*8) + 5;
#define                                 ADMSK52_bit         BANKMASK(SSP2CON2), 5
extern volatile __bit                   ADON                @ (((unsigned) &ADCON0)*8) + 0;
#define                                 ADON_bit            BANKMASK(ADCON0), 0
extern volatile __bit                   ALRMEN              @ (((unsigned) &ALRMCFG)*8) + 7;
#define                                 ALRMEN_bit          BANKMASK(ALRMCFG), 7
extern volatile __bit                   ALRMPTR0            @ (((unsigned) &ALRMCFG)*8) + 0;
#define                                 ALRMPTR0_bit        BANKMASK(ALRMCFG), 0
extern volatile __bit                   ALRMPTR1            @ (((unsigned) &ALRMCFG)*8) + 1;
#define                                 ALRMPTR1_bit        BANKMASK(ALRMCFG), 1
extern volatile __bit                   AMASK0              @ (((unsigned) &ALRMCFG)*8) + 2;
#define                                 AMASK0_bit          BANKMASK(ALRMCFG), 2
extern volatile __bit                   AMASK1              @ (((unsigned) &ALRMCFG)*8) + 3;
#define                                 AMASK1_bit          BANKMASK(ALRMCFG), 3
extern volatile __bit                   AMASK2              @ (((unsigned) &ALRMCFG)*8) + 4;
#define                                 AMASK2_bit          BANKMASK(ALRMCFG), 4
extern volatile __bit                   AMASK3              @ (((unsigned) &ALRMCFG)*8) + 5;
#define                                 AMASK3_bit          BANKMASK(ALRMCFG), 5
extern volatile __bit                   AN0                 @ (((unsigned) &PORTA)*8) + 0;
#define                                 AN0_bit             BANKMASK(PORTA), 0
extern volatile __bit                   AN1                 @ (((unsigned) &PORTA)*8) + 1;
#define                                 AN1_bit             BANKMASK(PORTA), 1
extern volatile __bit                   AN10                @ (((unsigned) &PORTB)*8) + 1;
#define                                 AN10_bit            BANKMASK(PORTB), 1
extern volatile __bit                   AN11                @ (((unsigned) &PORTC)*8) + 2;
#define                                 AN11_bit            BANKMASK(PORTC), 2
extern volatile __bit                   AN12                @ (((unsigned) &PORTB)*8) + 0;
#define                                 AN12_bit            BANKMASK(PORTB), 0
extern volatile __bit                   AN2                 @ (((unsigned) &PORTA)*8) + 2;
#define                                 AN2_bit             BANKMASK(PORTA), 2
extern volatile __bit                   AN3                 @ (((unsigned) &PORTA)*8) + 3;
#define                                 AN3_bit             BANKMASK(PORTA), 3
extern volatile __bit                   AN4                 @ (((unsigned) &PORTA)*8) + 5;
#define                                 AN4_bit             BANKMASK(PORTA), 5
extern volatile __bit                   AN8                 @ (((unsigned) &PORTB)*8) + 2;
#define                                 AN8_bit             BANKMASK(PORTB), 2
extern volatile __bit                   AN9                 @ (((unsigned) &PORTB)*8) + 3;
#define                                 AN9_bit             BANKMASK(PORTB), 3
extern volatile __bit                   ARPT0               @ (((unsigned) &ALRMRPT)*8) + 0;
#define                                 ARPT0_bit           BANKMASK(ALRMRPT), 0
extern volatile __bit                   ARPT1               @ (((unsigned) &ALRMRPT)*8) + 1;
#define                                 ARPT1_bit           BANKMASK(ALRMRPT), 1
extern volatile __bit                   ARPT2               @ (((unsigned) &ALRMRPT)*8) + 2;
#define                                 ARPT2_bit           BANKMASK(ALRMRPT), 2
extern volatile __bit                   ARPT3               @ (((unsigned) &ALRMRPT)*8) + 3;
#define                                 ARPT3_bit           BANKMASK(ALRMRPT), 3
extern volatile __bit                   ARPT4               @ (((unsigned) &ALRMRPT)*8) + 4;
#define                                 ARPT4_bit           BANKMASK(ALRMRPT), 4
extern volatile __bit                   ARPT5               @ (((unsigned) &ALRMRPT)*8) + 5;
#define                                 ARPT5_bit           BANKMASK(ALRMRPT), 5
extern volatile __bit                   ARPT6               @ (((unsigned) &ALRMRPT)*8) + 6;
#define                                 ARPT6_bit           BANKMASK(ALRMRPT), 6
extern volatile __bit                   ARPT7               @ (((unsigned) &ALRMRPT)*8) + 7;
#define                                 ARPT7_bit           BANKMASK(ALRMRPT), 7
extern volatile __bit                   BCL1IE              @ (((unsigned) &PIE2)*8) + 3;
#define                                 BCL1IE_bit          BANKMASK(PIE2), 3
extern volatile __bit                   BCL1IF              @ (((unsigned) &PIR2)*8) + 3;
#define                                 BCL1IF_bit          BANKMASK(PIR2), 3
extern volatile __bit                   BCL1IP              @ (((unsigned) &IPR2)*8) + 3;
#define                                 BCL1IP_bit          BANKMASK(IPR2), 3
extern volatile __bit                   BCL2IE              @ (((unsigned) &PIE3)*8) + 6;
#define                                 BCL2IE_bit          BANKMASK(PIE3), 6
extern volatile __bit                   BCL2IF              @ (((unsigned) &PIR3)*8) + 6;
#define                                 BCL2IF_bit          BANKMASK(PIR3), 6
extern volatile __bit                   BCL2IP              @ (((unsigned) &IPR3)*8) + 6;
#define                                 BCL2IP_bit          BANKMASK(IPR3), 6
extern volatile __bit                   BCLIE               @ (((unsigned) &PIE2)*8) + 3;
#define                                 BCLIE_bit           BANKMASK(PIE2), 3
extern volatile __bit                   BCLIF               @ (((unsigned) &PIR2)*8) + 3;
#define                                 BCLIF_bit           BANKMASK(PIR2), 3
extern volatile __bit                   BCLIP               @ (((unsigned) &IPR2)*8) + 3;
#define                                 BCLIP_bit           BANKMASK(IPR2), 3
extern volatile __bit                   BF1                 @ (((unsigned) &SSP1STAT)*8) + 0;
#define                                 BF1_bit             BANKMASK(SSP1STAT), 0
extern volatile __bit                   BF2                 @ (((unsigned) &SSP2STAT)*8) + 0;
#define                                 BF2_bit             BANKMASK(SSP2STAT), 0
extern volatile __bit                   BGVST               @ (((unsigned) &HLVDCON)*8) + 6;
#define                                 BGVST_bit           BANKMASK(HLVDCON), 6
extern volatile __bit                   BOR                 @ (((unsigned) &RCON)*8) + 0;
#define                                 BOR_bit             BANKMASK(RCON), 0
extern volatile __bit                   BRG161              @ (((unsigned) &BAUDCON1)*8) + 3;
#define                                 BRG161_bit          BANKMASK(BAUDCON1), 3
extern volatile __bit                   BRG162              @ (((unsigned) &BAUDCON2)*8) + 3;
#define                                 BRG162_bit          BANKMASK(BAUDCON2), 3
extern volatile __bit                   BRGH1               @ (((unsigned) &TXSTA1)*8) + 2;
#define                                 BRGH1_bit           BANKMASK(TXSTA1), 2
extern volatile __bit                   BRGH2               @ (((unsigned) &TXSTA2)*8) + 2;
#define                                 BRGH2_bit           BANKMASK(TXSTA2), 2
extern volatile __bit                   BTOEE               @ (((unsigned) &UEIE)*8) + 4;
#define                                 BTOEE_bit           BANKMASK(UEIE), 4
extern volatile __bit                   BTOEF               @ (((unsigned) &UEIR)*8) + 4;
#define                                 BTOEF_bit           BANKMASK(UEIR), 4
extern volatile __bit                   BTSEE               @ (((unsigned) &UEIE)*8) + 7;
#define                                 BTSEE_bit           BANKMASK(UEIE), 7
extern volatile __bit                   BTSEF               @ (((unsigned) &UEIR)*8) + 7;
#define                                 BTSEF_bit           BANKMASK(UEIR), 7
extern volatile __bit                   C10TSEL0            @ (((unsigned) &CCPTMRS2)*8) + 4;
#define                                 C10TSEL0_bit        BANKMASK(CCPTMRS2), 4
extern volatile __bit                   C1CH0               @ (((unsigned) &CM1CON)*8) + 0;
#define                                 C1CH0_bit           BANKMASK(CM1CON), 0
extern volatile __bit                   C1CH1               @ (((unsigned) &CM1CON)*8) + 1;
#define                                 C1CH1_bit           BANKMASK(CM1CON), 1
extern volatile __bit                   C1INA               @ (((unsigned) &PORTA)*8) + 0;
#define                                 C1INA_bit           BANKMASK(PORTA), 0
extern volatile __bit                   C1INB               @ (((unsigned) &PORTA)*8) + 3;
#define                                 C1INB_bit           BANKMASK(PORTA), 3
extern volatile __bit                   C1INC               @ (((unsigned) &PORTA)*8) + 5;
#define                                 C1INC_bit           BANKMASK(PORTA), 5
extern volatile __bit                   C1IND               @ (((unsigned) &PORTA)*8) + 2;
#define                                 C1IND_bit           BANKMASK(PORTA), 2
extern volatile __bit                   C1TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 0;
#define                                 C1TSEL0_bit         BANKMASK(CCPTMRS0), 0
extern volatile __bit                   C1TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 1;
#define                                 C1TSEL1_bit         BANKMASK(CCPTMRS0), 1
extern volatile __bit                   C1TSEL2             @ (((unsigned) &CCPTMRS0)*8) + 2;
#define                                 C1TSEL2_bit         BANKMASK(CCPTMRS0), 2
extern volatile __bit                   C2INA               @ (((unsigned) &PORTA)*8) + 1;
#define                                 C2INA_bit           BANKMASK(PORTA), 1
extern volatile __bit                   C2INB               @ (((unsigned) &PORTA)*8) + 2;
#define                                 C2INB_bit           BANKMASK(PORTA), 2
extern volatile __bit                   C2INC               @ (((unsigned) &PORTB)*8) + 2;
#define                                 C2INC_bit           BANKMASK(PORTB), 2
extern volatile __bit                   C2IND               @ (((unsigned) &PORTC)*8) + 2;
#define                                 C2IND_bit           BANKMASK(PORTC), 2
extern volatile __bit                   C2TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 3;
#define                                 C2TSEL0_bit         BANKMASK(CCPTMRS0), 3
extern volatile __bit                   C2TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 4;
#define                                 C2TSEL1_bit         BANKMASK(CCPTMRS0), 4
extern volatile __bit                   C2TSEL2             @ (((unsigned) &CCPTMRS0)*8) + 5;
#define                                 C2TSEL2_bit         BANKMASK(CCPTMRS0), 5
extern volatile __bit                   C3INA               @ (((unsigned) &PORTB)*8) + 3;
#define                                 C3INA_bit           BANKMASK(PORTB), 3
extern volatile __bit                   C3INB               @ (((unsigned) &PORTA)*8) + 2;
#define                                 C3INB_bit           BANKMASK(PORTA), 2
extern volatile __bit                   C3INC               @ (((unsigned) &PORTB)*8) + 1;
#define                                 C3INC_bit           BANKMASK(PORTB), 1
extern volatile __bit                   C3IND               @ (((unsigned) &PORTB)*8) + 0;
#define                                 C3IND_bit           BANKMASK(PORTB), 0
extern volatile __bit                   C3TSEL0             @ (((unsigned) &CCPTMRS0)*8) + 6;
#define                                 C3TSEL0_bit         BANKMASK(CCPTMRS0), 6
extern volatile __bit                   C3TSEL1             @ (((unsigned) &CCPTMRS0)*8) + 7;
#define                                 C3TSEL1_bit         BANKMASK(CCPTMRS0), 7
extern volatile __bit                   C4TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 0;
#define                                 C4TSEL0_bit         BANKMASK(CCPTMRS1), 0
extern volatile __bit                   C4TSEL1             @ (((unsigned) &CCPTMRS1)*8) + 1;
#define                                 C4TSEL1_bit         BANKMASK(CCPTMRS1), 1
extern volatile __bit                   C5TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 2;
#define                                 C5TSEL0_bit         BANKMASK(CCPTMRS1), 2
extern volatile __bit                   C6TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 4;
#define                                 C6TSEL0_bit         BANKMASK(CCPTMRS1), 4
extern volatile __bit                   C7TSEL0             @ (((unsigned) &CCPTMRS1)*8) + 6;
#define                                 C7TSEL0_bit         BANKMASK(CCPTMRS1), 6
extern volatile __bit                   C7TSEL1             @ (((unsigned) &CCPTMRS1)*8) + 7;
#define                                 C7TSEL1_bit         BANKMASK(CCPTMRS1), 7
extern volatile __bit                   C8TSEL0             @ (((unsigned) &CCPTMRS2)*8) + 0;
#define                                 C8TSEL0_bit         BANKMASK(CCPTMRS2), 0
extern volatile __bit                   C8TSEL1             @ (((unsigned) &CCPTMRS2)*8) + 1;
#define                                 C8TSEL1_bit         BANKMASK(CCPTMRS2), 1
extern volatile __bit                   C9TSEL0             @ (((unsigned) &CCPTMRS2)*8) + 2;
#define                                 C9TSEL0_bit         BANKMASK(CCPTMRS2), 2
extern volatile __bit                   CAL0                @ (((unsigned) &RTCCAL)*8) + 0;
#define                                 CAL0_bit            BANKMASK(RTCCAL), 0
extern volatile __bit                   CAL1                @ (((unsigned) &RTCCAL)*8) + 1;
#define                                 CAL1_bit            BANKMASK(RTCCAL), 1
extern volatile __bit                   CAL2                @ (((unsigned) &RTCCAL)*8) + 2;
#define                                 CAL2_bit            BANKMASK(RTCCAL), 2
extern volatile __bit                   CAL3                @ (((unsigned) &RTCCAL)*8) + 3;
#define                                 CAL3_bit            BANKMASK(RTCCAL), 3
extern volatile __bit                   CAL4                @ (((unsigned) &RTCCAL)*8) + 4;
#define                                 CAL4_bit            BANKMASK(RTCCAL), 4
extern volatile __bit                   CAL5                @ (((unsigned) &RTCCAL)*8) + 5;
#define                                 CAL5_bit            BANKMASK(RTCCAL), 5
extern volatile __bit                   CAL6                @ (((unsigned) &RTCCAL)*8) + 6;
#define                                 CAL6_bit            BANKMASK(RTCCAL), 6
extern volatile __bit                   CAL7                @ (((unsigned) &RTCCAL)*8) + 7;
#define                                 CAL7_bit            BANKMASK(RTCCAL), 7
extern volatile __bit                   CARRY               @ (((unsigned) &STATUS)*8) + 0;
#define                                 CARRY_bit           BANKMASK(STATUS), 0
extern volatile __bit                   CCH01               @ (((unsigned) &CM1CON)*8) + 0;
#define                                 CCH01_bit           BANKMASK(CM1CON), 0
extern volatile __bit                   CCH02               @ (((unsigned) &CM2CON)*8) + 0;
#define                                 CCH02_bit           BANKMASK(CM2CON), 0
extern volatile __bit                   CCH03               @ (((unsigned) &CM3CON)*8) + 0;
#define                                 CCH03_bit           BANKMASK(CM3CON), 0
extern volatile __bit                   CCH05               @ (((unsigned) &IPR5)*8) + 0;
#define                                 CCH05_bit           BANKMASK(IPR5), 0
extern volatile __bit                   CCH11               @ (((unsigned) &CM1CON)*8) + 1;
#define                                 CCH11_bit           BANKMASK(CM1CON), 1
extern volatile __bit                   CCH12               @ (((unsigned) &CM2CON)*8) + 1;
#define                                 CCH12_bit           BANKMASK(CM2CON), 1
extern volatile __bit                   CCH13               @ (((unsigned) &CM3CON)*8) + 1;
#define                                 CCH13_bit           BANKMASK(CM3CON), 1
extern volatile __bit                   CCH15               @ (((unsigned) &IPR5)*8) + 1;
#define                                 CCH15_bit           BANKMASK(IPR5), 1
extern volatile __bit                   CCIP3IP             @ (((unsigned) &IPR4)*8) + 0;
#define                                 CCIP3IP_bit         BANKMASK(IPR4), 0
extern volatile __bit                   CCP10               @ (((unsigned) &PORTC)*8) + 7;
#define                                 CCP10_bit           BANKMASK(PORTC), 7
extern volatile __bit                   CCP10IE             @ (((unsigned) &PIE4)*8) + 7;
#define                                 CCP10IE_bit         BANKMASK(PIE4), 7
extern volatile __bit                   CCP10IF             @ (((unsigned) &PIR4)*8) + 7;
#define                                 CCP10IF_bit         BANKMASK(PIR4), 7
extern volatile __bit                   CCP10IP             @ (((unsigned) &IPR4)*8) + 7;
#define                                 CCP10IP_bit         BANKMASK(IPR4), 7
extern volatile __bit                   CCP10M0             @ (((unsigned) &CCP10CON)*8) + 0;
#define                                 CCP10M0_bit         BANKMASK(CCP10CON), 0
extern volatile __bit                   CCP10M1             @ (((unsigned) &CCP10CON)*8) + 1;
#define                                 CCP10M1_bit         BANKMASK(CCP10CON), 1
extern volatile __bit                   CCP10M2             @ (((unsigned) &CCP10CON)*8) + 2;
#define                                 CCP10M2_bit         BANKMASK(CCP10CON), 2
extern volatile __bit                   CCP10M3             @ (((unsigned) &CCP10CON)*8) + 3;
#define                                 CCP10M3_bit         BANKMASK(CCP10CON), 3
extern volatile __bit                   CCP10MD             @ (((unsigned) &PMDIS3)*8) + 7;
#define                                 CCP10MD_bit         BANKMASK(PMDIS3), 7
extern volatile __bit                   CCP10OD             @ (((unsigned) &ODCON2)*8) + 3;
#define                                 CCP10OD_bit         BANKMASK(ODCON2), 3
extern volatile __bit                   CCP1IE              @ (((unsigned) &PIE1)*8) + 2;
#define                                 CCP1IE_bit          BANKMASK(PIE1), 2
extern volatile __bit                   CCP1IF              @ (((unsigned) &PIR1)*8) + 2;
#define                                 CCP1IF_bit          BANKMASK(PIR1), 2
extern volatile __bit                   CCP1IP              @ (((unsigned) &IPR1)*8) + 2;
#define                                 CCP1IP_bit          BANKMASK(IPR1), 2
extern volatile __bit                   CCP1M0              @ (((unsigned) &CCP1CON)*8) + 0;
#define                                 CCP1M0_bit          BANKMASK(CCP1CON), 0
extern volatile __bit                   CCP1M1              @ (((unsigned) &CCP1CON)*8) + 1;
#define                                 CCP1M1_bit          BANKMASK(CCP1CON), 1
extern volatile __bit                   CCP1M2              @ (((unsigned) &CCP1CON)*8) + 2;
#define                                 CCP1M2_bit          BANKMASK(CCP1CON), 2
extern volatile __bit                   CCP1M3              @ (((unsigned) &CCP1CON)*8) + 3;
#define                                 CCP1M3_bit          BANKMASK(CCP1CON), 3
extern volatile __bit                   CCP1X               @ (((unsigned) &CCP1CON)*8) + 5;
#define                                 CCP1X_bit           BANKMASK(CCP1CON), 5
extern volatile __bit                   CCP1Y               @ (((unsigned) &CCP1CON)*8) + 4;
#define                                 CCP1Y_bit           BANKMASK(CCP1CON), 4
extern volatile __bit                   CCP2                @ (((unsigned) &PORTC)*8) + 1;
#define                                 CCP2_bit            BANKMASK(PORTC), 1
extern volatile __bit                   CCP2IE              @ (((unsigned) &PIE2)*8) + 0;
#define                                 CCP2IE_bit          BANKMASK(PIE2), 0
extern volatile __bit                   CCP2IF              @ (((unsigned) &PIR2)*8) + 0;
#define                                 CCP2IF_bit          BANKMASK(PIR2), 0
extern volatile __bit                   CCP2IP              @ (((unsigned) &IPR2)*8) + 0;
#define                                 CCP2IP_bit          BANKMASK(IPR2), 0
extern volatile __bit                   CCP2M0              @ (((unsigned) &CCP2CON)*8) + 0;
#define                                 CCP2M0_bit          BANKMASK(CCP2CON), 0
extern volatile __bit                   CCP2M1              @ (((unsigned) &CCP2CON)*8) + 1;
#define                                 CCP2M1_bit          BANKMASK(CCP2CON), 1
extern volatile __bit                   CCP2M2              @ (((unsigned) &CCP2CON)*8) + 2;
#define                                 CCP2M2_bit          BANKMASK(CCP2CON), 2
extern volatile __bit                   CCP2M3              @ (((unsigned) &CCP2CON)*8) + 3;
#define                                 CCP2M3_bit          BANKMASK(CCP2CON), 3
extern volatile __bit                   CCP2X               @ (((unsigned) &CCP2CON)*8) + 5;
#define                                 CCP2X_bit           BANKMASK(CCP2CON), 5
extern volatile __bit                   CCP2Y               @ (((unsigned) &CCP2CON)*8) + 4;
#define                                 CCP2Y_bit           BANKMASK(CCP2CON), 4
extern volatile __bit                   CCP2_PA2            @ (((unsigned) &PORTB)*8) + 3;
#define                                 CCP2_PA2_bit        BANKMASK(PORTB), 3
extern volatile __bit                   CCP3IE              @ (((unsigned) &PIE4)*8) + 0;
#define                                 CCP3IE_bit          BANKMASK(PIE4), 0
extern volatile __bit                   CCP3IF              @ (((unsigned) &PIR4)*8) + 0;
#define                                 CCP3IF_bit          BANKMASK(PIR4), 0
extern volatile __bit                   CCP3IP              @ (((unsigned) &IPR4)*8) + 0;
#define                                 CCP3IP_bit          BANKMASK(IPR4), 0
extern volatile __bit                   CCP3M0              @ (((unsigned) &CCP3CON)*8) + 0;
#define                                 CCP3M0_bit          BANKMASK(CCP3CON), 0
extern volatile __bit                   CCP3M1              @ (((unsigned) &CCP3CON)*8) + 1;
#define                                 CCP3M1_bit          BANKMASK(CCP3CON), 1
extern volatile __bit                   CCP3M2              @ (((unsigned) &CCP3CON)*8) + 2;
#define                                 CCP3M2_bit          BANKMASK(CCP3CON), 2
extern volatile __bit                   CCP3M3              @ (((unsigned) &CCP3CON)*8) + 3;
#define                                 CCP3M3_bit          BANKMASK(CCP3CON), 3
extern volatile __bit                   CCP4                @ (((unsigned) &PORTB)*8) + 4;
#define                                 CCP4_bit            BANKMASK(PORTB), 4
extern volatile __bit                   CCP4IE              @ (((unsigned) &PIE4)*8) + 1;
#define                                 CCP4IE_bit          BANKMASK(PIE4), 1
extern volatile __bit                   CCP4IF              @ (((unsigned) &PIR4)*8) + 1;
#define                                 CCP4IF_bit          BANKMASK(PIR4), 1
extern volatile __bit                   CCP4IP              @ (((unsigned) &IPR4)*8) + 1;
#define                                 CCP4IP_bit          BANKMASK(IPR4), 1
extern volatile __bit                   CCP4M0              @ (((unsigned) &CCP4CON)*8) + 0;
#define                                 CCP4M0_bit          BANKMASK(CCP4CON), 0
extern volatile __bit                   CCP4M1              @ (((unsigned) &CCP4CON)*8) + 1;
#define                                 CCP4M1_bit          BANKMASK(CCP4CON), 1
extern volatile __bit                   CCP4M2              @ (((unsigned) &CCP4CON)*8) + 2;
#define                                 CCP4M2_bit          BANKMASK(CCP4CON), 2
extern volatile __bit                   CCP4M3              @ (((unsigned) &CCP4CON)*8) + 3;
#define                                 CCP4M3_bit          BANKMASK(CCP4CON), 3
extern volatile __bit                   CCP4MD              @ (((unsigned) &PMDIS3)*8) + 1;
#define                                 CCP4MD_bit          BANKMASK(PMDIS3), 1
extern volatile __bit                   CCP4OD              @ (((unsigned) &ODCON1)*8) + 3;
#define                                 CCP4OD_bit          BANKMASK(ODCON1), 3
extern volatile __bit                   CCP5                @ (((unsigned) &PORTB)*8) + 5;
#define                                 CCP5_bit            BANKMASK(PORTB), 5
extern volatile __bit                   CCP5IE              @ (((unsigned) &PIE4)*8) + 2;
#define                                 CCP5IE_bit          BANKMASK(PIE4), 2
extern volatile __bit                   CCP5IF              @ (((unsigned) &PIR4)*8) + 2;
#define                                 CCP5IF_bit          BANKMASK(PIR4), 2
extern volatile __bit                   CCP5IP              @ (((unsigned) &IPR4)*8) + 2;
#define                                 CCP5IP_bit          BANKMASK(IPR4), 2
extern volatile __bit                   CCP5M0              @ (((unsigned) &CCP5CON)*8) + 0;
#define                                 CCP5M0_bit          BANKMASK(CCP5CON), 0
extern volatile __bit                   CCP5M1              @ (((unsigned) &CCP5CON)*8) + 1;
#define                                 CCP5M1_bit          BANKMASK(CCP5CON), 1
extern volatile __bit                   CCP5M2              @ (((unsigned) &CCP5CON)*8) + 2;
#define                                 CCP5M2_bit          BANKMASK(CCP5CON), 2
extern volatile __bit                   CCP5M3              @ (((unsigned) &CCP5CON)*8) + 3;
#define                                 CCP5M3_bit          BANKMASK(CCP5CON), 3
extern volatile __bit                   CCP5MD              @ (((unsigned) &PMDIS3)*8) + 2;
#define                                 CCP5MD_bit          BANKMASK(PMDIS3), 2
extern volatile __bit                   CCP5OD              @ (((unsigned) &ODCON1)*8) + 4;
#define                                 CCP5OD_bit          BANKMASK(ODCON1), 4
extern volatile __bit                   CCP6                @ (((unsigned) &PORTB)*8) + 6;
#define                                 CCP6_bit            BANKMASK(PORTB), 6
extern volatile __bit                   CCP6IE              @ (((unsigned) &PIE4)*8) + 3;
#define                                 CCP6IE_bit          BANKMASK(PIE4), 3
extern volatile __bit                   CCP6IF              @ (((unsigned) &PIR4)*8) + 3;
#define                                 CCP6IF_bit          BANKMASK(PIR4), 3
extern volatile __bit                   CCP6IP              @ (((unsigned) &IPR4)*8) + 3;
#define                                 CCP6IP_bit          BANKMASK(IPR4), 3
extern volatile __bit                   CCP6M0              @ (((unsigned) &CCP6CON)*8) + 0;
#define                                 CCP6M0_bit          BANKMASK(CCP6CON), 0
extern volatile __bit                   CCP6M1              @ (((unsigned) &CCP6CON)*8) + 1;
#define                                 CCP6M1_bit          BANKMASK(CCP6CON), 1
extern volatile __bit                   CCP6M2              @ (((unsigned) &CCP6CON)*8) + 2;
#define                                 CCP6M2_bit          BANKMASK(CCP6CON), 2
extern volatile __bit                   CCP6M3              @ (((unsigned) &CCP6CON)*8) + 3;
#define                                 CCP6M3_bit          BANKMASK(CCP6CON), 3
extern volatile __bit                   CCP6MD              @ (((unsigned) &PMDIS3)*8) + 3;
#define                                 CCP6MD_bit          BANKMASK(PMDIS3), 3
extern volatile __bit                   CCP6OD              @ (((unsigned) &ODCON1)*8) + 5;
#define                                 CCP6OD_bit          BANKMASK(ODCON1), 5
extern volatile __bit                   CCP7                @ (((unsigned) &PORTB)*8) + 7;
#define                                 CCP7_bit            BANKMASK(PORTB), 7
extern volatile __bit                   CCP7IE              @ (((unsigned) &PIE4)*8) + 4;
#define                                 CCP7IE_bit          BANKMASK(PIE4), 4
extern volatile __bit                   CCP7IF              @ (((unsigned) &PIR4)*8) + 4;
#define                                 CCP7IF_bit          BANKMASK(PIR4), 4
extern volatile __bit                   CCP7IP              @ (((unsigned) &IPR4)*8) + 4;
#define                                 CCP7IP_bit          BANKMASK(IPR4), 4
extern volatile __bit                   CCP7M0              @ (((unsigned) &CCP7CON)*8) + 0;
#define                                 CCP7M0_bit          BANKMASK(CCP7CON), 0
extern volatile __bit                   CCP7M1              @ (((unsigned) &CCP7CON)*8) + 1;
#define                                 CCP7M1_bit          BANKMASK(CCP7CON), 1
extern volatile __bit                   CCP7M2              @ (((unsigned) &CCP7CON)*8) + 2;
#define                                 CCP7M2_bit          BANKMASK(CCP7CON), 2
extern volatile __bit                   CCP7M3              @ (((unsigned) &CCP7CON)*8) + 3;
#define                                 CCP7M3_bit          BANKMASK(CCP7CON), 3
extern volatile __bit                   CCP7MD              @ (((unsigned) &PMDIS3)*8) + 4;
#define                                 CCP7MD_bit          BANKMASK(PMDIS3), 4
extern volatile __bit                   CCP7OD              @ (((unsigned) &ODCON1)*8) + 6;
#define                                 CCP7OD_bit          BANKMASK(ODCON1), 6
extern volatile __bit                   CCP8                @ (((unsigned) &PORTC)*8) + 1;
#define                                 CCP8_bit            BANKMASK(PORTC), 1
extern volatile __bit                   CCP8IE              @ (((unsigned) &PIE4)*8) + 5;
#define                                 CCP8IE_bit          BANKMASK(PIE4), 5
extern volatile __bit                   CCP8IF              @ (((unsigned) &PIR4)*8) + 5;
#define                                 CCP8IF_bit          BANKMASK(PIR4), 5
extern volatile __bit                   CCP8IP              @ (((unsigned) &IPR4)*8) + 5;
#define                                 CCP8IP_bit          BANKMASK(IPR4), 5
extern volatile __bit                   CCP8M0              @ (((unsigned) &CCP8CON)*8) + 0;
#define                                 CCP8M0_bit          BANKMASK(CCP8CON), 0
extern volatile __bit                   CCP8M1              @ (((unsigned) &CCP8CON)*8) + 1;
#define                                 CCP8M1_bit          BANKMASK(CCP8CON), 1
extern volatile __bit                   CCP8M2              @ (((unsigned) &CCP8CON)*8) + 2;
#define                                 CCP8M2_bit          BANKMASK(CCP8CON), 2
extern volatile __bit                   CCP8M3              @ (((unsigned) &CCP8CON)*8) + 3;
#define                                 CCP8M3_bit          BANKMASK(CCP8CON), 3
extern volatile __bit                   CCP8MD              @ (((unsigned) &PMDIS3)*8) + 5;
#define                                 CCP8MD_bit          BANKMASK(PMDIS3), 5
extern volatile __bit                   CCP8OD              @ (((unsigned) &ODCON1)*8) + 7;
#define                                 CCP8OD_bit          BANKMASK(ODCON1), 7
extern volatile __bit                   CCP9                @ (((unsigned) &PORTC)*8) + 6;
#define                                 CCP9_bit            BANKMASK(PORTC), 6
extern volatile __bit                   CCP9IE              @ (((unsigned) &PIE4)*8) + 6;
#define                                 CCP9IE_bit          BANKMASK(PIE4), 6
extern volatile __bit                   CCP9IF              @ (((unsigned) &PIR4)*8) + 6;
#define                                 CCP9IF_bit          BANKMASK(PIR4), 6
extern volatile __bit                   CCP9IP              @ (((unsigned) &IPR4)*8) + 6;
#define                                 CCP9IP_bit          BANKMASK(IPR4), 6
extern volatile __bit                   CCP9M0              @ (((unsigned) &CCP9CON)*8) + 0;
#define                                 CCP9M0_bit          BANKMASK(CCP9CON), 0
extern volatile __bit                   CCP9M1              @ (((unsigned) &CCP9CON)*8) + 1;
#define                                 CCP9M1_bit          BANKMASK(CCP9CON), 1
extern volatile __bit                   CCP9M2              @ (((unsigned) &CCP9CON)*8) + 2;
#define                                 CCP9M2_bit          BANKMASK(CCP9CON), 2
extern volatile __bit                   CCP9M3              @ (((unsigned) &CCP9CON)*8) + 3;
#define                                 CCP9M3_bit          BANKMASK(CCP9CON), 3
extern volatile __bit                   CCP9MD              @ (((unsigned) &PMDIS3)*8) + 6;
#define                                 CCP9MD_bit          BANKMASK(PMDIS3), 6
extern volatile __bit                   CCP9OD              @ (((unsigned) &ODCON2)*8) + 2;
#define                                 CCP9OD_bit          BANKMASK(ODCON2), 2
extern volatile __bit                   CHIME               @ (((unsigned) &ALRMCFG)*8) + 6;
#define                                 CHIME_bit           BANKMASK(ALRMCFG), 6
extern volatile __bit                   CHS0                @ (((unsigned) &ADCON0)*8) + 2;
#define                                 CHS0_bit            BANKMASK(ADCON0), 2
extern volatile __bit                   CHS1                @ (((unsigned) &ADCON0)*8) + 3;
#define                                 CHS1_bit            BANKMASK(ADCON0), 3
extern volatile __bit                   CHS2                @ (((unsigned) &ADCON0)*8) + 4;
#define                                 CHS2_bit            BANKMASK(ADCON0), 4
extern volatile __bit                   CHS3                @ (((unsigned) &ADCON0)*8) + 5;
#define                                 CHS3_bit            BANKMASK(ADCON0), 5
extern volatile __bit                   CHSN3               @ (((unsigned) &ADCON1)*8) + 3;
#define                                 CHSN3_bit           BANKMASK(ADCON1), 3
extern volatile __bit                   CK1                 @ (((unsigned) &PORTC)*8) + 6;
#define                                 CK1_bit             BANKMASK(PORTC), 6
extern volatile __bit                   CKE1                @ (((unsigned) &SSP1STAT)*8) + 6;
#define                                 CKE1_bit            BANKMASK(SSP1STAT), 6
extern volatile __bit                   CKE2                @ (((unsigned) &SSP2STAT)*8) + 6;
#define                                 CKE2_bit            BANKMASK(SSP2STAT), 6
extern volatile __bit                   CKP1                @ (((unsigned) &SSP1CON1)*8) + 4;
#define                                 CKP1_bit            BANKMASK(SSP1CON1), 4
extern volatile __bit                   CKP2                @ (((unsigned) &SSP2CON1)*8) + 4;
#define                                 CKP2_bit            BANKMASK(SSP2CON1), 4
extern volatile __bit                   CKTXP               @ (((unsigned) &BAUDCON1)*8) + 4;
#define                                 CKTXP_bit           BANKMASK(BAUDCON1), 4
extern volatile __bit                   CLKI                @ (((unsigned) &PORTA)*8) + 7;
#define                                 CLKI_bit            BANKMASK(PORTA), 7
extern volatile __bit                   CLKO                @ (((unsigned) &PORTA)*8) + 6;
#define                                 CLKO_bit            BANKMASK(PORTA), 6
extern volatile __bit                   CM                  @ (((unsigned) &RCON)*8) + 5;
#define                                 CM_bit              BANKMASK(RCON), 5
extern volatile __bit                   CM1IE               @ (((unsigned) &PIE2)*8) + 5;
#define                                 CM1IE_bit           BANKMASK(PIE2), 5
extern volatile __bit                   CM1IF               @ (((unsigned) &PIR2)*8) + 5;
#define                                 CM1IF_bit           BANKMASK(PIR2), 5
extern volatile __bit                   CM1IP               @ (((unsigned) &IPR2)*8) + 5;
#define                                 CM1IP_bit           BANKMASK(IPR2), 5
extern volatile __bit                   CM2IE               @ (((unsigned) &PIE2)*8) + 6;
#define                                 CM2IE_bit           BANKMASK(PIE2), 6
extern volatile __bit                   CM2IF               @ (((unsigned) &PIR2)*8) + 6;
#define                                 CM2IF_bit           BANKMASK(PIR2), 6
extern volatile __bit                   CM2IP               @ (((unsigned) &IPR2)*8) + 6;
#define                                 CM2IP_bit           BANKMASK(IPR2), 6
extern volatile __bit                   CM3IE               @ (((unsigned) &PIE5)*8) + 5;
#define                                 CM3IE_bit           BANKMASK(PIE5), 5
extern volatile __bit                   CM3IF               @ (((unsigned) &PIR5)*8) + 5;
#define                                 CM3IF_bit           BANKMASK(PIR5), 5
extern volatile __bit                   CM3IP               @ (((unsigned) &IPR5)*8) + 5;
#define                                 CM3IP_bit           BANKMASK(IPR5), 5
extern volatile __bit                   CMIE                @ (((unsigned) &PIE2)*8) + 6;
#define                                 CMIE_bit            BANKMASK(PIE2), 6
extern volatile __bit                   CMIF                @ (((unsigned) &PIR2)*8) + 6;
#define                                 CMIF_bit            BANKMASK(PIR2), 6
extern volatile __bit                   CMIP                @ (((unsigned) &IPR2)*8) + 6;
#define                                 CMIP_bit            BANKMASK(IPR2), 6
extern volatile __bit                   CMP1MD              @ (((unsigned) &PMDIS2)*8) + 0;
#define                                 CMP1MD_bit          BANKMASK(PMDIS2), 0
extern volatile __bit                   CMP2MD              @ (((unsigned) &PMDIS2)*8) + 1;
#define                                 CMP2MD_bit          BANKMASK(PMDIS2), 1
extern volatile __bit                   CMP3MD              @ (((unsigned) &PMDIS2)*8) + 2;
#define                                 CMP3MD_bit          BANKMASK(PMDIS2), 2
extern volatile __bit                   CMPL02              @ (((unsigned) &PSTR2CON)*8) + 6;
#define                                 CMPL02_bit          BANKMASK(PSTR2CON), 6
extern volatile __bit                   CMPL03              @ (((unsigned) &PSTR3CON)*8) + 6;
#define                                 CMPL03_bit          BANKMASK(PSTR3CON), 6
extern volatile __bit                   CMPL12              @ (((unsigned) &PSTR2CON)*8) + 7;
#define                                 CMPL12_bit          BANKMASK(PSTR2CON), 7
extern volatile __bit                   CMPL13              @ (((unsigned) &PSTR3CON)*8) + 7;
#define                                 CMPL13_bit          BANKMASK(PSTR3CON), 7
extern volatile __bit                   COE1                @ (((unsigned) &CM1CON)*8) + 6;
#define                                 COE1_bit            BANKMASK(CM1CON), 6
extern volatile __bit                   COE2                @ (((unsigned) &CM2CON)*8) + 6;
#define                                 COE2_bit            BANKMASK(CM2CON), 6
extern volatile __bit                   COE3                @ (((unsigned) &CM3CON)*8) + 6;
#define                                 COE3_bit            BANKMASK(CM3CON), 6
extern volatile __bit                   CON1                @ (((unsigned) &CM1CON)*8) + 7;
#define                                 CON1_bit            BANKMASK(CM1CON), 7
extern volatile __bit                   CON2                @ (((unsigned) &CM2CON)*8) + 7;
#define                                 CON2_bit            BANKMASK(CM2CON), 7
extern volatile __bit                   CON3                @ (((unsigned) &CM3CON)*8) + 7;
#define                                 CON3_bit            BANKMASK(CM3CON), 7
extern volatile __bit                   COUT1               @ (((unsigned) &CMSTAT)*8) + 0;
#define                                 COUT1_bit           BANKMASK(CMSTAT), 0
extern volatile __bit                   COUT2               @ (((unsigned) &CMSTAT)*8) + 1;
#define                                 COUT2_bit           BANKMASK(CMSTAT), 1
extern volatile __bit                   COUT3               @ (((unsigned) &CMSTAT)*8) + 2;
#define                                 COUT3_bit           BANKMASK(CMSTAT), 2
extern volatile __bit                   CPOL1               @ (((unsigned) &CM1CON)*8) + 5;
#define                                 CPOL1_bit           BANKMASK(CM1CON), 5
extern volatile __bit                   CPOL2               @ (((unsigned) &CM2CON)*8) + 5;
#define                                 CPOL2_bit           BANKMASK(CM2CON), 5
extern volatile __bit                   CPOL3               @ (((unsigned) &CM3CON)*8) + 5;
#define                                 CPOL3_bit           BANKMASK(CM3CON), 5
extern volatile __bit                   CRC16EE             @ (((unsigned) &UEIE)*8) + 2;
#define                                 CRC16EE_bit         BANKMASK(UEIE), 2
extern volatile __bit                   CRC16EF             @ (((unsigned) &UEIR)*8) + 2;
#define                                 CRC16EF_bit         BANKMASK(UEIR), 2
extern volatile __bit                   CRC5EE              @ (((unsigned) &UEIE)*8) + 1;
#define                                 CRC5EE_bit          BANKMASK(UEIE), 1
extern volatile __bit                   CRC5EF              @ (((unsigned) &UEIR)*8) + 1;
#define                                 CRC5EF_bit          BANKMASK(UEIR), 1
extern volatile __bit                   CREF1               @ (((unsigned) &CM1CON)*8) + 2;
#define                                 CREF1_bit           BANKMASK(CM1CON), 2
extern volatile __bit                   CREF2               @ (((unsigned) &CM2CON)*8) + 2;
#define                                 CREF2_bit           BANKMASK(CM2CON), 2
extern volatile __bit                   CREF3               @ (((unsigned) &CM3CON)*8) + 2;
#define                                 CREF3_bit           BANKMASK(CM3CON), 2
extern volatile __bit                   CREN1               @ (((unsigned) &RCSTA1)*8) + 4;
#define                                 CREN1_bit           BANKMASK(RCSTA1), 4
extern volatile __bit                   CREN2               @ (((unsigned) &RCSTA2)*8) + 4;
#define                                 CREN2_bit           BANKMASK(RCSTA2), 4
extern volatile __bit                   CSRC1               @ (((unsigned) &TXSTA1)*8) + 7;
#define                                 CSRC1_bit           BANKMASK(TXSTA1), 7
extern volatile __bit                   CSRC2               @ (((unsigned) &TXSTA2)*8) + 7;
#define                                 CSRC2_bit           BANKMASK(TXSTA2), 7
extern volatile __bit                   CTED1               @ (((unsigned) &PORTB)*8) + 2;
#define                                 CTED1_bit           BANKMASK(PORTB), 2
extern volatile __bit                   CTED2               @ (((unsigned) &PORTB)*8) + 3;
#define                                 CTED2_bit           BANKMASK(PORTB), 3
extern volatile __bit                   CTMUEN              @ (((unsigned) &CTMUCONH)*8) + 7;
#define                                 CTMUEN_bit          BANKMASK(CTMUCONH), 7
extern volatile __bit                   CTMUIE              @ (((unsigned) &PIE3)*8) + 2;
#define                                 CTMUIE_bit          BANKMASK(PIE3), 2
extern volatile __bit                   CTMUIF              @ (((unsigned) &PIR3)*8) + 2;
#define                                 CTMUIF_bit          BANKMASK(PIR3), 2
extern volatile __bit                   CTMUIP              @ (((unsigned) &IPR3)*8) + 2;
#define                                 CTMUIP_bit          BANKMASK(IPR3), 2
extern volatile __bit                   CTMUMD              @ (((unsigned) &PMDIS1)*8) + 6;
#define                                 CTMUMD_bit          BANKMASK(PMDIS1), 6
extern volatile __bit                   CTMUSIDL            @ (((unsigned) &CTMUCONH)*8) + 5;
#define                                 CTMUSIDL_bit        BANKMASK(CTMUCONH), 5
extern volatile __bit                   CTPLS               @ (((unsigned) &PORTC)*8) + 2;
#define                                 CTPLS_bit           BANKMASK(PORTC), 2
extern volatile __bit                   CTTRIG              @ (((unsigned) &CTMUCONH)*8) + 0;
#define                                 CTTRIG_bit          BANKMASK(CTMUCONH), 0
extern volatile __bit                   CVR0                @ (((unsigned) &CVRCON)*8) + 0;
#define                                 CVR0_bit            BANKMASK(CVRCON), 0
extern volatile __bit                   CVR1                @ (((unsigned) &CVRCON)*8) + 1;
#define                                 CVR1_bit            BANKMASK(CVRCON), 1
extern volatile __bit                   CVR2                @ (((unsigned) &CVRCON)*8) + 2;
#define                                 CVR2_bit            BANKMASK(CVRCON), 2
extern volatile __bit                   CVR3                @ (((unsigned) &CVRCON)*8) + 3;
#define                                 CVR3_bit            BANKMASK(CVRCON), 3
extern volatile __bit                   CVREF               @ (((unsigned) &PORTA)*8) + 2;
#define                                 CVREF_bit           BANKMASK(PORTA), 2
extern volatile __bit                   CVREN               @ (((unsigned) &CVRCON)*8) + 7;
#define                                 CVREN_bit           BANKMASK(CVRCON), 7
extern volatile __bit                   CVROE               @ (((unsigned) &CVRCON)*8) + 6;
#define                                 CVROE_bit           BANKMASK(CVRCON), 6
extern volatile __bit                   CVROEN              @ (((unsigned) &CVRCON)*8) + 6;
#define                                 CVROEN_bit          BANKMASK(CVRCON), 6
extern volatile __bit                   CVRR                @ (((unsigned) &CVRCON)*8) + 5;
#define                                 CVRR_bit            BANKMASK(CVRCON), 5
extern volatile __bit                   CVRSS               @ (((unsigned) &CVRCON)*8) + 4;
#define                                 CVRSS_bit           BANKMASK(CVRCON), 4
extern volatile __bit                   DA                  @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 DA_bit              BANKMASK(SSP1STAT), 5
extern volatile __bit                   DA1                 @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 DA1_bit             BANKMASK(SSP1STAT), 5
extern volatile __bit                   DA2                 @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 DA2_bit             BANKMASK(SSP2STAT), 5
extern volatile __bit                   DATA_ADDRESS        @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 DATA_ADDRESS_bit    BANKMASK(SSP1STAT), 5
extern volatile __bit                   DATA_ADDRESS2       @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 DATA_ADDRESS2_bit   BANKMASK(SSP2STAT), 5
extern volatile __bit                   DC                  @ (((unsigned) &STATUS)*8) + 1;
#define                                 DC_bit              BANKMASK(STATUS), 1
extern volatile __bit                   DC10B0              @ (((unsigned) &CCP10CON)*8) + 4;
#define                                 DC10B0_bit          BANKMASK(CCP10CON), 4
extern volatile __bit                   DC10B1              @ (((unsigned) &CCP10CON)*8) + 5;
#define                                 DC10B1_bit          BANKMASK(CCP10CON), 5
extern volatile __bit                   DC1B0               @ (((unsigned) &CCP1CON)*8) + 4;
#define                                 DC1B0_bit           BANKMASK(CCP1CON), 4
extern volatile __bit                   DC1B1               @ (((unsigned) &CCP1CON)*8) + 5;
#define                                 DC1B1_bit           BANKMASK(CCP1CON), 5
extern volatile __bit                   DC2B0               @ (((unsigned) &CCP2CON)*8) + 4;
#define                                 DC2B0_bit           BANKMASK(CCP2CON), 4
extern volatile __bit                   DC2B1               @ (((unsigned) &CCP2CON)*8) + 5;
#define                                 DC2B1_bit           BANKMASK(CCP2CON), 5
extern volatile __bit                   DC3B0               @ (((unsigned) &CCP3CON)*8) + 4;
#define                                 DC3B0_bit           BANKMASK(CCP3CON), 4
extern volatile __bit                   DC3B1               @ (((unsigned) &CCP3CON)*8) + 5;
#define                                 DC3B1_bit           BANKMASK(CCP3CON), 5
extern volatile __bit                   DC4B0               @ (((unsigned) &CCP4CON)*8) + 4;
#define                                 DC4B0_bit           BANKMASK(CCP4CON), 4
extern volatile __bit                   DC4B1               @ (((unsigned) &CCP4CON)*8) + 5;
#define                                 DC4B1_bit           BANKMASK(CCP4CON), 5
extern volatile __bit                   DC5B0               @ (((unsigned) &CCP5CON)*8) + 4;
#define                                 DC5B0_bit           BANKMASK(CCP5CON), 4
extern volatile __bit                   DC5B1               @ (((unsigned) &CCP5CON)*8) + 5;
#define                                 DC5B1_bit           BANKMASK(CCP5CON), 5
extern volatile __bit                   DC6B0               @ (((unsigned) &CCP6CON)*8) + 4;
#define                                 DC6B0_bit           BANKMASK(CCP6CON), 4
extern volatile __bit                   DC6B1               @ (((unsigned) &CCP6CON)*8) + 5;
#define                                 DC6B1_bit           BANKMASK(CCP6CON), 5
extern volatile __bit                   DC7B0               @ (((unsigned) &CCP7CON)*8) + 4;
#define                                 DC7B0_bit           BANKMASK(CCP7CON), 4
extern volatile __bit                   DC7B1               @ (((unsigned) &CCP7CON)*8) + 5;
#define                                 DC7B1_bit           BANKMASK(CCP7CON), 5
extern volatile __bit                   DC8B0               @ (((unsigned) &CCP8CON)*8) + 4;
#define                                 DC8B0_bit           BANKMASK(CCP8CON), 4
extern volatile __bit                   DC8B1               @ (((unsigned) &CCP8CON)*8) + 5;
#define                                 DC8B1_bit           BANKMASK(CCP8CON), 5
extern volatile __bit                   DC9B0               @ (((unsigned) &CCP9CON)*8) + 4;
#define                                 DC9B0_bit           BANKMASK(CCP9CON), 4
extern volatile __bit                   DC9B1               @ (((unsigned) &CCP9CON)*8) + 5;
#define                                 DC9B1_bit           BANKMASK(CCP9CON), 5
extern volatile __bit                   DFN8EE              @ (((unsigned) &UEIE)*8) + 3;
#define                                 DFN8EE_bit          BANKMASK(UEIE), 3
extern volatile __bit                   DFN8EF              @ (((unsigned) &UEIR)*8) + 3;
#define                                 DFN8EF_bit          BANKMASK(UEIR), 3
extern volatile __bit                   DIR                 @ (((unsigned) &USTAT)*8) + 2;
#define                                 DIR_bit             BANKMASK(USTAT), 2
extern volatile __bit                   DLYCYC0             @ (((unsigned) &DMACON2)*8) + 4;
#define                                 DLYCYC0_bit         BANKMASK(DMACON2), 4
extern volatile __bit                   DLYCYC1             @ (((unsigned) &DMACON2)*8) + 5;
#define                                 DLYCYC1_bit         BANKMASK(DMACON2), 5
extern volatile __bit                   DLYCYC2             @ (((unsigned) &DMACON2)*8) + 6;
#define                                 DLYCYC2_bit         BANKMASK(DMACON2), 6
extern volatile __bit                   DLYCYC3             @ (((unsigned) &DMACON2)*8) + 7;
#define                                 DLYCYC3_bit         BANKMASK(DMACON2), 7
extern volatile __bit                   DLYINTEN            @ (((unsigned) &DMACON1)*8) + 1;
#define                                 DLYINTEN_bit        BANKMASK(DMACON1), 1
extern volatile __bit                   DMAEN               @ (((unsigned) &DMACON1)*8) + 0;
#define                                 DMAEN_bit           BANKMASK(DMACON1), 0
extern volatile __bit                   DONE                @ (((unsigned) &ADCON0)*8) + 1;
#define                                 DONE_bit            BANKMASK(ADCON0), 1
extern volatile __bit                   DS                  @ (((unsigned) &WDTCON)*8) + 3;
#define                                 DS_bit              BANKMASK(WDTCON), 3
extern volatile __bit                   DSBOR               @ (((unsigned) &DSCONL)*8) + 1;
#define                                 DSBOR_bit           BANKMASK(DSCONL), 1
extern volatile __bit                   DSEN                @ (((unsigned) &DSCONH)*8) + 7;
#define                                 DSEN_bit            BANKMASK(DSCONH), 7
extern volatile __bit                   DSFLT               @ (((unsigned) &DSWAKEL)*8) + 7;
#define                                 DSFLT_bit           BANKMASK(DSWAKEL), 7
extern volatile __bit                   DSINT0              @ (((unsigned) &DSWAKEH)*8) + 0;
#define                                 DSINT0_bit          BANKMASK(DSWAKEH), 0
extern volatile __bit                   DSMCLR              @ (((unsigned) &DSWAKEL)*8) + 2;
#define                                 DSMCLR_bit          BANKMASK(DSWAKEL), 2
extern volatile __bit                   DSPOR               @ (((unsigned) &DSWAKEL)*8) + 0;
#define                                 DSPOR_bit           BANKMASK(DSWAKEL), 0
extern volatile __bit                   DSRTC               @ (((unsigned) &DSWAKEL)*8) + 3;
#define                                 DSRTC_bit           BANKMASK(DSWAKEL), 3
extern volatile __bit                   DSULP               @ (((unsigned) &DSWAKEL)*8) + 5;
#define                                 DSULP_bit           BANKMASK(DSWAKEL), 5
extern volatile __bit                   DSULPEN             @ (((unsigned) &DSCONH)*8) + 1;
#define                                 DSULPEN_bit         BANKMASK(DSCONH), 1
extern volatile __bit                   DSWDT               @ (((unsigned) &DSWAKEL)*8) + 4;
#define                                 DSWDT_bit           BANKMASK(DSWAKEL), 4
extern volatile __bit                   DT1                 @ (((unsigned) &PORTC)*8) + 7;
#define                                 DT1_bit             BANKMASK(PORTC), 7
extern volatile __bit                   DTRXP               @ (((unsigned) &BAUDCON1)*8) + 5;
#define                                 DTRXP_bit           BANKMASK(BAUDCON1), 5
extern volatile __bit                   DTRXP1              @ (((unsigned) &BAUDCON1)*8) + 5;
#define                                 DTRXP1_bit          BANKMASK(BAUDCON1), 5
extern volatile __bit                   DTRXP2              @ (((unsigned) &BAUDCON2)*8) + 5;
#define                                 DTRXP2_bit          BANKMASK(BAUDCON2), 5
extern volatile __bit                   DUPLEX0             @ (((unsigned) &DMACON1)*8) + 2;
#define                                 DUPLEX0_bit         BANKMASK(DMACON1), 2
extern volatile __bit                   DUPLEX1             @ (((unsigned) &DMACON1)*8) + 3;
#define                                 DUPLEX1_bit         BANKMASK(DMACON1), 3
extern volatile __bit                   D_A                 @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 D_A_bit             BANKMASK(SSP1STAT), 5
extern volatile __bit                   D_A2                @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 D_A2_bit            BANKMASK(SSP2STAT), 5
extern volatile __bit                   D_MINUS             @ (((unsigned) &PORTC)*8) + 4;
#define                                 D_MINUS_bit         BANKMASK(PORTC), 4
extern volatile __bit                   D_PLUS              @ (((unsigned) &PORTC)*8) + 5;
#define                                 D_PLUS_bit          BANKMASK(PORTC), 5
extern volatile __bit                   D_nA2               @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 D_nA2_bit           BANKMASK(SSP2STAT), 5
extern volatile __bit                   EBDIS               @ (((unsigned) &PR2)*8) + 7;
#define                                 EBDIS_bit           BANKMASK(PR2), 7
extern volatile __bit                   ECCP1AS0            @ (((unsigned) &ECCP1AS)*8) + 4;
#define                                 ECCP1AS0_bit        BANKMASK(ECCP1AS), 4
extern volatile __bit                   ECCP1AS1            @ (((unsigned) &ECCP1AS)*8) + 5;
#define                                 ECCP1AS1_bit        BANKMASK(ECCP1AS), 5
extern volatile __bit                   ECCP1AS2            @ (((unsigned) &ECCP1AS)*8) + 6;
#define                                 ECCP1AS2_bit        BANKMASK(ECCP1AS), 6
extern volatile __bit                   ECCP1ASE            @ (((unsigned) &ECCP1AS)*8) + 7;
#define                                 ECCP1ASE_bit        BANKMASK(ECCP1AS), 7
extern volatile __bit                   ECCP1MD             @ (((unsigned) &PMDIS0)*8) + 5;
#define                                 ECCP1MD_bit         BANKMASK(PMDIS0), 5
extern volatile __bit                   ECCP1OD             @ (((unsigned) &ODCON1)*8) + 0;
#define                                 ECCP1OD_bit         BANKMASK(ODCON1), 0
extern volatile __bit                   ECCP2AS0            @ (((unsigned) &ECCP2AS)*8) + 4;
#define                                 ECCP2AS0_bit        BANKMASK(ECCP2AS), 4
extern volatile __bit                   ECCP2AS1            @ (((unsigned) &ECCP2AS)*8) + 5;
#define                                 ECCP2AS1_bit        BANKMASK(ECCP2AS), 5
extern volatile __bit                   ECCP2AS2            @ (((unsigned) &ECCP2AS)*8) + 6;
#define                                 ECCP2AS2_bit        BANKMASK(ECCP2AS), 6
extern volatile __bit                   ECCP2ASE            @ (((unsigned) &ECCP2AS)*8) + 7;
#define                                 ECCP2ASE_bit        BANKMASK(ECCP2AS), 7
extern volatile __bit                   ECCP2MD             @ (((unsigned) &PMDIS0)*8) + 6;
#define                                 ECCP2MD_bit         BANKMASK(PMDIS0), 6
extern volatile __bit                   ECCP2OD             @ (((unsigned) &ODCON1)*8) + 1;
#define                                 ECCP2OD_bit         BANKMASK(ODCON1), 1
extern volatile __bit                   ECCP3AS0            @ (((unsigned) &ECCP3AS)*8) + 4;
#define                                 ECCP3AS0_bit        BANKMASK(ECCP3AS), 4
extern volatile __bit                   ECCP3AS1            @ (((unsigned) &ECCP3AS)*8) + 5;
#define                                 ECCP3AS1_bit        BANKMASK(ECCP3AS), 5
extern volatile __bit                   ECCP3AS2            @ (((unsigned) &ECCP3AS)*8) + 6;
#define                                 ECCP3AS2_bit        BANKMASK(ECCP3AS), 6
extern volatile __bit                   ECCP3ASE            @ (((unsigned) &ECCP3AS)*8) + 7;
#define                                 ECCP3ASE_bit        BANKMASK(ECCP3AS), 7
extern volatile __bit                   ECCP3MD             @ (((unsigned) &PMDIS0)*8) + 7;
#define                                 ECCP3MD_bit         BANKMASK(PMDIS0), 7
extern volatile __bit                   ECCP3OD             @ (((unsigned) &ODCON1)*8) + 2;
#define                                 ECCP3OD_bit         BANKMASK(ODCON1), 2
extern volatile __bit                   EDG1POL             @ (((unsigned) &CTMUCONL)*8) + 4;
#define                                 EDG1POL_bit         BANKMASK(CTMUCONL), 4
extern volatile __bit                   EDG1SEL0            @ (((unsigned) &CTMUCONL)*8) + 2;
#define                                 EDG1SEL0_bit        BANKMASK(CTMUCONL), 2
extern volatile __bit                   EDG1SEL1            @ (((unsigned) &CTMUCONL)*8) + 3;
#define                                 EDG1SEL1_bit        BANKMASK(CTMUCONL), 3
extern volatile __bit                   EDG1STAT            @ (((unsigned) &CTMUCONL)*8) + 0;
#define                                 EDG1STAT_bit        BANKMASK(CTMUCONL), 0
extern volatile __bit                   EDG2POL             @ (((unsigned) &CTMUCONL)*8) + 7;
#define                                 EDG2POL_bit         BANKMASK(CTMUCONL), 7
extern volatile __bit                   EDG2SEL0            @ (((unsigned) &CTMUCONL)*8) + 5;
#define                                 EDG2SEL0_bit        BANKMASK(CTMUCONL), 5
extern volatile __bit                   EDG2SEL1            @ (((unsigned) &CTMUCONL)*8) + 6;
#define                                 EDG2SEL1_bit        BANKMASK(CTMUCONL), 6
extern volatile __bit                   EDG2STAT            @ (((unsigned) &CTMUCONL)*8) + 1;
#define                                 EDG2STAT_bit        BANKMASK(CTMUCONL), 1
extern volatile __bit                   EDGEN               @ (((unsigned) &CTMUCONH)*8) + 3;
#define                                 EDGEN_bit           BANKMASK(CTMUCONH), 3
extern volatile __bit                   EDGSEQEN            @ (((unsigned) &CTMUCONH)*8) + 2;
#define                                 EDGSEQEN_bit        BANKMASK(CTMUCONH), 2
extern volatile __bit                   ENDP0               @ (((unsigned) &USTAT)*8) + 3;
#define                                 ENDP0_bit           BANKMASK(USTAT), 3
extern volatile __bit                   ENDP1               @ (((unsigned) &USTAT)*8) + 4;
#define                                 ENDP1_bit           BANKMASK(USTAT), 4
extern volatile __bit                   ENDP2               @ (((unsigned) &USTAT)*8) + 5;
#define                                 ENDP2_bit           BANKMASK(USTAT), 5
extern volatile __bit                   ENDP3               @ (((unsigned) &USTAT)*8) + 6;
#define                                 ENDP3_bit           BANKMASK(USTAT), 6
extern volatile __bit                   EP0CONDIS           @ (((unsigned) &UEP0)*8) + 3;
#define                                 EP0CONDIS_bit       BANKMASK(UEP0), 3
extern volatile __bit                   EP0HSHK             @ (((unsigned) &UEP0)*8) + 4;
#define                                 EP0HSHK_bit         BANKMASK(UEP0), 4
extern volatile __bit                   EP0INEN             @ (((unsigned) &UEP0)*8) + 1;
#define                                 EP0INEN_bit         BANKMASK(UEP0), 1
extern volatile __bit                   EP0OUTEN            @ (((unsigned) &UEP0)*8) + 2;
#define                                 EP0OUTEN_bit        BANKMASK(UEP0), 2
extern volatile __bit                   EP0STALL            @ (((unsigned) &UEP0)*8) + 0;
#define                                 EP0STALL_bit        BANKMASK(UEP0), 0
extern volatile __bit                   EP1CONDIS           @ (((unsigned) &UEP1)*8) + 3;
#define                                 EP1CONDIS_bit       BANKMASK(UEP1), 3
extern volatile __bit                   EP1HSHK             @ (((unsigned) &UEP1)*8) + 4;
#define                                 EP1HSHK_bit         BANKMASK(UEP1), 4
extern volatile __bit                   EP1INEN             @ (((unsigned) &UEP1)*8) + 1;
#define                                 EP1INEN_bit         BANKMASK(UEP1), 1
extern volatile __bit                   EP1OUTEN            @ (((unsigned) &UEP1)*8) + 2;
#define                                 EP1OUTEN_bit        BANKMASK(UEP1), 2
extern volatile __bit                   EP1STALL            @ (((unsigned) &UEP1)*8) + 0;
#define                                 EP1STALL_bit        BANKMASK(UEP1), 0
extern volatile __bit                   EP2CONDIS           @ (((unsigned) &UEP2)*8) + 3;
#define                                 EP2CONDIS_bit       BANKMASK(UEP2), 3
extern volatile __bit                   EP2HSHK             @ (((unsigned) &UEP2)*8) + 4;
#define                                 EP2HSHK_bit         BANKMASK(UEP2), 4
extern volatile __bit                   EP2INEN             @ (((unsigned) &UEP2)*8) + 1;
#define                                 EP2INEN_bit         BANKMASK(UEP2), 1
extern volatile __bit                   EP2OUTEN            @ (((unsigned) &UEP2)*8) + 2;
#define                                 EP2OUTEN_bit        BANKMASK(UEP2), 2
extern volatile __bit                   EP2STALL            @ (((unsigned) &UEP2)*8) + 0;
#define                                 EP2STALL_bit        BANKMASK(UEP2), 0
extern volatile __bit                   EP3CONDIS           @ (((unsigned) &UEP3)*8) + 3;
#define                                 EP3CONDIS_bit       BANKMASK(UEP3), 3
extern volatile __bit                   EP3HSHK             @ (((unsigned) &UEP3)*8) + 4;
#define                                 EP3HSHK_bit         BANKMASK(UEP3), 4
extern volatile __bit                   EP3INEN             @ (((unsigned) &UEP3)*8) + 1;
#define                                 EP3INEN_bit         BANKMASK(UEP3), 1
extern volatile __bit                   EP3OUTEN            @ (((unsigned) &UEP3)*8) + 2;
#define                                 EP3OUTEN_bit        BANKMASK(UEP3), 2
extern volatile __bit                   EP3STALL            @ (((unsigned) &UEP3)*8) + 0;
#define                                 EP3STALL_bit        BANKMASK(UEP3), 0
extern volatile __bit                   EP4CONDIS           @ (((unsigned) &UEP4)*8) + 3;
#define                                 EP4CONDIS_bit       BANKMASK(UEP4), 3
extern volatile __bit                   EP4HSHK             @ (((unsigned) &UEP4)*8) + 4;
#define                                 EP4HSHK_bit         BANKMASK(UEP4), 4
extern volatile __bit                   EP4INEN             @ (((unsigned) &UEP4)*8) + 1;
#define                                 EP4INEN_bit         BANKMASK(UEP4), 1
extern volatile __bit                   EP4OUTEN            @ (((unsigned) &UEP4)*8) + 2;
#define                                 EP4OUTEN_bit        BANKMASK(UEP4), 2
extern volatile __bit                   EP4STALL            @ (((unsigned) &UEP4)*8) + 0;
#define                                 EP4STALL_bit        BANKMASK(UEP4), 0
extern volatile __bit                   EP5CONDIS           @ (((unsigned) &UEP5)*8) + 3;
#define                                 EP5CONDIS_bit       BANKMASK(UEP5), 3
extern volatile __bit                   EP5HSHK             @ (((unsigned) &UEP5)*8) + 4;
#define                                 EP5HSHK_bit         BANKMASK(UEP5), 4
extern volatile __bit                   EP5INEN             @ (((unsigned) &UEP5)*8) + 1;
#define                                 EP5INEN_bit         BANKMASK(UEP5), 1
extern volatile __bit                   EP5OUTEN            @ (((unsigned) &UEP5)*8) + 2;
#define                                 EP5OUTEN_bit        BANKMASK(UEP5), 2
extern volatile __bit                   EP5STALL            @ (((unsigned) &UEP5)*8) + 0;
#define                                 EP5STALL_bit        BANKMASK(UEP5), 0
extern volatile __bit                   EP6CONDIS           @ (((unsigned) &UEP6)*8) + 3;
#define                                 EP6CONDIS_bit       BANKMASK(UEP6), 3
extern volatile __bit                   EP6HSHK             @ (((unsigned) &UEP6)*8) + 4;
#define                                 EP6HSHK_bit         BANKMASK(UEP6), 4
extern volatile __bit                   EP6INEN             @ (((unsigned) &UEP6)*8) + 1;
#define                                 EP6INEN_bit         BANKMASK(UEP6), 1
extern volatile __bit                   EP6OUTEN            @ (((unsigned) &UEP6)*8) + 2;
#define                                 EP6OUTEN_bit        BANKMASK(UEP6), 2
extern volatile __bit                   EP6STALL            @ (((unsigned) &UEP6)*8) + 0;
#define                                 EP6STALL_bit        BANKMASK(UEP6), 0
extern volatile __bit                   EP7CONDIS           @ (((unsigned) &UEP7)*8) + 3;
#define                                 EP7CONDIS_bit       BANKMASK(UEP7), 3
extern volatile __bit                   EP7HSHK             @ (((unsigned) &UEP7)*8) + 4;
#define                                 EP7HSHK_bit         BANKMASK(UEP7), 4
extern volatile __bit                   EP7INEN             @ (((unsigned) &UEP7)*8) + 1;
#define                                 EP7INEN_bit         BANKMASK(UEP7), 1
extern volatile __bit                   EP7OUTEN            @ (((unsigned) &UEP7)*8) + 2;
#define                                 EP7OUTEN_bit        BANKMASK(UEP7), 2
extern volatile __bit                   EP7STALL            @ (((unsigned) &UEP7)*8) + 0;
#define                                 EP7STALL_bit        BANKMASK(UEP7), 0
extern volatile __bit                   EPCONDIS0           @ (((unsigned) &UEP0)*8) + 3;
#define                                 EPCONDIS0_bit       BANKMASK(UEP0), 3
extern volatile __bit                   EPCONDIS1           @ (((unsigned) &UEP1)*8) + 3;
#define                                 EPCONDIS1_bit       BANKMASK(UEP1), 3
extern volatile __bit                   EPCONDIS10          @ (((unsigned) &UEP10)*8) + 3;
#define                                 EPCONDIS10_bit      BANKMASK(UEP10), 3
extern volatile __bit                   EPCONDIS11          @ (((unsigned) &UEP11)*8) + 3;
#define                                 EPCONDIS11_bit      BANKMASK(UEP11), 3
extern volatile __bit                   EPCONDIS12          @ (((unsigned) &UEP12)*8) + 3;
#define                                 EPCONDIS12_bit      BANKMASK(UEP12), 3
extern volatile __bit                   EPCONDIS13          @ (((unsigned) &UEP13)*8) + 3;
#define                                 EPCONDIS13_bit      BANKMASK(UEP13), 3
extern volatile __bit                   EPCONDIS14          @ (((unsigned) &UEP14)*8) + 3;
#define                                 EPCONDIS14_bit      BANKMASK(UEP14), 3
extern volatile __bit                   EPCONDIS15          @ (((unsigned) &UEP15)*8) + 3;
#define                                 EPCONDIS15_bit      BANKMASK(UEP15), 3
extern volatile __bit                   EPCONDIS2           @ (((unsigned) &UEP2)*8) + 3;
#define                                 EPCONDIS2_bit       BANKMASK(UEP2), 3
extern volatile __bit                   EPCONDIS3           @ (((unsigned) &UEP3)*8) + 3;
#define                                 EPCONDIS3_bit       BANKMASK(UEP3), 3
extern volatile __bit                   EPCONDIS4           @ (((unsigned) &UEP4)*8) + 3;
#define                                 EPCONDIS4_bit       BANKMASK(UEP4), 3
extern volatile __bit                   EPCONDIS5           @ (((unsigned) &UEP5)*8) + 3;
#define                                 EPCONDIS5_bit       BANKMASK(UEP5), 3
extern volatile __bit                   EPCONDIS6           @ (((unsigned) &UEP6)*8) + 3;
#define                                 EPCONDIS6_bit       BANKMASK(UEP6), 3
extern volatile __bit                   EPCONDIS7           @ (((unsigned) &UEP7)*8) + 3;
#define                                 EPCONDIS7_bit       BANKMASK(UEP7), 3
extern volatile __bit                   EPCONDIS8           @ (((unsigned) &UEP8)*8) + 3;
#define                                 EPCONDIS8_bit       BANKMASK(UEP8), 3
extern volatile __bit                   EPCONDIS9           @ (((unsigned) &UEP9)*8) + 3;
#define                                 EPCONDIS9_bit       BANKMASK(UEP9), 3
extern volatile __bit                   EPHSHK0             @ (((unsigned) &UEP0)*8) + 4;
#define                                 EPHSHK0_bit         BANKMASK(UEP0), 4
extern volatile __bit                   EPHSHK1             @ (((unsigned) &UEP1)*8) + 4;
#define                                 EPHSHK1_bit         BANKMASK(UEP1), 4
extern volatile __bit                   EPHSHK10            @ (((unsigned) &UEP10)*8) + 4;
#define                                 EPHSHK10_bit        BANKMASK(UEP10), 4
extern volatile __bit                   EPHSHK11            @ (((unsigned) &UEP11)*8) + 4;
#define                                 EPHSHK11_bit        BANKMASK(UEP11), 4
extern volatile __bit                   EPHSHK12            @ (((unsigned) &UEP12)*8) + 4;
#define                                 EPHSHK12_bit        BANKMASK(UEP12), 4
extern volatile __bit                   EPHSHK13            @ (((unsigned) &UEP13)*8) + 4;
#define                                 EPHSHK13_bit        BANKMASK(UEP13), 4
extern volatile __bit                   EPHSHK14            @ (((unsigned) &UEP14)*8) + 4;
#define                                 EPHSHK14_bit        BANKMASK(UEP14), 4
extern volatile __bit                   EPHSHK15            @ (((unsigned) &UEP15)*8) + 4;
#define                                 EPHSHK15_bit        BANKMASK(UEP15), 4
extern volatile __bit                   EPHSHK2             @ (((unsigned) &UEP2)*8) + 4;
#define                                 EPHSHK2_bit         BANKMASK(UEP2), 4
extern volatile __bit                   EPHSHK3             @ (((unsigned) &UEP3)*8) + 4;
#define                                 EPHSHK3_bit         BANKMASK(UEP3), 4
extern volatile __bit                   EPHSHK4             @ (((unsigned) &UEP4)*8) + 4;
#define                                 EPHSHK4_bit         BANKMASK(UEP4), 4
extern volatile __bit                   EPHSHK5             @ (((unsigned) &UEP5)*8) + 4;
#define                                 EPHSHK5_bit         BANKMASK(UEP5), 4
extern volatile __bit                   EPHSHK6             @ (((unsigned) &UEP6)*8) + 4;
#define                                 EPHSHK6_bit         BANKMASK(UEP6), 4
extern volatile __bit                   EPHSHK7             @ (((unsigned) &UEP7)*8) + 4;
#define                                 EPHSHK7_bit         BANKMASK(UEP7), 4
extern volatile __bit                   EPHSHK8             @ (((unsigned) &UEP8)*8) + 4;
#define                                 EPHSHK8_bit         BANKMASK(UEP8), 4
extern volatile __bit                   EPHSHK9             @ (((unsigned) &UEP9)*8) + 4;
#define                                 EPHSHK9_bit         BANKMASK(UEP9), 4
extern volatile __bit                   EPINEN0             @ (((unsigned) &UEP0)*8) + 1;
#define                                 EPINEN0_bit         BANKMASK(UEP0), 1
extern volatile __bit                   EPINEN1             @ (((unsigned) &UEP1)*8) + 1;
#define                                 EPINEN1_bit         BANKMASK(UEP1), 1
extern volatile __bit                   EPINEN10            @ (((unsigned) &UEP10)*8) + 1;
#define                                 EPINEN10_bit        BANKMASK(UEP10), 1
extern volatile __bit                   EPINEN11            @ (((unsigned) &UEP11)*8) + 1;
#define                                 EPINEN11_bit        BANKMASK(UEP11), 1
extern volatile __bit                   EPINEN12            @ (((unsigned) &UEP12)*8) + 1;
#define                                 EPINEN12_bit        BANKMASK(UEP12), 1
extern volatile __bit                   EPINEN13            @ (((unsigned) &UEP13)*8) + 1;
#define                                 EPINEN13_bit        BANKMASK(UEP13), 1
extern volatile __bit                   EPINEN14            @ (((unsigned) &UEP14)*8) + 1;
#define                                 EPINEN14_bit        BANKMASK(UEP14), 1
extern volatile __bit                   EPINEN15            @ (((unsigned) &UEP15)*8) + 1;
#define                                 EPINEN15_bit        BANKMASK(UEP15), 1
extern volatile __bit                   EPINEN2             @ (((unsigned) &UEP2)*8) + 1;
#define                                 EPINEN2_bit         BANKMASK(UEP2), 1
extern volatile __bit                   EPINEN3             @ (((unsigned) &UEP3)*8) + 1;
#define                                 EPINEN3_bit         BANKMASK(UEP3), 1
extern volatile __bit                   EPINEN4             @ (((unsigned) &UEP4)*8) + 1;
#define                                 EPINEN4_bit         BANKMASK(UEP4), 1
extern volatile __bit                   EPINEN5             @ (((unsigned) &UEP5)*8) + 1;
#define                                 EPINEN5_bit         BANKMASK(UEP5), 1
extern volatile __bit                   EPINEN6             @ (((unsigned) &UEP6)*8) + 1;
#define                                 EPINEN6_bit         BANKMASK(UEP6), 1
extern volatile __bit                   EPINEN7             @ (((unsigned) &UEP7)*8) + 1;
#define                                 EPINEN7_bit         BANKMASK(UEP7), 1
extern volatile __bit                   EPINEN8             @ (((unsigned) &UEP8)*8) + 1;
#define                                 EPINEN8_bit         BANKMASK(UEP8), 1
extern volatile __bit                   EPINEN9             @ (((unsigned) &UEP9)*8) + 1;
#define                                 EPINEN9_bit         BANKMASK(UEP9), 1
extern volatile __bit                   EPOUTEN0            @ (((unsigned) &UEP0)*8) + 2;
#define                                 EPOUTEN0_bit        BANKMASK(UEP0), 2
extern volatile __bit                   EPOUTEN1            @ (((unsigned) &UEP1)*8) + 2;
#define                                 EPOUTEN1_bit        BANKMASK(UEP1), 2
extern volatile __bit                   EPOUTEN10           @ (((unsigned) &UEP10)*8) + 2;
#define                                 EPOUTEN10_bit       BANKMASK(UEP10), 2
extern volatile __bit                   EPOUTEN11           @ (((unsigned) &UEP11)*8) + 2;
#define                                 EPOUTEN11_bit       BANKMASK(UEP11), 2
extern volatile __bit                   EPOUTEN12           @ (((unsigned) &UEP12)*8) + 2;
#define                                 EPOUTEN12_bit       BANKMASK(UEP12), 2
extern volatile __bit                   EPOUTEN13           @ (((unsigned) &UEP13)*8) + 2;
#define                                 EPOUTEN13_bit       BANKMASK(UEP13), 2
extern volatile __bit                   EPOUTEN14           @ (((unsigned) &UEP14)*8) + 2;
#define                                 EPOUTEN14_bit       BANKMASK(UEP14), 2
extern volatile __bit                   EPOUTEN15           @ (((unsigned) &UEP15)*8) + 2;
#define                                 EPOUTEN15_bit       BANKMASK(UEP15), 2
extern volatile __bit                   EPOUTEN2            @ (((unsigned) &UEP2)*8) + 2;
#define                                 EPOUTEN2_bit        BANKMASK(UEP2), 2
extern volatile __bit                   EPOUTEN3            @ (((unsigned) &UEP3)*8) + 2;
#define                                 EPOUTEN3_bit        BANKMASK(UEP3), 2
extern volatile __bit                   EPOUTEN4            @ (((unsigned) &UEP4)*8) + 2;
#define                                 EPOUTEN4_bit        BANKMASK(UEP4), 2
extern volatile __bit                   EPOUTEN5            @ (((unsigned) &UEP5)*8) + 2;
#define                                 EPOUTEN5_bit        BANKMASK(UEP5), 2
extern volatile __bit                   EPOUTEN6            @ (((unsigned) &UEP6)*8) + 2;
#define                                 EPOUTEN6_bit        BANKMASK(UEP6), 2
extern volatile __bit                   EPOUTEN7            @ (((unsigned) &UEP7)*8) + 2;
#define                                 EPOUTEN7_bit        BANKMASK(UEP7), 2
extern volatile __bit                   EPOUTEN8            @ (((unsigned) &UEP8)*8) + 2;
#define                                 EPOUTEN8_bit        BANKMASK(UEP8), 2
extern volatile __bit                   EPOUTEN9            @ (((unsigned) &UEP9)*8) + 2;
#define                                 EPOUTEN9_bit        BANKMASK(UEP9), 2
extern volatile __bit                   EPSTALL0            @ (((unsigned) &UEP0)*8) + 0;
#define                                 EPSTALL0_bit        BANKMASK(UEP0), 0
extern volatile __bit                   EPSTALL1            @ (((unsigned) &UEP1)*8) + 0;
#define                                 EPSTALL1_bit        BANKMASK(UEP1), 0
extern volatile __bit                   EPSTALL10           @ (((unsigned) &UEP10)*8) + 0;
#define                                 EPSTALL10_bit       BANKMASK(UEP10), 0
extern volatile __bit                   EPSTALL11           @ (((unsigned) &UEP11)*8) + 0;
#define                                 EPSTALL11_bit       BANKMASK(UEP11), 0
extern volatile __bit                   EPSTALL12           @ (((unsigned) &UEP12)*8) + 0;
#define                                 EPSTALL12_bit       BANKMASK(UEP12), 0
extern volatile __bit                   EPSTALL13           @ (((unsigned) &UEP13)*8) + 0;
#define                                 EPSTALL13_bit       BANKMASK(UEP13), 0
extern volatile __bit                   EPSTALL14           @ (((unsigned) &UEP14)*8) + 0;
#define                                 EPSTALL14_bit       BANKMASK(UEP14), 0
extern volatile __bit                   EPSTALL15           @ (((unsigned) &UEP15)*8) + 0;
#define                                 EPSTALL15_bit       BANKMASK(UEP15), 0
extern volatile __bit                   EPSTALL2            @ (((unsigned) &UEP2)*8) + 0;
#define                                 EPSTALL2_bit        BANKMASK(UEP2), 0
extern volatile __bit                   EPSTALL3            @ (((unsigned) &UEP3)*8) + 0;
#define                                 EPSTALL3_bit        BANKMASK(UEP3), 0
extern volatile __bit                   EPSTALL4            @ (((unsigned) &UEP4)*8) + 0;
#define                                 EPSTALL4_bit        BANKMASK(UEP4), 0
extern volatile __bit                   EPSTALL5            @ (((unsigned) &UEP5)*8) + 0;
#define                                 EPSTALL5_bit        BANKMASK(UEP5), 0
extern volatile __bit                   EPSTALL6            @ (((unsigned) &UEP6)*8) + 0;
#define                                 EPSTALL6_bit        BANKMASK(UEP6), 0
extern volatile __bit                   EPSTALL7            @ (((unsigned) &UEP7)*8) + 0;
#define                                 EPSTALL7_bit        BANKMASK(UEP7), 0
extern volatile __bit                   EPSTALL8            @ (((unsigned) &UEP8)*8) + 0;
#define                                 EPSTALL8_bit        BANKMASK(UEP8), 0
extern volatile __bit                   EPSTALL9            @ (((unsigned) &UEP9)*8) + 0;
#define                                 EPSTALL9_bit        BANKMASK(UEP9), 0
extern volatile __bit                   EVPOL01             @ (((unsigned) &CM1CON)*8) + 3;
#define                                 EVPOL01_bit         BANKMASK(CM1CON), 3
extern volatile __bit                   EVPOL02             @ (((unsigned) &CM2CON)*8) + 3;
#define                                 EVPOL02_bit         BANKMASK(CM2CON), 3
extern volatile __bit                   EVPOL03             @ (((unsigned) &CM3CON)*8) + 3;
#define                                 EVPOL03_bit         BANKMASK(CM3CON), 3
extern volatile __bit                   EVPOL05             @ (((unsigned) &IPR5)*8) + 3;
#define                                 EVPOL05_bit         BANKMASK(IPR5), 3
extern volatile __bit                   EVPOL11             @ (((unsigned) &CM1CON)*8) + 4;
#define                                 EVPOL11_bit         BANKMASK(CM1CON), 4
extern volatile __bit                   EVPOL12             @ (((unsigned) &CM2CON)*8) + 4;
#define                                 EVPOL12_bit         BANKMASK(CM2CON), 4
extern volatile __bit                   EVPOL13             @ (((unsigned) &CM3CON)*8) + 4;
#define                                 EVPOL13_bit         BANKMASK(CM3CON), 4
extern volatile __bit                   EVPOL15             @ (((unsigned) &IPR5)*8) + 4;
#define                                 EVPOL15_bit         BANKMASK(IPR5), 4
extern volatile __bit                   FERR1               @ (((unsigned) &RCSTA1)*8) + 2;
#define                                 FERR1_bit           BANKMASK(RCSTA1), 2
extern volatile __bit                   FERR2               @ (((unsigned) &RCSTA2)*8) + 2;
#define                                 FERR2_bit           BANKMASK(RCSTA2), 2
extern volatile __bit                   FLTS                @ (((unsigned) &OSCCON)*8) + 2;
#define                                 FLTS_bit            BANKMASK(OSCCON), 2
extern volatile __bit                   FREE                @ (((unsigned) &EECON1)*8) + 4;
#define                                 FREE_bit            BANKMASK(EECON1), 4
extern volatile __bit                   FRM0                @ (((unsigned) &UFRML)*8) + 0;
#define                                 FRM0_bit            BANKMASK(UFRML), 0
extern volatile __bit                   FRM1                @ (((unsigned) &UFRML)*8) + 1;
#define                                 FRM1_bit            BANKMASK(UFRML), 1
extern volatile __bit                   FRM10               @ (((unsigned) &UFRMH)*8) + 2;
#define                                 FRM10_bit           BANKMASK(UFRMH), 2
extern volatile __bit                   FRM2                @ (((unsigned) &UFRML)*8) + 2;
#define                                 FRM2_bit            BANKMASK(UFRML), 2
extern volatile __bit                   FRM3                @ (((unsigned) &UFRML)*8) + 3;
#define                                 FRM3_bit            BANKMASK(UFRML), 3
extern volatile __bit                   FRM4                @ (((unsigned) &UFRML)*8) + 4;
#define                                 FRM4_bit            BANKMASK(UFRML), 4
extern volatile __bit                   FRM5                @ (((unsigned) &UFRML)*8) + 5;
#define                                 FRM5_bit            BANKMASK(UFRML), 5
extern volatile __bit                   FRM6                @ (((unsigned) &UFRML)*8) + 6;
#define                                 FRM6_bit            BANKMASK(UFRML), 6
extern volatile __bit                   FRM7                @ (((unsigned) &UFRML)*8) + 7;
#define                                 FRM7_bit            BANKMASK(UFRML), 7
extern volatile __bit                   FRM8                @ (((unsigned) &UFRMH)*8) + 0;
#define                                 FRM8_bit            BANKMASK(UFRMH), 0
extern volatile __bit                   FRM9                @ (((unsigned) &UFRMH)*8) + 1;
#define                                 FRM9_bit            BANKMASK(UFRMH), 1
extern volatile __bit                   FSEN                @ (((unsigned) &UCFG)*8) + 2;
#define                                 FSEN_bit            BANKMASK(UCFG), 2
extern volatile __bit                   GCEN1               @ (((unsigned) &SSP1CON2)*8) + 7;
#define                                 GCEN1_bit           BANKMASK(SSP1CON2), 7
extern volatile __bit                   GCEN2               @ (((unsigned) &SSP2CON2)*8) + 7;
#define                                 GCEN2_bit           BANKMASK(SSP2CON2), 7
extern volatile __bit                   GIE                 @ (((unsigned) &INTCON)*8) + 7;
#define                                 GIE_bit             BANKMASK(INTCON), 7
extern volatile __bit                   GIEH                @ (((unsigned) &INTCON)*8) + 7;
#define                                 GIEH_bit            BANKMASK(INTCON), 7
extern volatile __bit                   GIEL                @ (((unsigned) &INTCON)*8) + 6;
#define                                 GIEL_bit            BANKMASK(INTCON), 6
extern volatile __bit                   GIE_GIEH            @ (((unsigned) &INTCON)*8) + 7;
#define                                 GIE_GIEH_bit        BANKMASK(INTCON), 7
extern volatile __bit                   GO                  @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_bit              BANKMASK(ADCON0), 1
extern volatile __bit                   GODONE              @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GODONE_bit          BANKMASK(ADCON0), 1
extern volatile __bit                   GO_DONE             @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_DONE_bit         BANKMASK(ADCON0), 1
extern volatile __bit                   GO_NOT_DONE         @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_NOT_DONE_bit     BANKMASK(ADCON0), 1
extern volatile __bit                   GO_nDONE            @ (((unsigned) &ADCON0)*8) + 1;
#define                                 GO_nDONE_bit        BANKMASK(ADCON0), 1
extern volatile __bit                   HALFSEC             @ (((unsigned) &RTCCFG)*8) + 3;
#define                                 HALFSEC_bit         BANKMASK(RTCCFG), 3
extern volatile __bit                   HLVDEN              @ (((unsigned) &HLVDCON)*8) + 4;
#define                                 HLVDEN_bit          BANKMASK(HLVDCON), 4
extern volatile __bit                   HLVDIE              @ (((unsigned) &PIE2)*8) + 2;
#define                                 HLVDIE_bit          BANKMASK(PIE2), 2
extern volatile __bit                   HLVDIF              @ (((unsigned) &PIR2)*8) + 2;
#define                                 HLVDIF_bit          BANKMASK(PIR2), 2
extern volatile __bit                   HLVDIN              @ (((unsigned) &PORTA)*8) + 5;
#define                                 HLVDIN_bit          BANKMASK(PORTA), 5
extern volatile __bit                   HLVDIP              @ (((unsigned) &IPR2)*8) + 2;
#define                                 HLVDIP_bit          BANKMASK(IPR2), 2
extern volatile __bit                   HLVDL0              @ (((unsigned) &HLVDCON)*8) + 0;
#define                                 HLVDL0_bit          BANKMASK(HLVDCON), 0
extern volatile __bit                   HLVDL1              @ (((unsigned) &HLVDCON)*8) + 1;
#define                                 HLVDL1_bit          BANKMASK(HLVDCON), 1
extern volatile __bit                   HLVDL2              @ (((unsigned) &HLVDCON)*8) + 2;
#define                                 HLVDL2_bit          BANKMASK(HLVDCON), 2
extern volatile __bit                   HLVDL3              @ (((unsigned) &HLVDCON)*8) + 3;
#define                                 HLVDL3_bit          BANKMASK(HLVDCON), 3
extern volatile __bit                   I2C_DAT             @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 I2C_DAT_bit         BANKMASK(SSP1STAT), 5
extern volatile __bit                   I2C_DAT2            @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 I2C_DAT2_bit        BANKMASK(SSP2STAT), 5
extern volatile __bit                   I2C_READ            @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 I2C_READ_bit        BANKMASK(SSP1STAT), 2
extern volatile __bit                   I2C_READ2           @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 I2C_READ2_bit       BANKMASK(SSP2STAT), 2
extern volatile __bit                   I2C_START           @ (((unsigned) &SSP1STAT)*8) + 3;
#define                                 I2C_START_bit       BANKMASK(SSP1STAT), 3
extern volatile __bit                   I2C_START2          @ (((unsigned) &SSP2STAT)*8) + 3;
#define                                 I2C_START2_bit      BANKMASK(SSP2STAT), 3
extern volatile __bit                   I2C_STOP            @ (((unsigned) &SSP1STAT)*8) + 4;
#define                                 I2C_STOP_bit        BANKMASK(SSP1STAT), 4
extern volatile __bit                   I2C_STOP2           @ (((unsigned) &SSP2STAT)*8) + 4;
#define                                 I2C_STOP2_bit       BANKMASK(SSP2STAT), 4
extern volatile __bit                   IDISSEN             @ (((unsigned) &CTMUCONH)*8) + 1;
#define                                 IDISSEN_bit         BANKMASK(CTMUCONH), 1
extern volatile __bit                   IDLEIE              @ (((unsigned) &UIE)*8) + 4;
#define                                 IDLEIE_bit          BANKMASK(UIE), 4
extern volatile __bit                   IDLEIF              @ (((unsigned) &UIR)*8) + 4;
#define                                 IDLEIF_bit          BANKMASK(UIR), 4
extern volatile __bit                   IDLEN               @ (((unsigned) &OSCCON)*8) + 7;
#define                                 IDLEN_bit           BANKMASK(OSCCON), 7
extern volatile __bit                   INT0                @ (((unsigned) &PORTB)*8) + 0;
#define                                 INT0_bit            BANKMASK(PORTB), 0
extern volatile __bit                   INT0E               @ (((unsigned) &INTCON)*8) + 4;
#define                                 INT0E_bit           BANKMASK(INTCON), 4
extern volatile __bit                   INT0F               @ (((unsigned) &INTCON)*8) + 1;
#define                                 INT0F_bit           BANKMASK(INTCON), 1
extern volatile __bit                   INT0IE              @ (((unsigned) &INTCON)*8) + 4;
#define                                 INT0IE_bit          BANKMASK(INTCON), 4
extern volatile __bit                   INT0IF              @ (((unsigned) &INTCON)*8) + 1;
#define                                 INT0IF_bit          BANKMASK(INTCON), 1
extern volatile __bit                   INT1E               @ (((unsigned) &INTCON3)*8) + 3;
#define                                 INT1E_bit           BANKMASK(INTCON3), 3
extern volatile __bit                   INT1F               @ (((unsigned) &INTCON3)*8) + 0;
#define                                 INT1F_bit           BANKMASK(INTCON3), 0
extern volatile __bit                   INT1IE              @ (((unsigned) &INTCON3)*8) + 3;
#define                                 INT1IE_bit          BANKMASK(INTCON3), 3
extern volatile __bit                   INT1IF              @ (((unsigned) &INTCON3)*8) + 0;
#define                                 INT1IF_bit          BANKMASK(INTCON3), 0
extern volatile __bit                   INT1IP              @ (((unsigned) &INTCON3)*8) + 6;
#define                                 INT1IP_bit          BANKMASK(INTCON3), 6
extern volatile __bit                   INT1P               @ (((unsigned) &INTCON3)*8) + 6;
#define                                 INT1P_bit           BANKMASK(INTCON3), 6
extern volatile __bit                   INT2E               @ (((unsigned) &INTCON3)*8) + 4;
#define                                 INT2E_bit           BANKMASK(INTCON3), 4
extern volatile __bit                   INT2F               @ (((unsigned) &INTCON3)*8) + 1;
#define                                 INT2F_bit           BANKMASK(INTCON3), 1
extern volatile __bit                   INT2IE              @ (((unsigned) &INTCON3)*8) + 4;
#define                                 INT2IE_bit          BANKMASK(INTCON3), 4
extern volatile __bit                   INT2IF              @ (((unsigned) &INTCON3)*8) + 1;
#define                                 INT2IF_bit          BANKMASK(INTCON3), 1
extern volatile __bit                   INT2IP              @ (((unsigned) &INTCON3)*8) + 7;
#define                                 INT2IP_bit          BANKMASK(INTCON3), 7
extern volatile __bit                   INT2P               @ (((unsigned) &INTCON3)*8) + 7;
#define                                 INT2P_bit           BANKMASK(INTCON3), 7
extern volatile __bit                   INT3E               @ (((unsigned) &INTCON3)*8) + 5;
#define                                 INT3E_bit           BANKMASK(INTCON3), 5
extern volatile __bit                   INT3F               @ (((unsigned) &INTCON3)*8) + 2;
#define                                 INT3F_bit           BANKMASK(INTCON3), 2
extern volatile __bit                   INT3IE              @ (((unsigned) &INTCON3)*8) + 5;
#define                                 INT3IE_bit          BANKMASK(INTCON3), 5
extern volatile __bit                   INT3IF              @ (((unsigned) &INTCON3)*8) + 2;
#define                                 INT3IF_bit          BANKMASK(INTCON3), 2
extern volatile __bit                   INT3IP              @ (((unsigned) &INTCON2)*8) + 1;
#define                                 INT3IP_bit          BANKMASK(INTCON2), 1
extern volatile __bit                   INT3P               @ (((unsigned) &INTCON2)*8) + 1;
#define                                 INT3P_bit           BANKMASK(INTCON2), 1
extern volatile __bit                   INTEDG0             @ (((unsigned) &INTCON2)*8) + 6;
#define                                 INTEDG0_bit         BANKMASK(INTCON2), 6
extern volatile __bit                   INTEDG1             @ (((unsigned) &INTCON2)*8) + 5;
#define                                 INTEDG1_bit         BANKMASK(INTCON2), 5
extern volatile __bit                   INTEDG2             @ (((unsigned) &INTCON2)*8) + 4;
#define                                 INTEDG2_bit         BANKMASK(INTCON2), 4
extern volatile __bit                   INTEDG3             @ (((unsigned) &INTCON2)*8) + 3;
#define                                 INTEDG3_bit         BANKMASK(INTCON2), 3
extern volatile __bit                   INTLVL0             @ (((unsigned) &DMACON2)*8) + 0;
#define                                 INTLVL0_bit         BANKMASK(DMACON2), 0
extern volatile __bit                   INTLVL1             @ (((unsigned) &DMACON2)*8) + 1;
#define                                 INTLVL1_bit         BANKMASK(DMACON2), 1
extern volatile __bit                   INTLVL2             @ (((unsigned) &DMACON2)*8) + 2;
#define                                 INTLVL2_bit         BANKMASK(DMACON2), 2
extern volatile __bit                   INTLVL3             @ (((unsigned) &DMACON2)*8) + 3;
#define                                 INTLVL3_bit         BANKMASK(DMACON2), 3
extern volatile __bit                   INTSRC              @ (((unsigned) &OSCTUNE)*8) + 7;
#define                                 INTSRC_bit          BANKMASK(OSCTUNE), 7
extern volatile __bit                   IOLOCK              @ (((unsigned) &PPSCON)*8) + 0;
#define                                 IOLOCK_bit          BANKMASK(PPSCON), 0
extern volatile __bit                   IPEN                @ (((unsigned) &RCON)*8) + 7;
#define                                 IPEN_bit            BANKMASK(RCON), 7
extern volatile __bit                   IRCF0               @ (((unsigned) &OSCCON)*8) + 4;
#define                                 IRCF0_bit           BANKMASK(OSCCON), 4
extern volatile __bit                   IRCF1               @ (((unsigned) &OSCCON)*8) + 5;
#define                                 IRCF1_bit           BANKMASK(OSCCON), 5
extern volatile __bit                   IRCF2               @ (((unsigned) &OSCCON)*8) + 6;
#define                                 IRCF2_bit           BANKMASK(OSCCON), 6
extern volatile __bit                   IRNG0               @ (((unsigned) &CTMUICON)*8) + 0;
#define                                 IRNG0_bit           BANKMASK(CTMUICON), 0
extern volatile __bit                   IRNG1               @ (((unsigned) &CTMUICON)*8) + 1;
#define                                 IRNG1_bit           BANKMASK(CTMUICON), 1
extern volatile __bit                   IRVST               @ (((unsigned) &HLVDCON)*8) + 5;
#define                                 IRVST_bit           BANKMASK(HLVDCON), 5
extern volatile __bit                   ITRIM0              @ (((unsigned) &CTMUICON)*8) + 2;
#define                                 ITRIM0_bit          BANKMASK(CTMUICON), 2
extern volatile __bit                   ITRIM1              @ (((unsigned) &CTMUICON)*8) + 3;
#define                                 ITRIM1_bit          BANKMASK(CTMUICON), 3
extern volatile __bit                   ITRIM2              @ (((unsigned) &CTMUICON)*8) + 4;
#define                                 ITRIM2_bit          BANKMASK(CTMUICON), 4
extern volatile __bit                   ITRIM3              @ (((unsigned) &CTMUICON)*8) + 5;
#define                                 ITRIM3_bit          BANKMASK(CTMUICON), 5
extern volatile __bit                   ITRIM4              @ (((unsigned) &CTMUICON)*8) + 6;
#define                                 ITRIM4_bit          BANKMASK(CTMUICON), 6
extern volatile __bit                   ITRIM5              @ (((unsigned) &CTMUICON)*8) + 7;
#define                                 ITRIM5_bit          BANKMASK(CTMUICON), 7
extern volatile __bit                   KBI0                @ (((unsigned) &PORTB)*8) + 4;
#define                                 KBI0_bit            BANKMASK(PORTB), 4
extern volatile __bit                   KBI1                @ (((unsigned) &PORTB)*8) + 5;
#define                                 KBI1_bit            BANKMASK(PORTB), 5
extern volatile __bit                   KBI2                @ (((unsigned) &PORTB)*8) + 6;
#define                                 KBI2_bit            BANKMASK(PORTB), 6
extern volatile __bit                   KBI3                @ (((unsigned) &PORTB)*8) + 7;
#define                                 KBI3_bit            BANKMASK(PORTB), 7
extern volatile __bit                   LA0                 @ (((unsigned) &LATA)*8) + 0;
#define                                 LA0_bit             BANKMASK(LATA), 0
extern volatile __bit                   LA1                 @ (((unsigned) &LATA)*8) + 1;
#define                                 LA1_bit             BANKMASK(LATA), 1
extern volatile __bit                   LA2                 @ (((unsigned) &LATA)*8) + 2;
#define                                 LA2_bit             BANKMASK(LATA), 2
extern volatile __bit                   LA3                 @ (((unsigned) &LATA)*8) + 3;
#define                                 LA3_bit             BANKMASK(LATA), 3
extern volatile __bit                   LA5                 @ (((unsigned) &LATA)*8) + 5;
#define                                 LA5_bit             BANKMASK(LATA), 5
extern volatile __bit                   LA6                 @ (((unsigned) &LATA)*8) + 6;
#define                                 LA6_bit             BANKMASK(LATA), 6
extern volatile __bit                   LA7                 @ (((unsigned) &LATA)*8) + 7;
#define                                 LA7_bit             BANKMASK(LATA), 7
extern volatile __bit                   LATA0               @ (((unsigned) &LATA)*8) + 0;
#define                                 LATA0_bit           BANKMASK(LATA), 0
extern volatile __bit                   LATA1               @ (((unsigned) &LATA)*8) + 1;
#define                                 LATA1_bit           BANKMASK(LATA), 1
extern volatile __bit                   LATA2               @ (((unsigned) &LATA)*8) + 2;
#define                                 LATA2_bit           BANKMASK(LATA), 2
extern volatile __bit                   LATA3               @ (((unsigned) &LATA)*8) + 3;
#define                                 LATA3_bit           BANKMASK(LATA), 3
extern volatile __bit                   LATA5               @ (((unsigned) &LATA)*8) + 5;
#define                                 LATA5_bit           BANKMASK(LATA), 5
extern volatile __bit                   LATA6               @ (((unsigned) &LATA)*8) + 6;
#define                                 LATA6_bit           BANKMASK(LATA), 6
extern volatile __bit                   LATA7               @ (((unsigned) &LATA)*8) + 7;
#define                                 LATA7_bit           BANKMASK(LATA), 7
extern volatile __bit                   LATB0               @ (((unsigned) &LATB)*8) + 0;
#define                                 LATB0_bit           BANKMASK(LATB), 0
extern volatile __bit                   LATB1               @ (((unsigned) &LATB)*8) + 1;
#define                                 LATB1_bit           BANKMASK(LATB), 1
extern volatile __bit                   LATB2               @ (((unsigned) &LATB)*8) + 2;
#define                                 LATB2_bit           BANKMASK(LATB), 2
extern volatile __bit                   LATB3               @ (((unsigned) &LATB)*8) + 3;
#define                                 LATB3_bit           BANKMASK(LATB), 3
extern volatile __bit                   LATB4               @ (((unsigned) &LATB)*8) + 4;
#define                                 LATB4_bit           BANKMASK(LATB), 4
extern volatile __bit                   LATB5               @ (((unsigned) &LATB)*8) + 5;
#define                                 LATB5_bit           BANKMASK(LATB), 5
extern volatile __bit                   LATB6               @ (((unsigned) &LATB)*8) + 6;
#define                                 LATB6_bit           BANKMASK(LATB), 6
extern volatile __bit                   LATB7               @ (((unsigned) &LATB)*8) + 7;
#define                                 LATB7_bit           BANKMASK(LATB), 7
extern volatile __bit                   LATC0               @ (((unsigned) &LATC)*8) + 0;
#define                                 LATC0_bit           BANKMASK(LATC), 0
extern volatile __bit                   LATC1               @ (((unsigned) &LATC)*8) + 1;
#define                                 LATC1_bit           BANKMASK(LATC), 1
extern volatile __bit                   LATC2               @ (((unsigned) &LATC)*8) + 2;
#define                                 LATC2_bit           BANKMASK(LATC), 2
extern volatile __bit                   LATC6               @ (((unsigned) &LATC)*8) + 6;
#define                                 LATC6_bit           BANKMASK(LATC), 6
extern volatile __bit                   LATC7               @ (((unsigned) &LATC)*8) + 7;
#define                                 LATC7_bit           BANKMASK(LATC), 7
extern volatile __bit                   LB0                 @ (((unsigned) &LATB)*8) + 0;
#define                                 LB0_bit             BANKMASK(LATB), 0
extern volatile __bit                   LB1                 @ (((unsigned) &LATB)*8) + 1;
#define                                 LB1_bit             BANKMASK(LATB), 1
extern volatile __bit                   LB2                 @ (((unsigned) &LATB)*8) + 2;
#define                                 LB2_bit             BANKMASK(LATB), 2
extern volatile __bit                   LB3                 @ (((unsigned) &LATB)*8) + 3;
#define                                 LB3_bit             BANKMASK(LATB), 3
extern volatile __bit                   LB4                 @ (((unsigned) &LATB)*8) + 4;
#define                                 LB4_bit             BANKMASK(LATB), 4
extern volatile __bit                   LB5                 @ (((unsigned) &LATB)*8) + 5;
#define                                 LB5_bit             BANKMASK(LATB), 5
extern volatile __bit                   LB6                 @ (((unsigned) &LATB)*8) + 6;
#define                                 LB6_bit             BANKMASK(LATB), 6
extern volatile __bit                   LB7                 @ (((unsigned) &LATB)*8) + 7;
#define                                 LB7_bit             BANKMASK(LATB), 7
extern volatile __bit                   LC0                 @ (((unsigned) &LATC)*8) + 0;
#define                                 LC0_bit             BANKMASK(LATC), 0
extern volatile __bit                   LC1                 @ (((unsigned) &LATC)*8) + 1;
#define                                 LC1_bit             BANKMASK(LATC), 1
extern volatile __bit                   LC2                 @ (((unsigned) &LATC)*8) + 2;
#define                                 LC2_bit             BANKMASK(LATC), 2
extern volatile __bit                   LC6                 @ (((unsigned) &LATC)*8) + 6;
#define                                 LC6_bit             BANKMASK(LATC), 6
extern volatile __bit                   LC7                 @ (((unsigned) &LATC)*8) + 7;
#define                                 LC7_bit             BANKMASK(LATC), 7
extern volatile __bit                   LVDIE               @ (((unsigned) &PIE2)*8) + 2;
#define                                 LVDIE_bit           BANKMASK(PIE2), 2
extern volatile __bit                   LVDIF               @ (((unsigned) &PIR2)*8) + 2;
#define                                 LVDIF_bit           BANKMASK(PIR2), 2
extern volatile __bit                   LVDIN               @ (((unsigned) &PORTA)*8) + 5;
#define                                 LVDIN_bit           BANKMASK(PORTA), 5
extern volatile __bit                   LVDIP               @ (((unsigned) &IPR2)*8) + 2;
#define                                 LVDIP_bit           BANKMASK(IPR2), 2
extern volatile __bit                   LVDSTAT             @ (((unsigned) &WDTCON)*8) + 6;
#define                                 LVDSTAT_bit         BANKMASK(WDTCON), 6
extern volatile __bit                   MSK01               @ (((unsigned) &SSP1ADD)*8) + 0;
#define                                 MSK01_bit           BANKMASK(SSP1ADD), 0
extern volatile __bit                   MSK02               @ (((unsigned) &SSP2ADD)*8) + 0;
#define                                 MSK02_bit           BANKMASK(SSP2ADD), 0
extern volatile __bit                   MSK11               @ (((unsigned) &SSP1ADD)*8) + 1;
#define                                 MSK11_bit           BANKMASK(SSP1ADD), 1
extern volatile __bit                   MSK12               @ (((unsigned) &SSP2ADD)*8) + 1;
#define                                 MSK12_bit           BANKMASK(SSP2ADD), 1
extern volatile __bit                   MSK21               @ (((unsigned) &SSP1ADD)*8) + 2;
#define                                 MSK21_bit           BANKMASK(SSP1ADD), 2
extern volatile __bit                   MSK22               @ (((unsigned) &SSP2ADD)*8) + 2;
#define                                 MSK22_bit           BANKMASK(SSP2ADD), 2
extern volatile __bit                   MSK31               @ (((unsigned) &SSP1ADD)*8) + 3;
#define                                 MSK31_bit           BANKMASK(SSP1ADD), 3
extern volatile __bit                   MSK32               @ (((unsigned) &SSP2ADD)*8) + 3;
#define                                 MSK32_bit           BANKMASK(SSP2ADD), 3
extern volatile __bit                   MSK41               @ (((unsigned) &SSP1ADD)*8) + 4;
#define                                 MSK41_bit           BANKMASK(SSP1ADD), 4
extern volatile __bit                   MSK42               @ (((unsigned) &SSP2ADD)*8) + 4;
#define                                 MSK42_bit           BANKMASK(SSP2ADD), 4
extern volatile __bit                   MSK51               @ (((unsigned) &SSP1ADD)*8) + 5;
#define                                 MSK51_bit           BANKMASK(SSP1ADD), 5
extern volatile __bit                   MSK52               @ (((unsigned) &SSP2ADD)*8) + 5;
#define                                 MSK52_bit           BANKMASK(SSP2ADD), 5
extern volatile __bit                   MSK61               @ (((unsigned) &SSP1ADD)*8) + 6;
#define                                 MSK61_bit           BANKMASK(SSP1ADD), 6
extern volatile __bit                   MSK62               @ (((unsigned) &SSP2ADD)*8) + 6;
#define                                 MSK62_bit           BANKMASK(SSP2ADD), 6
extern volatile __bit                   MSK71               @ (((unsigned) &SSP1ADD)*8) + 7;
#define                                 MSK71_bit           BANKMASK(SSP1ADD), 7
extern volatile __bit                   MSK72               @ (((unsigned) &SSP2ADD)*8) + 7;
#define                                 MSK72_bit           BANKMASK(SSP2ADD), 7
extern volatile __bit                   NEGATIVE            @ (((unsigned) &STATUS)*8) + 4;
#define                                 NEGATIVE_bit        BANKMASK(STATUS), 4
extern volatile __bit                   NOT_A               @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 NOT_A_bit           BANKMASK(SSP1STAT), 5
extern volatile __bit                   NOT_ADDRESS         @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 NOT_ADDRESS_bit     BANKMASK(SSP1STAT), 5
extern volatile __bit                   NOT_BOR             @ (((unsigned) &RCON)*8) + 0;
#define                                 NOT_BOR_bit         BANKMASK(RCON), 0
extern volatile __bit                   NOT_CM              @ (((unsigned) &RCON)*8) + 5;
#define                                 NOT_CM_bit          BANKMASK(RCON), 5
extern volatile __bit                   NOT_DONE            @ (((unsigned) &ADCON0)*8) + 1;
#define                                 NOT_DONE_bit        BANKMASK(ADCON0), 1
extern volatile __bit                   NOT_PD              @ (((unsigned) &RCON)*8) + 2;
#define                                 NOT_PD_bit          BANKMASK(RCON), 2
extern volatile __bit                   NOT_POR             @ (((unsigned) &RCON)*8) + 1;
#define                                 NOT_POR_bit         BANKMASK(RCON), 1
extern volatile __bit                   NOT_RBPU            @ (((unsigned) &INTCON2)*8) + 7;
#define                                 NOT_RBPU_bit        BANKMASK(INTCON2), 7
extern volatile __bit                   NOT_RC8             @ (((unsigned) &RCSTA1)*8) + 6;
#define                                 NOT_RC8_bit         BANKMASK(RCSTA1), 6
extern volatile __bit                   NOT_RI              @ (((unsigned) &RCON)*8) + 4;
#define                                 NOT_RI_bit          BANKMASK(RCON), 4
extern volatile __bit                   NOT_SS1             @ (((unsigned) &PORTA)*8) + 5;
#define                                 NOT_SS1_bit         BANKMASK(PORTA), 5
extern volatile __bit                   NOT_T1DONE          @ (((unsigned) &T1GCON)*8) + 3;
#define                                 NOT_T1DONE_bit      BANKMASK(T1GCON), 3
extern volatile __bit                   NOT_T1SYNC          @ (((unsigned) &T1CON)*8) + 2;
#define                                 NOT_T1SYNC_bit      BANKMASK(T1CON), 2
extern volatile __bit                   NOT_T3DONE          @ (((unsigned) &T3GCON)*8) + 3;
#define                                 NOT_T3DONE_bit      BANKMASK(T3GCON), 3
extern volatile __bit                   NOT_T3SYNC          @ (((unsigned) &T3CON)*8) + 2;
#define                                 NOT_T3SYNC_bit      BANKMASK(T3CON), 2
extern volatile __bit                   NOT_T5DONE          @ (((unsigned) &T5GCON)*8) + 3;
#define                                 NOT_T5DONE_bit      BANKMASK(T5GCON), 3
extern volatile __bit                   NOT_T5SYNC          @ (((unsigned) &T5CON)*8) + 2;
#define                                 NOT_T5SYNC_bit      BANKMASK(T5CON), 2
extern volatile __bit                   NOT_TO              @ (((unsigned) &RCON)*8) + 3;
#define                                 NOT_TO_bit          BANKMASK(RCON), 3
extern volatile __bit                   NOT_TX8             @ (((unsigned) &TXSTA1)*8) + 6;
#define                                 NOT_TX8_bit         BANKMASK(TXSTA1), 6
extern volatile __bit                   NOT_UOE             @ (((unsigned) &PORTC)*8) + 1;
#define                                 NOT_UOE_bit         BANKMASK(PORTC), 1
extern volatile __bit                   NOT_W               @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 NOT_W_bit           BANKMASK(SSP1STAT), 2
extern volatile __bit                   NOT_WRITE           @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 NOT_WRITE_bit       BANKMASK(SSP1STAT), 2
extern volatile __bit                   OERR1               @ (((unsigned) &RCSTA1)*8) + 1;
#define                                 OERR1_bit           BANKMASK(RCSTA1), 1
extern volatile __bit                   OERR2               @ (((unsigned) &RCSTA2)*8) + 1;
#define                                 OERR2_bit           BANKMASK(RCSTA2), 1
extern volatile __bit                   OSC1                @ (((unsigned) &PORTA)*8) + 7;
#define                                 OSC1_bit            BANKMASK(PORTA), 7
extern volatile __bit                   OSC2                @ (((unsigned) &PORTA)*8) + 6;
#define                                 OSC2_bit            BANKMASK(PORTA), 6
extern volatile __bit                   OSCFIE              @ (((unsigned) &PIE2)*8) + 7;
#define                                 OSCFIE_bit          BANKMASK(PIE2), 7
extern volatile __bit                   OSCFIF              @ (((unsigned) &PIR2)*8) + 7;
#define                                 OSCFIF_bit          BANKMASK(PIR2), 7
extern volatile __bit                   OSCFIP              @ (((unsigned) &IPR2)*8) + 7;
#define                                 OSCFIP_bit          BANKMASK(IPR2), 7
extern volatile __bit                   OSTS                @ (((unsigned) &OSCCON)*8) + 3;
#define                                 OSTS_bit            BANKMASK(OSCCON), 3
extern volatile __bit                   OV                  @ (((unsigned) &STATUS)*8) + 3;
#define                                 OV_bit              BANKMASK(STATUS), 3
extern volatile __bit                   OVERFLOW            @ (((unsigned) &STATUS)*8) + 3;
#define                                 OVERFLOW_bit        BANKMASK(STATUS), 3
extern volatile __bit                   P1DC0               @ (((unsigned) &ECCP1DEL)*8) + 0;
#define                                 P1DC0_bit           BANKMASK(ECCP1DEL), 0
extern volatile __bit                   P1DC1               @ (((unsigned) &ECCP1DEL)*8) + 1;
#define                                 P1DC1_bit           BANKMASK(ECCP1DEL), 1
extern volatile __bit                   P1DC2               @ (((unsigned) &ECCP1DEL)*8) + 2;
#define                                 P1DC2_bit           BANKMASK(ECCP1DEL), 2
extern volatile __bit                   P1DC3               @ (((unsigned) &ECCP1DEL)*8) + 3;
#define                                 P1DC3_bit           BANKMASK(ECCP1DEL), 3
extern volatile __bit                   P1DC4               @ (((unsigned) &ECCP1DEL)*8) + 4;
#define                                 P1DC4_bit           BANKMASK(ECCP1DEL), 4
extern volatile __bit                   P1DC5               @ (((unsigned) &ECCP1DEL)*8) + 5;
#define                                 P1DC5_bit           BANKMASK(ECCP1DEL), 5
extern volatile __bit                   P1DC6               @ (((unsigned) &ECCP1DEL)*8) + 6;
#define                                 P1DC6_bit           BANKMASK(ECCP1DEL), 6
extern volatile __bit                   P1M0                @ (((unsigned) &CCP1CON)*8) + 6;
#define                                 P1M0_bit            BANKMASK(CCP1CON), 6
extern volatile __bit                   P1M1                @ (((unsigned) &CCP1CON)*8) + 7;
#define                                 P1M1_bit            BANKMASK(CCP1CON), 7
extern volatile __bit                   P1RSEN              @ (((unsigned) &ECCP1DEL)*8) + 7;
#define                                 P1RSEN_bit          BANKMASK(ECCP1DEL), 7
extern volatile __bit                   P2                  @ (((unsigned) &SSP2STAT)*8) + 4;
#define                                 P2_bit              BANKMASK(SSP2STAT), 4
extern volatile __bit                   P2DC02              @ (((unsigned) &PSTR2CON)*8) + 0;
#define                                 P2DC02_bit          BANKMASK(PSTR2CON), 0
extern volatile __bit                   P2DC0CON            @ (((unsigned) &PSTR2CON)*8) + 0;
#define                                 P2DC0CON_bit        BANKMASK(PSTR2CON), 0
extern volatile __bit                   P2DC12              @ (((unsigned) &PSTR2CON)*8) + 1;
#define                                 P2DC12_bit          BANKMASK(PSTR2CON), 1
extern volatile __bit                   P2DC1CON            @ (((unsigned) &PSTR2CON)*8) + 1;
#define                                 P2DC1CON_bit        BANKMASK(PSTR2CON), 1
extern volatile __bit                   P2DC22              @ (((unsigned) &PSTR2CON)*8) + 2;
#define                                 P2DC22_bit          BANKMASK(PSTR2CON), 2
extern volatile __bit                   P2DC2CON            @ (((unsigned) &PSTR2CON)*8) + 2;
#define                                 P2DC2CON_bit        BANKMASK(PSTR2CON), 2
extern volatile __bit                   P2DC32              @ (((unsigned) &PSTR2CON)*8) + 3;
#define                                 P2DC32_bit          BANKMASK(PSTR2CON), 3
extern volatile __bit                   P2DC3CON            @ (((unsigned) &PSTR2CON)*8) + 3;
#define                                 P2DC3CON_bit        BANKMASK(PSTR2CON), 3
extern volatile __bit                   P2DC42              @ (((unsigned) &PSTR2CON)*8) + 4;
#define                                 P2DC42_bit          BANKMASK(PSTR2CON), 4
extern volatile __bit                   P2DC4CON            @ (((unsigned) &PSTR2CON)*8) + 4;
#define                                 P2DC4CON_bit        BANKMASK(PSTR2CON), 4
extern volatile __bit                   P2DC52              @ (((unsigned) &PSTR2CON)*8) + 5;
#define                                 P2DC52_bit          BANKMASK(PSTR2CON), 5
extern volatile __bit                   P2DC5CON            @ (((unsigned) &PSTR2CON)*8) + 5;
#define                                 P2DC5CON_bit        BANKMASK(PSTR2CON), 5
extern volatile __bit                   P2DC62              @ (((unsigned) &PSTR2CON)*8) + 6;
#define                                 P2DC62_bit          BANKMASK(PSTR2CON), 6
extern volatile __bit                   P2DC6CON            @ (((unsigned) &PSTR2CON)*8) + 6;
#define                                 P2DC6CON_bit        BANKMASK(PSTR2CON), 6
extern volatile __bit                   P2M0                @ (((unsigned) &CCP2CON)*8) + 6;
#define                                 P2M0_bit            BANKMASK(CCP2CON), 6
extern volatile __bit                   P2M1                @ (((unsigned) &CCP2CON)*8) + 7;
#define                                 P2M1_bit            BANKMASK(CCP2CON), 7
extern volatile __bit                   P2RSEN              @ (((unsigned) &ECCP2DEL)*8) + 7;
#define                                 P2RSEN_bit          BANKMASK(ECCP2DEL), 7
extern volatile __bit                   P3DC0               @ (((unsigned) &ECCP3DEL)*8) + 0;
#define                                 P3DC0_bit           BANKMASK(ECCP3DEL), 0
extern volatile __bit                   P3DC1               @ (((unsigned) &ECCP3DEL)*8) + 1;
#define                                 P3DC1_bit           BANKMASK(ECCP3DEL), 1
extern volatile __bit                   P3DC2               @ (((unsigned) &ECCP3DEL)*8) + 2;
#define                                 P3DC2_bit           BANKMASK(ECCP3DEL), 2
extern volatile __bit                   P3DC3               @ (((unsigned) &ECCP3DEL)*8) + 3;
#define                                 P3DC3_bit           BANKMASK(ECCP3DEL), 3
extern volatile __bit                   P3DC4               @ (((unsigned) &ECCP3DEL)*8) + 4;
#define                                 P3DC4_bit           BANKMASK(ECCP3DEL), 4
extern volatile __bit                   P3DC5               @ (((unsigned) &ECCP3DEL)*8) + 5;
#define                                 P3DC5_bit           BANKMASK(ECCP3DEL), 5
extern volatile __bit                   P3DC6               @ (((unsigned) &ECCP3DEL)*8) + 6;
#define                                 P3DC6_bit           BANKMASK(ECCP3DEL), 6
extern volatile __bit                   P3M0                @ (((unsigned) &CCP3CON)*8) + 6;
#define                                 P3M0_bit            BANKMASK(CCP3CON), 6
extern volatile __bit                   P3M1                @ (((unsigned) &CCP3CON)*8) + 7;
#define                                 P3M1_bit            BANKMASK(CCP3CON), 7
extern volatile __bit                   P3RSEN              @ (((unsigned) &ECCP3DEL)*8) + 7;
#define                                 P3RSEN_bit          BANKMASK(ECCP3DEL), 7
extern volatile __bit                   PA1                 @ (((unsigned) &PORTC)*8) + 2;
#define                                 PA1_bit             BANKMASK(PORTC), 2
extern volatile __bit                   PA2                 @ (((unsigned) &PORTC)*8) + 1;
#define                                 PA2_bit             BANKMASK(PORTC), 1
extern volatile __bit                   PCFG0               @ (((unsigned) &ANCON0)*8) + 0;
#define                                 PCFG0_bit           BANKMASK(ANCON0), 0
extern volatile __bit                   PCFG1               @ (((unsigned) &ANCON0)*8) + 1;
#define                                 PCFG1_bit           BANKMASK(ANCON0), 1
extern volatile __bit                   PCFG10              @ (((unsigned) &ANCON1)*8) + 2;
#define                                 PCFG10_bit          BANKMASK(ANCON1), 2
extern volatile __bit                   PCFG11              @ (((unsigned) &ANCON1)*8) + 3;
#define                                 PCFG11_bit          BANKMASK(ANCON1), 3
extern volatile __bit                   PCFG12              @ (((unsigned) &ANCON1)*8) + 4;
#define                                 PCFG12_bit          BANKMASK(ANCON1), 4
extern volatile __bit                   PCFG15              @ (((unsigned) &ANCON1)*8) + 7;
#define                                 PCFG15_bit          BANKMASK(ANCON1), 7
extern volatile __bit                   PCFG2               @ (((unsigned) &ANCON0)*8) + 2;
#define                                 PCFG2_bit           BANKMASK(ANCON0), 2
extern volatile __bit                   PCFG3               @ (((unsigned) &ANCON0)*8) + 3;
#define                                 PCFG3_bit           BANKMASK(ANCON0), 3
extern volatile __bit                   PCFG4               @ (((unsigned) &ANCON0)*8) + 4;
#define                                 PCFG4_bit           BANKMASK(ANCON0), 4
extern volatile __bit                   PCFG8               @ (((unsigned) &ANCON1)*8) + 0;
#define                                 PCFG8_bit           BANKMASK(ANCON1), 0
extern volatile __bit                   PCFG9               @ (((unsigned) &ANCON1)*8) + 1;
#define                                 PCFG9_bit           BANKMASK(ANCON1), 1
extern volatile __bit                   PD                  @ (((unsigned) &RCON)*8) + 2;
#define                                 PD_bit              BANKMASK(RCON), 2
extern volatile __bit                   PEIE                @ (((unsigned) &INTCON)*8) + 6;
#define                                 PEIE_bit            BANKMASK(INTCON), 6
extern volatile __bit                   PEIE_GIEL           @ (((unsigned) &INTCON)*8) + 6;
#define                                 PEIE_GIEL_bit       BANKMASK(INTCON), 6
extern volatile __bit                   PEN1                @ (((unsigned) &SSP1CON2)*8) + 2;
#define                                 PEN1_bit            BANKMASK(SSP1CON2), 2
extern volatile __bit                   PEN2                @ (((unsigned) &SSP2CON2)*8) + 2;
#define                                 PEN2_bit            BANKMASK(SSP2CON2), 2
extern volatile __bit                   PGC                 @ (((unsigned) &PORTB)*8) + 6;
#define                                 PGC_bit             BANKMASK(PORTB), 6
extern volatile __bit                   PGD                 @ (((unsigned) &PORTB)*8) + 7;
#define                                 PGD_bit             BANKMASK(PORTB), 7
extern volatile __bit                   PIDEE               @ (((unsigned) &UEIE)*8) + 0;
#define                                 PIDEE_bit           BANKMASK(UEIE), 0
extern volatile __bit                   PIDEF               @ (((unsigned) &UEIR)*8) + 0;
#define                                 PIDEF_bit           BANKMASK(UEIR), 0
extern volatile __bit                   PKTDIS              @ (((unsigned) &UCON)*8) + 4;
#define                                 PKTDIS_bit          BANKMASK(UCON), 4
extern volatile __bit                   PLLEN               @ (((unsigned) &OSCTUNE)*8) + 6;
#define                                 PLLEN_bit           BANKMASK(OSCTUNE), 6
extern volatile __bit                   PMDADC              @ (((unsigned) &PMDIS0)*8) + 0;
#define                                 PMDADC_bit          BANKMASK(PMDIS0), 0
extern volatile __bit                   PMDCCP10            @ (((unsigned) &PMDIS3)*8) + 7;
#define                                 PMDCCP10_bit        BANKMASK(PMDIS3), 7
extern volatile __bit                   PMDCCP4             @ (((unsigned) &PMDIS3)*8) + 1;
#define                                 PMDCCP4_bit         BANKMASK(PMDIS3), 1
extern volatile __bit                   PMDCCP5             @ (((unsigned) &PMDIS3)*8) + 2;
#define                                 PMDCCP5_bit         BANKMASK(PMDIS3), 2
extern volatile __bit                   PMDCCP6             @ (((unsigned) &PMDIS3)*8) + 3;
#define                                 PMDCCP6_bit         BANKMASK(PMDIS3), 3
extern volatile __bit                   PMDCCP7             @ (((unsigned) &PMDIS3)*8) + 4;
#define                                 PMDCCP7_bit         BANKMASK(PMDIS3), 4
extern volatile __bit                   PMDCCP8             @ (((unsigned) &PMDIS3)*8) + 5;
#define                                 PMDCCP8_bit         BANKMASK(PMDIS3), 5
extern volatile __bit                   PMDCCP9             @ (((unsigned) &PMDIS3)*8) + 6;
#define                                 PMDCCP9_bit         BANKMASK(PMDIS3), 6
extern volatile __bit                   PMDCMP1             @ (((unsigned) &PMDIS2)*8) + 0;
#define                                 PMDCMP1_bit         BANKMASK(PMDIS2), 0
extern volatile __bit                   PMDCMP2             @ (((unsigned) &PMDIS2)*8) + 1;
#define                                 PMDCMP2_bit         BANKMASK(PMDIS2), 1
extern volatile __bit                   PMDCMP3             @ (((unsigned) &PMDIS2)*8) + 2;
#define                                 PMDCMP3_bit         BANKMASK(PMDIS2), 2
extern volatile __bit                   PMDCTMU             @ (((unsigned) &PMDIS1)*8) + 6;
#define                                 PMDCTMU_bit         BANKMASK(PMDIS1), 6
extern volatile __bit                   PMDECCP1            @ (((unsigned) &PMDIS0)*8) + 5;
#define                                 PMDECCP1_bit        BANKMASK(PMDIS0), 5
extern volatile __bit                   PMDECCP2            @ (((unsigned) &PMDIS0)*8) + 6;
#define                                 PMDECCP2_bit        BANKMASK(PMDIS0), 6
extern volatile __bit                   PMDECCP3            @ (((unsigned) &PMDIS0)*8) + 7;
#define                                 PMDECCP3_bit        BANKMASK(PMDIS0), 7
extern volatile __bit                   PMDMSSP1            @ (((unsigned) &PMDIS0)*8) + 1;
#define                                 PMDMSSP1_bit        BANKMASK(PMDIS0), 1
extern volatile __bit                   PMDMSSP2            @ (((unsigned) &PMDIS0)*8) + 2;
#define                                 PMDMSSP2_bit        BANKMASK(PMDIS0), 2
extern volatile __bit                   PMDRTCC             @ (((unsigned) &PMDIS1)*8) + 5;
#define                                 PMDRTCC_bit         BANKMASK(PMDIS1), 5
extern volatile __bit                   PMDTMR1             @ (((unsigned) &PMDIS1)*8) + 1;
#define                                 PMDTMR1_bit         BANKMASK(PMDIS1), 1
extern volatile __bit                   PMDTMR2             @ (((unsigned) &PMDIS1)*8) + 2;
#define                                 PMDTMR2_bit         BANKMASK(PMDIS1), 2
extern volatile __bit                   PMDTMR3             @ (((unsigned) &PMDIS1)*8) + 3;
#define                                 PMDTMR3_bit         BANKMASK(PMDIS1), 3
extern volatile __bit                   PMDTMR4             @ (((unsigned) &PMDIS1)*8) + 4;
#define                                 PMDTMR4_bit         BANKMASK(PMDIS1), 4
extern volatile __bit                   PMDTMR5             @ (((unsigned) &PMDIS2)*8) + 3;
#define                                 PMDTMR5_bit         BANKMASK(PMDIS2), 3
extern volatile __bit                   PMDTMR6             @ (((unsigned) &PMDIS2)*8) + 4;
#define                                 PMDTMR6_bit         BANKMASK(PMDIS2), 4
extern volatile __bit                   PMDTMR8             @ (((unsigned) &PMDIS2)*8) + 6;
#define                                 PMDTMR8_bit         BANKMASK(PMDIS2), 6
extern volatile __bit                   PMDUART1            @ (((unsigned) &PMDIS0)*8) + 3;
#define                                 PMDUART1_bit        BANKMASK(PMDIS0), 3
extern volatile __bit                   PMDUART2            @ (((unsigned) &PMDIS0)*8) + 4;
#define                                 PMDUART2_bit        BANKMASK(PMDIS0), 4
extern volatile __bit                   POR                 @ (((unsigned) &RCON)*8) + 1;
#define                                 POR_bit             BANKMASK(RCON), 1
extern volatile __bit                   PPB0                @ (((unsigned) &UCFG)*8) + 0;
#define                                 PPB0_bit            BANKMASK(UCFG), 0
extern volatile __bit                   PPB1                @ (((unsigned) &UCFG)*8) + 1;
#define                                 PPB1_bit            BANKMASK(UCFG), 1
extern volatile __bit                   PPBI                @ (((unsigned) &USTAT)*8) + 1;
#define                                 PPBI_bit            BANKMASK(USTAT), 1
extern volatile __bit                   PPBRST              @ (((unsigned) &UCON)*8) + 6;
#define                                 PPBRST_bit          BANKMASK(UCON), 6
extern volatile __bit                   PRISD               @ (((unsigned) &OSCCON2)*8) + 2;
#define                                 PRISD_bit           BANKMASK(OSCCON2), 2
extern volatile __bit                   PSA                 @ (((unsigned) &T0CON)*8) + 3;
#define                                 PSA_bit             BANKMASK(T0CON), 3
extern volatile __bit                   PSS1AC0             @ (((unsigned) &ECCP1AS)*8) + 2;
#define                                 PSS1AC0_bit         BANKMASK(ECCP1AS), 2
extern volatile __bit                   PSS1AC1             @ (((unsigned) &ECCP1AS)*8) + 3;
#define                                 PSS1AC1_bit         BANKMASK(ECCP1AS), 3
extern volatile __bit                   PSS1BD0             @ (((unsigned) &ECCP1AS)*8) + 0;
#define                                 PSS1BD0_bit         BANKMASK(ECCP1AS), 0
extern volatile __bit                   PSS1BD1             @ (((unsigned) &ECCP1AS)*8) + 1;
#define                                 PSS1BD1_bit         BANKMASK(ECCP1AS), 1
extern volatile __bit                   PSS2AC0             @ (((unsigned) &ECCP2AS)*8) + 2;
#define                                 PSS2AC0_bit         BANKMASK(ECCP2AS), 2
extern volatile __bit                   PSS2AC1             @ (((unsigned) &ECCP2AS)*8) + 3;
#define                                 PSS2AC1_bit         BANKMASK(ECCP2AS), 3
extern volatile __bit                   PSS2BD0             @ (((unsigned) &ECCP2AS)*8) + 0;
#define                                 PSS2BD0_bit         BANKMASK(ECCP2AS), 0
extern volatile __bit                   PSS2BD1             @ (((unsigned) &ECCP2AS)*8) + 1;
#define                                 PSS2BD1_bit         BANKMASK(ECCP2AS), 1
extern volatile __bit                   PSS3AC0             @ (((unsigned) &ECCP3AS)*8) + 2;
#define                                 PSS3AC0_bit         BANKMASK(ECCP3AS), 2
extern volatile __bit                   PSS3AC1             @ (((unsigned) &ECCP3AS)*8) + 3;
#define                                 PSS3AC1_bit         BANKMASK(ECCP3AS), 3
extern volatile __bit                   PSS3BD0             @ (((unsigned) &ECCP3AS)*8) + 0;
#define                                 PSS3BD0_bit         BANKMASK(ECCP3AS), 0
extern volatile __bit                   PSS3BD1             @ (((unsigned) &ECCP3AS)*8) + 1;
#define                                 PSS3BD1_bit         BANKMASK(ECCP3AS), 1
extern volatile __bit                   RA0                 @ (((unsigned) &PORTA)*8) + 0;
#define                                 RA0_bit             BANKMASK(PORTA), 0
extern volatile __bit                   RA1                 @ (((unsigned) &PORTA)*8) + 1;
#define                                 RA1_bit             BANKMASK(PORTA), 1
extern volatile __bit                   RA2                 @ (((unsigned) &PORTA)*8) + 2;
#define                                 RA2_bit             BANKMASK(PORTA), 2
extern volatile __bit                   RA3                 @ (((unsigned) &PORTA)*8) + 3;
#define                                 RA3_bit             BANKMASK(PORTA), 3
extern volatile __bit                   RA5                 @ (((unsigned) &PORTA)*8) + 5;
#define                                 RA5_bit             BANKMASK(PORTA), 5
extern volatile __bit                   RA6                 @ (((unsigned) &PORTA)*8) + 6;
#define                                 RA6_bit             BANKMASK(PORTA), 6
extern volatile __bit                   RA7                 @ (((unsigned) &PORTA)*8) + 7;
#define                                 RA7_bit             BANKMASK(PORTA), 7
extern volatile __bit                   RB0                 @ (((unsigned) &PORTB)*8) + 0;
#define                                 RB0_bit             BANKMASK(PORTB), 0
extern volatile __bit                   RB1                 @ (((unsigned) &PORTB)*8) + 1;
#define                                 RB1_bit             BANKMASK(PORTB), 1
extern volatile __bit                   RB2                 @ (((unsigned) &PORTB)*8) + 2;
#define                                 RB2_bit             BANKMASK(PORTB), 2
extern volatile __bit                   RB3                 @ (((unsigned) &PORTB)*8) + 3;
#define                                 RB3_bit             BANKMASK(PORTB), 3
extern volatile __bit                   RB4                 @ (((unsigned) &PORTB)*8) + 4;
#define                                 RB4_bit             BANKMASK(PORTB), 4
extern volatile __bit                   RB5                 @ (((unsigned) &PORTB)*8) + 5;
#define                                 RB5_bit             BANKMASK(PORTB), 5
extern volatile __bit                   RB6                 @ (((unsigned) &PORTB)*8) + 6;
#define                                 RB6_bit             BANKMASK(PORTB), 6
extern volatile __bit                   RB7                 @ (((unsigned) &PORTB)*8) + 7;
#define                                 RB7_bit             BANKMASK(PORTB), 7
extern volatile __bit                   RBIE                @ (((unsigned) &INTCON)*8) + 3;
#define                                 RBIE_bit            BANKMASK(INTCON), 3
extern volatile __bit                   RBIF                @ (((unsigned) &INTCON)*8) + 0;
#define                                 RBIF_bit            BANKMASK(INTCON), 0
extern volatile __bit                   RBIP                @ (((unsigned) &INTCON2)*8) + 0;
#define                                 RBIP_bit            BANKMASK(INTCON2), 0
extern volatile __bit                   RBPU                @ (((unsigned) &INTCON2)*8) + 7;
#define                                 RBPU_bit            BANKMASK(INTCON2), 7
extern volatile __bit                   RC0                 @ (((unsigned) &PORTC)*8) + 0;
#define                                 RC0_bit             BANKMASK(PORTC), 0
extern volatile __bit                   RC1                 @ (((unsigned) &PORTC)*8) + 1;
#define                                 RC1_bit             BANKMASK(PORTC), 1
extern volatile __bit                   RC1IE               @ (((unsigned) &PIE1)*8) + 5;
#define                                 RC1IE_bit           BANKMASK(PIE1), 5
extern volatile __bit                   RC1IF               @ (((unsigned) &PIR1)*8) + 5;
#define                                 RC1IF_bit           BANKMASK(PIR1), 5
extern volatile __bit                   RC1IP               @ (((unsigned) &IPR1)*8) + 5;
#define                                 RC1IP_bit           BANKMASK(IPR1), 5
extern volatile __bit                   RC2                 @ (((unsigned) &PORTC)*8) + 2;
#define                                 RC2_bit             BANKMASK(PORTC), 2
extern volatile __bit                   RC2IE               @ (((unsigned) &PIE3)*8) + 5;
#define                                 RC2IE_bit           BANKMASK(PIE3), 5
extern volatile __bit                   RC2IF               @ (((unsigned) &PIR3)*8) + 5;
#define                                 RC2IF_bit           BANKMASK(PIR3), 5
extern volatile __bit                   RC2IP               @ (((unsigned) &IPR3)*8) + 5;
#define                                 RC2IP_bit           BANKMASK(IPR3), 5
extern volatile __bit                   RC4                 @ (((unsigned) &PORTC)*8) + 4;
#define                                 RC4_bit             BANKMASK(PORTC), 4
extern volatile __bit                   RC5                 @ (((unsigned) &PORTC)*8) + 5;
#define                                 RC5_bit             BANKMASK(PORTC), 5
extern volatile __bit                   RC6                 @ (((unsigned) &PORTC)*8) + 6;
#define                                 RC6_bit             BANKMASK(PORTC), 6
extern volatile __bit                   RC7                 @ (((unsigned) &PORTC)*8) + 7;
#define                                 RC7_bit             BANKMASK(PORTC), 7
extern volatile __bit                   RC8_9               @ (((unsigned) &RCSTA1)*8) + 6;
#define                                 RC8_9_bit           BANKMASK(RCSTA1), 6
extern volatile __bit                   RC8_92              @ (((unsigned) &RCSTA2)*8) + 6;
#define                                 RC8_92_bit          BANKMASK(RCSTA2), 6
extern volatile __bit                   RC9                 @ (((unsigned) &RCSTA1)*8) + 6;
#define                                 RC9_bit             BANKMASK(RCSTA1), 6
extern volatile __bit                   RC92                @ (((unsigned) &RCSTA2)*8) + 6;
#define                                 RC92_bit            BANKMASK(RCSTA2), 6
extern volatile __bit                   RCD8                @ (((unsigned) &RCSTA1)*8) + 0;
#define                                 RCD8_bit            BANKMASK(RCSTA1), 0
extern volatile __bit                   RCD82               @ (((unsigned) &RCSTA2)*8) + 0;
#define                                 RCD82_bit           BANKMASK(RCSTA2), 0
extern volatile __bit                   RCEN1               @ (((unsigned) &SSP1CON2)*8) + 3;
#define                                 RCEN1_bit           BANKMASK(SSP1CON2), 3
extern volatile __bit                   RCEN2               @ (((unsigned) &SSP2CON2)*8) + 3;
#define                                 RCEN2_bit           BANKMASK(SSP2CON2), 3
extern volatile __bit                   RCIDL1              @ (((unsigned) &BAUDCON1)*8) + 6;
#define                                 RCIDL1_bit          BANKMASK(BAUDCON1), 6
extern volatile __bit                   RCIDL2              @ (((unsigned) &BAUDCON2)*8) + 6;
#define                                 RCIDL2_bit          BANKMASK(BAUDCON2), 6
extern volatile __bit                   RCIE                @ (((unsigned) &PIE1)*8) + 5;
#define                                 RCIE_bit            BANKMASK(PIE1), 5
extern volatile __bit                   RCIF                @ (((unsigned) &PIR1)*8) + 5;
#define                                 RCIF_bit            BANKMASK(PIR1), 5
extern volatile __bit                   RCIP                @ (((unsigned) &IPR1)*8) + 5;
#define                                 RCIP_bit            BANKMASK(IPR1), 5
extern volatile __bit                   RCMT                @ (((unsigned) &BAUDCON1)*8) + 6;
#define                                 RCMT_bit            BANKMASK(BAUDCON1), 6
extern volatile __bit                   RCMT1               @ (((unsigned) &BAUDCON1)*8) + 6;
#define                                 RCMT1_bit           BANKMASK(BAUDCON1), 6
extern volatile __bit                   RCMT2               @ (((unsigned) &BAUDCON2)*8) + 6;
#define                                 RCMT2_bit           BANKMASK(BAUDCON2), 6
extern volatile __bit                   RCV                 @ (((unsigned) &PORTA)*8) + 5;
#define                                 RCV_bit             BANKMASK(PORTA), 5
extern volatile __bit                   RD163               @ (((unsigned) &T3CON)*8) + 7;
#define                                 RD163_bit           BANKMASK(T3CON), 7
extern volatile __bit                   RD165               @ (((unsigned) &T5CON)*8) + 1;
#define                                 RD165_bit           BANKMASK(T5CON), 1
extern volatile __bit                   READ_WRITE          @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 READ_WRITE_bit      BANKMASK(SSP1STAT), 2
extern volatile __bit                   READ_WRITE2         @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 READ_WRITE2_bit     BANKMASK(SSP2STAT), 2
extern volatile __bit                   REFO                @ (((unsigned) &PORTB)*8) + 2;
#define                                 REFO_bit            BANKMASK(PORTB), 2
extern volatile __bit                   REGSLP              @ (((unsigned) &WDTCON)*8) + 7;
#define                                 REGSLP_bit          BANKMASK(WDTCON), 7
extern volatile __bit                   RELEASE             @ (((unsigned) &DSCONL)*8) + 0;
#define                                 RELEASE_bit         BANKMASK(DSCONL), 0
extern volatile __bit                   RESUME              @ (((unsigned) &UCON)*8) + 2;
#define                                 RESUME_bit          BANKMASK(UCON), 2
extern volatile __bit                   RI                  @ (((unsigned) &RCON)*8) + 4;
#define                                 RI_bit              BANKMASK(RCON), 4
extern volatile __bit                   RJPU                @ (((unsigned) &PORTA)*8) + 7;
#define                                 RJPU_bit            BANKMASK(PORTA), 7
extern volatile __bit                   RODIV0              @ (((unsigned) &REFOCON)*8) + 0;
#define                                 RODIV0_bit          BANKMASK(REFOCON), 0
extern volatile __bit                   RODIV1              @ (((unsigned) &REFOCON)*8) + 1;
#define                                 RODIV1_bit          BANKMASK(REFOCON), 1
extern volatile __bit                   RODIV2              @ (((unsigned) &REFOCON)*8) + 2;
#define                                 RODIV2_bit          BANKMASK(REFOCON), 2
extern volatile __bit                   RODIV3              @ (((unsigned) &REFOCON)*8) + 3;
#define                                 RODIV3_bit          BANKMASK(REFOCON), 3
extern volatile __bit                   ROON                @ (((unsigned) &REFOCON)*8) + 7;
#define                                 ROON_bit            BANKMASK(REFOCON), 7
extern volatile __bit                   ROSEL               @ (((unsigned) &REFOCON)*8) + 4;
#define                                 ROSEL_bit           BANKMASK(REFOCON), 4
extern volatile __bit                   ROSSLP              @ (((unsigned) &REFOCON)*8) + 5;
#define                                 ROSSLP_bit          BANKMASK(REFOCON), 5
extern volatile __bit                   RP0                 @ (((unsigned) &PORTA)*8) + 0;
#define                                 RP0_bit             BANKMASK(PORTA), 0
extern volatile __bit                   RP1                 @ (((unsigned) &PORTA)*8) + 1;
#define                                 RP1_bit             BANKMASK(PORTA), 1
extern volatile __bit                   RP10                @ (((unsigned) &PORTB)*8) + 7;
#define                                 RP10_bit            BANKMASK(PORTB), 7
extern volatile __bit                   RP11                @ (((unsigned) &PORTC)*8) + 0;
#define                                 RP11_bit            BANKMASK(PORTC), 0
extern volatile __bit                   RP12                @ (((unsigned) &PORTC)*8) + 1;
#define                                 RP12_bit            BANKMASK(PORTC), 1
extern volatile __bit                   RP13                @ (((unsigned) &PORTC)*8) + 2;
#define                                 RP13_bit            BANKMASK(PORTC), 2
extern volatile __bit                   RP17                @ (((unsigned) &PORTC)*8) + 6;
#define                                 RP17_bit            BANKMASK(PORTC), 6
extern volatile __bit                   RP18                @ (((unsigned) &PORTC)*8) + 7;
#define                                 RP18_bit            BANKMASK(PORTC), 7
extern volatile __bit                   RP2                 @ (((unsigned) &PORTA)*8) + 5;
#define                                 RP2_bit             BANKMASK(PORTA), 5
extern volatile __bit                   RP3                 @ (((unsigned) &PORTB)*8) + 0;
#define                                 RP3_bit             BANKMASK(PORTB), 0
extern volatile __bit                   RP4                 @ (((unsigned) &PORTB)*8) + 1;
#define                                 RP4_bit             BANKMASK(PORTB), 1
extern volatile __bit                   RP5                 @ (((unsigned) &PORTB)*8) + 2;
#define                                 RP5_bit             BANKMASK(PORTB), 2
extern volatile __bit                   RP6                 @ (((unsigned) &PORTB)*8) + 3;
#define                                 RP6_bit             BANKMASK(PORTB), 3
extern volatile __bit                   RP7                 @ (((unsigned) &PORTB)*8) + 4;
#define                                 RP7_bit             BANKMASK(PORTB), 4
extern volatile __bit                   RP8                 @ (((unsigned) &PORTB)*8) + 5;
#define                                 RP8_bit             BANKMASK(PORTB), 5
extern volatile __bit                   RP9                 @ (((unsigned) &PORTB)*8) + 6;
#define                                 RP9_bit             BANKMASK(PORTB), 6
extern volatile __bit                   RSEN1               @ (((unsigned) &SSP1CON2)*8) + 1;
#define                                 RSEN1_bit           BANKMASK(SSP1CON2), 1
extern volatile __bit                   RSEN2               @ (((unsigned) &SSP2CON2)*8) + 1;
#define                                 RSEN2_bit           BANKMASK(SSP2CON2), 1
extern volatile __bit                   RTCC                @ (((unsigned) &PORTB)*8) + 1;
#define                                 RTCC_bit            BANKMASK(PORTB), 1
extern volatile __bit                   RTCCIE              @ (((unsigned) &PIE3)*8) + 0;
#define                                 RTCCIE_bit          BANKMASK(PIE3), 0
extern volatile __bit                   RTCCIF              @ (((unsigned) &PIR3)*8) + 0;
#define                                 RTCCIF_bit          BANKMASK(PIR3), 0
extern volatile __bit                   RTCCIP              @ (((unsigned) &IPR3)*8) + 0;
#define                                 RTCCIP_bit          BANKMASK(IPR3), 0
extern volatile __bit                   RTCCMD              @ (((unsigned) &PMDIS1)*8) + 5;
#define                                 RTCCMD_bit          BANKMASK(PMDIS1), 5
extern volatile __bit                   RTCEN               @ (((unsigned) &RTCCFG)*8) + 7;
#define                                 RTCEN_bit           BANKMASK(RTCCFG), 7
extern volatile __bit                   RTCOE               @ (((unsigned) &RTCCFG)*8) + 2;
#define                                 RTCOE_bit           BANKMASK(RTCCFG), 2
extern volatile __bit                   RTCPTR0             @ (((unsigned) &RTCCFG)*8) + 0;
#define                                 RTCPTR0_bit         BANKMASK(RTCCFG), 0
extern volatile __bit                   RTCPTR1             @ (((unsigned) &RTCCFG)*8) + 1;
#define                                 RTCPTR1_bit         BANKMASK(RTCCFG), 1
extern volatile __bit                   RTCSYNC             @ (((unsigned) &RTCCFG)*8) + 4;
#define                                 RTCSYNC_bit         BANKMASK(RTCCFG), 4
extern volatile __bit                   RTCWDIS             @ (((unsigned) &DSCONH)*8) + 0;
#define                                 RTCWDIS_bit         BANKMASK(DSCONH), 0
extern volatile __bit                   RTCWREN             @ (((unsigned) &RTCCFG)*8) + 5;
#define                                 RTCWREN_bit         BANKMASK(RTCCFG), 5
extern volatile __bit                   RTSECSEL0           @ (((unsigned) &PADCFG1)*8) + 1;
#define                                 RTSECSEL0_bit       BANKMASK(PADCFG1), 1
extern volatile __bit                   RTSECSEL1           @ (((unsigned) &PADCFG1)*8) + 2;
#define                                 RTSECSEL1_bit       BANKMASK(PADCFG1), 2
extern volatile __bit                   RW                  @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 RW_bit              BANKMASK(SSP1STAT), 2
extern volatile __bit                   RW1                 @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 RW1_bit             BANKMASK(SSP1STAT), 2
extern volatile __bit                   RW2                 @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 RW2_bit             BANKMASK(SSP2STAT), 2
extern volatile __bit                   RX1                 @ (((unsigned) &PORTC)*8) + 7;
#define                                 RX1_bit             BANKMASK(PORTC), 7
extern volatile __bit                   RX91                @ (((unsigned) &RCSTA1)*8) + 6;
#define                                 RX91_bit            BANKMASK(RCSTA1), 6
extern volatile __bit                   RX92                @ (((unsigned) &RCSTA2)*8) + 6;
#define                                 RX92_bit            BANKMASK(RCSTA2), 6
extern volatile __bit                   RX9D1               @ (((unsigned) &RCSTA1)*8) + 0;
#define                                 RX9D1_bit           BANKMASK(RCSTA1), 0
extern volatile __bit                   RX9D2               @ (((unsigned) &RCSTA2)*8) + 0;
#define                                 RX9D2_bit           BANKMASK(RCSTA2), 0
extern volatile __bit                   RXB0IE              @ (((unsigned) &PIE3)*8) + 0;
#define                                 RXB0IE_bit          BANKMASK(PIE3), 0
extern volatile __bit                   RXB1IE              @ (((unsigned) &PIE3)*8) + 1;
#define                                 RXB1IE_bit          BANKMASK(PIE3), 1
extern volatile __bit                   RXBNIE              @ (((unsigned) &PIE3)*8) + 1;
#define                                 RXBNIE_bit          BANKMASK(PIE3), 1
extern volatile __bit                   RXBNIF              @ (((unsigned) &PIR3)*8) + 1;
#define                                 RXBNIF_bit          BANKMASK(PIR3), 1
extern volatile __bit                   RXBNIP              @ (((unsigned) &IPR3)*8) + 1;
#define                                 RXBNIP_bit          BANKMASK(IPR3), 1
extern volatile __bit                   RXCKP               @ (((unsigned) &BAUDCON1)*8) + 5;
#define                                 RXCKP_bit           BANKMASK(BAUDCON1), 5
extern volatile __bit                   RXDTP1              @ (((unsigned) &BAUDCON1)*8) + 5;
#define                                 RXDTP1_bit          BANKMASK(BAUDCON1), 5
extern volatile __bit                   RXDTP2              @ (((unsigned) &BAUDCON2)*8) + 5;
#define                                 RXDTP2_bit          BANKMASK(BAUDCON2), 5
extern volatile __bit                   RXINC               @ (((unsigned) &DMACON1)*8) + 4;
#define                                 RXINC_bit           BANKMASK(DMACON1), 4
extern volatile __bit                   R_W                 @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 R_W_bit             BANKMASK(SSP1STAT), 2
extern volatile __bit                   R_W2                @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 R_W2_bit            BANKMASK(SSP2STAT), 2
extern volatile __bit                   R_nW2               @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 R_nW2_bit           BANKMASK(SSP2STAT), 2
extern volatile __bit                   S2                  @ (((unsigned) &SSP2STAT)*8) + 3;
#define                                 S2_bit              BANKMASK(SSP2STAT), 3
extern volatile __bit                   SCK1                @ (((unsigned) &PORTB)*8) + 4;
#define                                 SCK1_bit            BANKMASK(PORTB), 4
extern volatile __bit                   SCKP                @ (((unsigned) &BAUDCON1)*8) + 4;
#define                                 SCKP_bit            BANKMASK(BAUDCON1), 4
extern volatile __bit                   SCKP1               @ (((unsigned) &BAUDCON1)*8) + 4;
#define                                 SCKP1_bit           BANKMASK(BAUDCON1), 4
extern volatile __bit                   SCKP2               @ (((unsigned) &BAUDCON2)*8) + 4;
#define                                 SCKP2_bit           BANKMASK(BAUDCON2), 4
extern volatile __bit                   SCL1                @ (((unsigned) &PORTB)*8) + 4;
#define                                 SCL1_bit            BANKMASK(PORTB), 4
extern volatile __bit                   SCS0                @ (((unsigned) &OSCCON)*8) + 0;
#define                                 SCS0_bit            BANKMASK(OSCCON), 0
extern volatile __bit                   SCS1                @ (((unsigned) &OSCCON)*8) + 1;
#define                                 SCS1_bit            BANKMASK(OSCCON), 1
extern volatile __bit                   SDA1                @ (((unsigned) &PORTB)*8) + 5;
#define                                 SDA1_bit            BANKMASK(PORTB), 5
extern volatile __bit                   SDI1                @ (((unsigned) &PORTB)*8) + 5;
#define                                 SDI1_bit            BANKMASK(PORTB), 5
extern volatile __bit                   SDO1                @ (((unsigned) &PORTC)*8) + 7;
#define                                 SDO1_bit            BANKMASK(PORTC), 7
extern volatile __bit                   SE0                 @ (((unsigned) &UCON)*8) + 5;
#define                                 SE0_bit             BANKMASK(UCON), 5
extern volatile __bit                   SEN1                @ (((unsigned) &SSP1CON2)*8) + 0;
#define                                 SEN1_bit            BANKMASK(SSP1CON2), 0
extern volatile __bit                   SEN2                @ (((unsigned) &SSP2CON2)*8) + 0;
#define                                 SEN2_bit            BANKMASK(SSP2CON2), 0
extern volatile __bit                   SENDB1              @ (((unsigned) &TXSTA1)*8) + 3;
#define                                 SENDB1_bit          BANKMASK(TXSTA1), 3
extern volatile __bit                   SENDB2              @ (((unsigned) &TXSTA2)*8) + 3;
#define                                 SENDB2_bit          BANKMASK(TXSTA2), 3
extern volatile __bit                   SMP1                @ (((unsigned) &SSP1STAT)*8) + 7;
#define                                 SMP1_bit            BANKMASK(SSP1STAT), 7
extern volatile __bit                   SMP2                @ (((unsigned) &SSP2STAT)*8) + 7;
#define                                 SMP2_bit            BANKMASK(SSP2STAT), 7
extern volatile __bit                   SOFIE               @ (((unsigned) &UIE)*8) + 6;
#define                                 SOFIE_bit           BANKMASK(UIE), 6
extern volatile __bit                   SOFIF               @ (((unsigned) &UIR)*8) + 6;
#define                                 SOFIF_bit           BANKMASK(UIR), 6
extern volatile __bit                   SOSCDRV             @ (((unsigned) &OSCCON2)*8) + 4;
#define                                 SOSCDRV_bit         BANKMASK(OSCCON2), 4
extern volatile __bit                   SOSCEN              @ (((unsigned) &T1CON)*8) + 3;
#define                                 SOSCEN_bit          BANKMASK(T1CON), 3
extern volatile __bit                   SOSCEN3             @ (((unsigned) &T3CON)*8) + 3;
#define                                 SOSCEN3_bit         BANKMASK(T3CON), 3
extern volatile __bit                   SOSCEN5             @ (((unsigned) &T5CON)*8) + 3;
#define                                 SOSCEN5_bit         BANKMASK(T5CON), 3
extern volatile __bit                   SOSCGO              @ (((unsigned) &OSCCON2)*8) + 3;
#define                                 SOSCGO_bit          BANKMASK(OSCCON2), 3
extern volatile __bit                   SOSCRUN             @ (((unsigned) &OSCCON2)*8) + 6;
#define                                 SOSCRUN_bit         BANKMASK(OSCCON2), 6
extern volatile __bit                   SP0                 @ (((unsigned) &STKPTR)*8) + 0;
#define                                 SP0_bit             BANKMASK(STKPTR), 0
extern volatile __bit                   SP1                 @ (((unsigned) &STKPTR)*8) + 1;
#define                                 SP1_bit             BANKMASK(STKPTR), 1
extern volatile __bit                   SP2                 @ (((unsigned) &STKPTR)*8) + 2;
#define                                 SP2_bit             BANKMASK(STKPTR), 2
extern volatile __bit                   SP3                 @ (((unsigned) &STKPTR)*8) + 3;
#define                                 SP3_bit             BANKMASK(STKPTR), 3
extern volatile __bit                   SP4                 @ (((unsigned) &STKPTR)*8) + 4;
#define                                 SP4_bit             BANKMASK(STKPTR), 4
extern volatile __bit                   SPEN1               @ (((unsigned) &RCSTA1)*8) + 7;
#define                                 SPEN1_bit           BANKMASK(RCSTA1), 7
extern volatile __bit                   SPEN2               @ (((unsigned) &RCSTA2)*8) + 7;
#define                                 SPEN2_bit           BANKMASK(RCSTA2), 7
extern volatile __bit                   SPI1MD              @ (((unsigned) &PMDIS0)*8) + 1;
#define                                 SPI1MD_bit          BANKMASK(PMDIS0), 1
extern volatile __bit                   SPI1OD              @ (((unsigned) &ODCON3)*8) + 0;
#define                                 SPI1OD_bit          BANKMASK(ODCON3), 0
extern volatile __bit                   SPI2MD              @ (((unsigned) &PMDIS0)*8) + 2;
#define                                 SPI2MD_bit          BANKMASK(PMDIS0), 2
extern volatile __bit                   SPI2OD              @ (((unsigned) &ODCON3)*8) + 1;
#define                                 SPI2OD_bit          BANKMASK(ODCON3), 1
extern volatile __bit                   SRC0                @ (((unsigned) &ADCTRIG)*8) + 0;
#define                                 SRC0_bit            BANKMASK(ADCTRIG), 0
extern volatile __bit                   SRC1                @ (((unsigned) &ADCTRIG)*8) + 1;
#define                                 SRC1_bit            BANKMASK(ADCTRIG), 1
extern volatile __bit                   SREN1               @ (((unsigned) &RCSTA1)*8) + 5;
#define                                 SREN1_bit           BANKMASK(RCSTA1), 5
extern volatile __bit                   SREN2               @ (((unsigned) &RCSTA2)*8) + 5;
#define                                 SREN2_bit           BANKMASK(RCSTA2), 5
extern volatile __bit                   SRENA               @ (((unsigned) &RCSTA1)*8) + 5;
#define                                 SRENA_bit           BANKMASK(RCSTA1), 5
extern volatile __bit                   SSCON0              @ (((unsigned) &DMACON1)*8) + 6;
#define                                 SSCON0_bit          BANKMASK(DMACON1), 6
extern volatile __bit                   SSCON1              @ (((unsigned) &DMACON1)*8) + 7;
#define                                 SSCON1_bit          BANKMASK(DMACON1), 7
extern volatile __bit                   SSP1IE              @ (((unsigned) &PIE1)*8) + 3;
#define                                 SSP1IE_bit          BANKMASK(PIE1), 3
extern volatile __bit                   SSP1IF              @ (((unsigned) &PIR1)*8) + 3;
#define                                 SSP1IF_bit          BANKMASK(PIR1), 3
extern volatile __bit                   SSP1IP              @ (((unsigned) &IPR1)*8) + 3;
#define                                 SSP1IP_bit          BANKMASK(IPR1), 3
extern volatile __bit                   SSP2IE              @ (((unsigned) &PIE3)*8) + 7;
#define                                 SSP2IE_bit          BANKMASK(PIE3), 7
extern volatile __bit                   SSP2IF              @ (((unsigned) &PIR3)*8) + 7;
#define                                 SSP2IF_bit          BANKMASK(PIR3), 7
extern volatile __bit                   SSP2IP              @ (((unsigned) &IPR3)*8) + 7;
#define                                 SSP2IP_bit          BANKMASK(IPR3), 7
extern volatile __bit                   SSPEN1              @ (((unsigned) &SSP1CON1)*8) + 5;
#define                                 SSPEN1_bit          BANKMASK(SSP1CON1), 5
extern volatile __bit                   SSPEN2              @ (((unsigned) &SSP2CON1)*8) + 5;
#define                                 SSPEN2_bit          BANKMASK(SSP2CON1), 5
extern volatile __bit                   SSPIE               @ (((unsigned) &PIE1)*8) + 3;
#define                                 SSPIE_bit           BANKMASK(PIE1), 3
extern volatile __bit                   SSPIF               @ (((unsigned) &PIR1)*8) + 3;
#define                                 SSPIF_bit           BANKMASK(PIR1), 3
extern volatile __bit                   SSPIP               @ (((unsigned) &IPR1)*8) + 3;
#define                                 SSPIP_bit           BANKMASK(IPR1), 3
extern volatile __bit                   SSPM01              @ (((unsigned) &SSP1CON1)*8) + 0;
#define                                 SSPM01_bit          BANKMASK(SSP1CON1), 0
extern volatile __bit                   SSPM02              @ (((unsigned) &SSP2CON1)*8) + 0;
#define                                 SSPM02_bit          BANKMASK(SSP2CON1), 0
extern volatile __bit                   SSPM11              @ (((unsigned) &SSP1CON1)*8) + 1;
#define                                 SSPM11_bit          BANKMASK(SSP1CON1), 1
extern volatile __bit                   SSPM12              @ (((unsigned) &SSP2CON1)*8) + 1;
#define                                 SSPM12_bit          BANKMASK(SSP2CON1), 1
extern volatile __bit                   SSPM21              @ (((unsigned) &SSP1CON1)*8) + 2;
#define                                 SSPM21_bit          BANKMASK(SSP1CON1), 2
extern volatile __bit                   SSPM22              @ (((unsigned) &SSP2CON1)*8) + 2;
#define                                 SSPM22_bit          BANKMASK(SSP2CON1), 2
extern volatile __bit                   SSPM31              @ (((unsigned) &SSP1CON1)*8) + 3;
#define                                 SSPM31_bit          BANKMASK(SSP1CON1), 3
extern volatile __bit                   SSPM32              @ (((unsigned) &SSP2CON1)*8) + 3;
#define                                 SSPM32_bit          BANKMASK(SSP2CON1), 3
extern volatile __bit                   SSPOV1              @ (((unsigned) &SSP1CON1)*8) + 6;
#define                                 SSPOV1_bit          BANKMASK(SSP1CON1), 6
extern volatile __bit                   SSPOV2              @ (((unsigned) &SSP2CON1)*8) + 6;
#define                                 SSPOV2_bit          BANKMASK(SSP2CON1), 6
extern volatile __bit                   STALLIE             @ (((unsigned) &UIE)*8) + 5;
#define                                 STALLIE_bit         BANKMASK(UIE), 5
extern volatile __bit                   STALLIF             @ (((unsigned) &UIR)*8) + 5;
#define                                 STALLIF_bit         BANKMASK(UIR), 5
extern volatile __bit                   START               @ (((unsigned) &SSP1STAT)*8) + 3;
#define                                 START_bit           BANKMASK(SSP1STAT), 3
extern volatile __bit                   START1              @ (((unsigned) &SSP1STAT)*8) + 3;
#define                                 START1_bit          BANKMASK(SSP1STAT), 3
extern volatile __bit                   START2              @ (((unsigned) &SSP2STAT)*8) + 3;
#define                                 START2_bit          BANKMASK(SSP2STAT), 3
extern volatile __bit                   STKFUL              @ (((unsigned) &STKPTR)*8) + 7;
#define                                 STKFUL_bit          BANKMASK(STKPTR), 7
extern volatile __bit                   STKOVF              @ (((unsigned) &STKPTR)*8) + 7;
#define                                 STKOVF_bit          BANKMASK(STKPTR), 7
extern volatile __bit                   STKUNF              @ (((unsigned) &STKPTR)*8) + 6;
#define                                 STKUNF_bit          BANKMASK(STKPTR), 6
extern volatile __bit                   STOP                @ (((unsigned) &SSP1STAT)*8) + 4;
#define                                 STOP_bit            BANKMASK(SSP1STAT), 4
extern volatile __bit                   STOP1               @ (((unsigned) &SSP1STAT)*8) + 4;
#define                                 STOP1_bit           BANKMASK(SSP1STAT), 4
extern volatile __bit                   STOP2               @ (((unsigned) &SSP2STAT)*8) + 4;
#define                                 STOP2_bit           BANKMASK(SSP2STAT), 4
extern volatile __bit                   STRA2               @ (((unsigned) &PSTR2CON)*8) + 0;
#define                                 STRA2_bit           BANKMASK(PSTR2CON), 0
extern volatile __bit                   STRA3               @ (((unsigned) &PSTR3CON)*8) + 0;
#define                                 STRA3_bit           BANKMASK(PSTR3CON), 0
extern volatile __bit                   STRB2               @ (((unsigned) &PSTR2CON)*8) + 1;
#define                                 STRB2_bit           BANKMASK(PSTR2CON), 1
extern volatile __bit                   STRB3               @ (((unsigned) &PSTR3CON)*8) + 1;
#define                                 STRB3_bit           BANKMASK(PSTR3CON), 1
extern volatile __bit                   STRC2               @ (((unsigned) &PSTR2CON)*8) + 2;
#define                                 STRC2_bit           BANKMASK(PSTR2CON), 2
extern volatile __bit                   STRC3               @ (((unsigned) &PSTR3CON)*8) + 2;
#define                                 STRC3_bit           BANKMASK(PSTR3CON), 2
extern volatile __bit                   STRD2               @ (((unsigned) &PSTR2CON)*8) + 3;
#define                                 STRD2_bit           BANKMASK(PSTR2CON), 3
extern volatile __bit                   STRD3               @ (((unsigned) &PSTR3CON)*8) + 3;
#define                                 STRD3_bit           BANKMASK(PSTR3CON), 3
extern volatile __bit                   STRSYNC2            @ (((unsigned) &PSTR2CON)*8) + 4;
#define                                 STRSYNC2_bit        BANKMASK(PSTR2CON), 4
extern volatile __bit                   STRSYNC3            @ (((unsigned) &PSTR3CON)*8) + 4;
#define                                 STRSYNC3_bit        BANKMASK(PSTR3CON), 4
extern volatile __bit                   SUSPND              @ (((unsigned) &UCON)*8) + 1;
#define                                 SUSPND_bit          BANKMASK(UCON), 1
extern volatile __bit                   SWDTE               @ (((unsigned) &WDTCON)*8) + 0;
#define                                 SWDTE_bit           BANKMASK(WDTCON), 0
extern volatile __bit                   SWDTEN              @ (((unsigned) &WDTCON)*8) + 0;
#define                                 SWDTEN_bit          BANKMASK(WDTCON), 0
extern volatile __bit                   SYNC1               @ (((unsigned) &TXSTA1)*8) + 4;
#define                                 SYNC1_bit           BANKMASK(TXSTA1), 4
extern volatile __bit                   SYNC2               @ (((unsigned) &TXSTA2)*8) + 4;
#define                                 SYNC2_bit           BANKMASK(TXSTA2), 4
extern volatile __bit                   T08BIT              @ (((unsigned) &T0CON)*8) + 6;
#define                                 T08BIT_bit          BANKMASK(T0CON), 6
extern volatile __bit                   T0CS                @ (((unsigned) &T0CON)*8) + 5;
#define                                 T0CS_bit            BANKMASK(T0CON), 5
extern volatile __bit                   T0IE                @ (((unsigned) &INTCON)*8) + 5;
#define                                 T0IE_bit            BANKMASK(INTCON), 5
extern volatile __bit                   T0IF                @ (((unsigned) &INTCON)*8) + 2;
#define                                 T0IF_bit            BANKMASK(INTCON), 2
extern volatile __bit                   T0IP                @ (((unsigned) &INTCON2)*8) + 2;
#define                                 T0IP_bit            BANKMASK(INTCON2), 2
extern volatile __bit                   T0PS0               @ (((unsigned) &T0CON)*8) + 0;
#define                                 T0PS0_bit           BANKMASK(T0CON), 0
extern volatile __bit                   T0PS1               @ (((unsigned) &T0CON)*8) + 1;
#define                                 T0PS1_bit           BANKMASK(T0CON), 1
extern volatile __bit                   T0PS2               @ (((unsigned) &T0CON)*8) + 2;
#define                                 T0PS2_bit           BANKMASK(T0CON), 2
extern volatile __bit                   T0SE                @ (((unsigned) &T0CON)*8) + 4;
#define                                 T0SE_bit            BANKMASK(T0CON), 4
extern volatile __bit                   T1CKI               @ (((unsigned) &PORTC)*8) + 0;
#define                                 T1CKI_bit           BANKMASK(PORTC), 0
extern volatile __bit                   T1CKPS0             @ (((unsigned) &T1CON)*8) + 4;
#define                                 T1CKPS0_bit         BANKMASK(T1CON), 4
extern volatile __bit                   T1CKPS1             @ (((unsigned) &T1CON)*8) + 5;
#define                                 T1CKPS1_bit         BANKMASK(T1CON), 5
extern volatile __bit                   T1DONE              @ (((unsigned) &T1GCON)*8) + 3;
#define                                 T1DONE_bit          BANKMASK(T1GCON), 3
extern volatile __bit                   T1GGO               @ (((unsigned) &T1GCON)*8) + 3;
#define                                 T1GGO_bit           BANKMASK(T1GCON), 3
extern volatile __bit                   T1GGO_NOT_T1DONE    @ (((unsigned) &T1GCON)*8) + 3;
#define                                 T1GGO_NOT_T1DONE_bit BANKMASK(T1GCON), 3
extern volatile __bit                   T1GGO_nT1DONE       @ (((unsigned) &T1GCON)*8) + 3;
#define                                 T1GGO_nT1DONE_bit   BANKMASK(T1GCON), 3
extern volatile __bit                   T1GPOL              @ (((unsigned) &T1GCON)*8) + 6;
#define                                 T1GPOL_bit          BANKMASK(T1GCON), 6
extern volatile __bit                   T1GSPM              @ (((unsigned) &T1GCON)*8) + 4;
#define                                 T1GSPM_bit          BANKMASK(T1GCON), 4
extern volatile __bit                   T1GSS0              @ (((unsigned) &T1GCON)*8) + 0;
#define                                 T1GSS0_bit          BANKMASK(T1GCON), 0
extern volatile __bit                   T1GSS1              @ (((unsigned) &T1GCON)*8) + 1;
#define                                 T1GSS1_bit          BANKMASK(T1GCON), 1
extern volatile __bit                   T1GTM               @ (((unsigned) &T1GCON)*8) + 5;
#define                                 T1GTM_bit           BANKMASK(T1GCON), 5
extern volatile __bit                   T1GVAL              @ (((unsigned) &T1GCON)*8) + 2;
#define                                 T1GVAL_bit          BANKMASK(T1GCON), 2
extern volatile __bit                   T1OSCEN             @ (((unsigned) &T1CON)*8) + 3;
#define                                 T1OSCEN_bit         BANKMASK(T1CON), 3
extern volatile __bit                   T1OSI               @ (((unsigned) &PORTC)*8) + 1;
#define                                 T1OSI_bit           BANKMASK(PORTC), 1
extern volatile __bit                   T1OSO               @ (((unsigned) &PORTC)*8) + 0;
#define                                 T1OSO_bit           BANKMASK(PORTC), 0
extern volatile __bit                   T1RD16              @ (((unsigned) &T1CON)*8) + 7;
#define                                 T1RD16_bit          BANKMASK(T1CON), 7
extern volatile __bit                   T2CKPS0             @ (((unsigned) &T2CON)*8) + 0;
#define                                 T2CKPS0_bit         BANKMASK(T2CON), 0
extern volatile __bit                   T2CKPS1             @ (((unsigned) &T2CON)*8) + 1;
#define                                 T2CKPS1_bit         BANKMASK(T2CON), 1
extern volatile __bit                   T2OUTPS0            @ (((unsigned) &T2CON)*8) + 3;
#define                                 T2OUTPS0_bit        BANKMASK(T2CON), 3
extern volatile __bit                   T2OUTPS1            @ (((unsigned) &T2CON)*8) + 4;
#define                                 T2OUTPS1_bit        BANKMASK(T2CON), 4
extern volatile __bit                   T2OUTPS2            @ (((unsigned) &T2CON)*8) + 5;
#define                                 T2OUTPS2_bit        BANKMASK(T2CON), 5
extern volatile __bit                   T2OUTPS3            @ (((unsigned) &T2CON)*8) + 6;
#define                                 T2OUTPS3_bit        BANKMASK(T2CON), 6
extern volatile __bit                   T3CKPS0             @ (((unsigned) &T3CON)*8) + 4;
#define                                 T3CKPS0_bit         BANKMASK(T3CON), 4
extern volatile __bit                   T3CKPS1             @ (((unsigned) &T3CON)*8) + 5;
#define                                 T3CKPS1_bit         BANKMASK(T3CON), 5
extern volatile __bit                   T3GGO               @ (((unsigned) &T3GCON)*8) + 3;
#define                                 T3GGO_bit           BANKMASK(T3GCON), 3
extern volatile __bit                   T3GGO_T3DONE        @ (((unsigned) &T3GCON)*8) + 3;
#define                                 T3GGO_T3DONE_bit    BANKMASK(T3GCON), 3
extern volatile __bit                   T3GPOL              @ (((unsigned) &T3GCON)*8) + 6;
#define                                 T3GPOL_bit          BANKMASK(T3GCON), 6
extern volatile __bit                   T3GSPM              @ (((unsigned) &T3GCON)*8) + 4;
#define                                 T3GSPM_bit          BANKMASK(T3GCON), 4
extern volatile __bit                   T3GSS0              @ (((unsigned) &T3GCON)*8) + 0;
#define                                 T3GSS0_bit          BANKMASK(T3GCON), 0
extern volatile __bit                   T3GSS1              @ (((unsigned) &T3GCON)*8) + 1;
#define                                 T3GSS1_bit          BANKMASK(T3GCON), 1
extern volatile __bit                   T3GTM               @ (((unsigned) &T3GCON)*8) + 5;
#define                                 T3GTM_bit           BANKMASK(T3GCON), 5
extern volatile __bit                   T3GVAL              @ (((unsigned) &T3GCON)*8) + 2;
#define                                 T3GVAL_bit          BANKMASK(T3GCON), 2
extern volatile __bit                   T3OSCEN             @ (((unsigned) &T3CON)*8) + 3;
#define                                 T3OSCEN_bit         BANKMASK(T3CON), 3
extern volatile __bit                   T3RD16              @ (((unsigned) &T3CON)*8) + 7;
#define                                 T3RD16_bit          BANKMASK(T3CON), 7
extern volatile __bit                   T4CKPS0             @ (((unsigned) &T4CON)*8) + 0;
#define                                 T4CKPS0_bit         BANKMASK(T4CON), 0
extern volatile __bit                   T4CKPS1             @ (((unsigned) &T4CON)*8) + 1;
#define                                 T4CKPS1_bit         BANKMASK(T4CON), 1
extern volatile __bit                   T4OUTPS0            @ (((unsigned) &T4CON)*8) + 3;
#define                                 T4OUTPS0_bit        BANKMASK(T4CON), 3
extern volatile __bit                   T4OUTPS1            @ (((unsigned) &T4CON)*8) + 4;
#define                                 T4OUTPS1_bit        BANKMASK(T4CON), 4
extern volatile __bit                   T4OUTPS2            @ (((unsigned) &T4CON)*8) + 5;
#define                                 T4OUTPS2_bit        BANKMASK(T4CON), 5
extern volatile __bit                   T4OUTPS3            @ (((unsigned) &T4CON)*8) + 6;
#define                                 T4OUTPS3_bit        BANKMASK(T4CON), 6
extern volatile __bit                   T5CKPS0             @ (((unsigned) &T5CON)*8) + 4;
#define                                 T5CKPS0_bit         BANKMASK(T5CON), 4
extern volatile __bit                   T5CKPS1             @ (((unsigned) &T5CON)*8) + 5;
#define                                 T5CKPS1_bit         BANKMASK(T5CON), 5
extern volatile __bit                   T5DONE              @ (((unsigned) &T5GCON)*8) + 3;
#define                                 T5DONE_bit          BANKMASK(T5GCON), 3
extern volatile __bit                   T5GGO               @ (((unsigned) &T5GCON)*8) + 3;
#define                                 T5GGO_bit           BANKMASK(T5GCON), 3
extern volatile __bit                   T5GGO_NOT_T5DONE    @ (((unsigned) &T5GCON)*8) + 3;
#define                                 T5GGO_NOT_T5DONE_bit BANKMASK(T5GCON), 3
extern volatile __bit                   T5GGO_nT5DONE       @ (((unsigned) &T5GCON)*8) + 3;
#define                                 T5GGO_nT5DONE_bit   BANKMASK(T5GCON), 3
extern volatile __bit                   T5GPOL              @ (((unsigned) &T5GCON)*8) + 6;
#define                                 T5GPOL_bit          BANKMASK(T5GCON), 6
extern volatile __bit                   T5GSPM              @ (((unsigned) &T5GCON)*8) + 4;
#define                                 T5GSPM_bit          BANKMASK(T5GCON), 4
extern volatile __bit                   T5GSS0              @ (((unsigned) &T5GCON)*8) + 0;
#define                                 T5GSS0_bit          BANKMASK(T5GCON), 0
extern volatile __bit                   T5GSS1              @ (((unsigned) &T5GCON)*8) + 1;
#define                                 T5GSS1_bit          BANKMASK(T5GCON), 1
extern volatile __bit                   T5GTM               @ (((unsigned) &T5GCON)*8) + 5;
#define                                 T5GTM_bit           BANKMASK(T5GCON), 5
extern volatile __bit                   T5GVAL              @ (((unsigned) &T5GCON)*8) + 2;
#define                                 T5GVAL_bit          BANKMASK(T5GCON), 2
extern volatile __bit                   T5OSCEN             @ (((unsigned) &T5CON)*8) + 3;
#define                                 T5OSCEN_bit         BANKMASK(T5CON), 3
extern volatile __bit                   T6CKPS0             @ (((unsigned) &T6CON)*8) + 0;
#define                                 T6CKPS0_bit         BANKMASK(T6CON), 0
extern volatile __bit                   T6CKPS1             @ (((unsigned) &T6CON)*8) + 1;
#define                                 T6CKPS1_bit         BANKMASK(T6CON), 1
extern volatile __bit                   T6OUTPS0            @ (((unsigned) &T6CON)*8) + 3;
#define                                 T6OUTPS0_bit        BANKMASK(T6CON), 3
extern volatile __bit                   T6OUTPS1            @ (((unsigned) &T6CON)*8) + 4;
#define                                 T6OUTPS1_bit        BANKMASK(T6CON), 4
extern volatile __bit                   T6OUTPS2            @ (((unsigned) &T6CON)*8) + 5;
#define                                 T6OUTPS2_bit        BANKMASK(T6CON), 5
extern volatile __bit                   T6OUTPS3            @ (((unsigned) &T6CON)*8) + 6;
#define                                 T6OUTPS3_bit        BANKMASK(T6CON), 6
extern volatile __bit                   T8CKPS0             @ (((unsigned) &T8CON)*8) + 0;
#define                                 T8CKPS0_bit         BANKMASK(T8CON), 0
extern volatile __bit                   T8CKPS1             @ (((unsigned) &T8CON)*8) + 1;
#define                                 T8CKPS1_bit         BANKMASK(T8CON), 1
extern volatile __bit                   T8OUTPS0            @ (((unsigned) &T8CON)*8) + 3;
#define                                 T8OUTPS0_bit        BANKMASK(T8CON), 3
extern volatile __bit                   T8OUTPS1            @ (((unsigned) &T8CON)*8) + 4;
#define                                 T8OUTPS1_bit        BANKMASK(T8CON), 4
extern volatile __bit                   T8OUTPS2            @ (((unsigned) &T8CON)*8) + 5;
#define                                 T8OUTPS2_bit        BANKMASK(T8CON), 5
extern volatile __bit                   T8OUTPS3            @ (((unsigned) &T8CON)*8) + 6;
#define                                 T8OUTPS3_bit        BANKMASK(T8CON), 6
extern volatile __bit                   TGEN                @ (((unsigned) &CTMUCONH)*8) + 4;
#define                                 TGEN_bit            BANKMASK(CTMUCONH), 4
extern volatile __bit                   TMR0IE              @ (((unsigned) &INTCON)*8) + 5;
#define                                 TMR0IE_bit          BANKMASK(INTCON), 5
extern volatile __bit                   TMR0IF              @ (((unsigned) &INTCON)*8) + 2;
#define                                 TMR0IF_bit          BANKMASK(INTCON), 2
extern volatile __bit                   TMR0IP              @ (((unsigned) &INTCON2)*8) + 2;
#define                                 TMR0IP_bit          BANKMASK(INTCON2), 2
extern volatile __bit                   TMR0ON              @ (((unsigned) &T0CON)*8) + 7;
#define                                 TMR0ON_bit          BANKMASK(T0CON), 7
extern volatile __bit                   TMR1CS0             @ (((unsigned) &T1CON)*8) + 6;
#define                                 TMR1CS0_bit         BANKMASK(T1CON), 6
extern volatile __bit                   TMR1CS1             @ (((unsigned) &T1CON)*8) + 7;
#define                                 TMR1CS1_bit         BANKMASK(T1CON), 7
extern volatile __bit                   TMR1GE              @ (((unsigned) &T1GCON)*8) + 7;
#define                                 TMR1GE_bit          BANKMASK(T1GCON), 7
extern volatile __bit                   TMR1GIE             @ (((unsigned) &PIE5)*8) + 0;
#define                                 TMR1GIE_bit         BANKMASK(PIE5), 0
extern volatile __bit                   TMR1GIF             @ (((unsigned) &PIR5)*8) + 0;
#define                                 TMR1GIF_bit         BANKMASK(PIR5), 0
extern volatile __bit                   TMR1GIP             @ (((unsigned) &IPR5)*8) + 0;
#define                                 TMR1GIP_bit         BANKMASK(IPR5), 0
extern volatile __bit                   TMR1IE              @ (((unsigned) &PIE1)*8) + 0;
#define                                 TMR1IE_bit          BANKMASK(PIE1), 0
extern volatile __bit                   TMR1IF              @ (((unsigned) &PIR1)*8) + 0;
#define                                 TMR1IF_bit          BANKMASK(PIR1), 0
extern volatile __bit                   TMR1IP              @ (((unsigned) &IPR1)*8) + 0;
#define                                 TMR1IP_bit          BANKMASK(IPR1), 0
extern volatile __bit                   TMR1MD              @ (((unsigned) &PMDIS1)*8) + 1;
#define                                 TMR1MD_bit          BANKMASK(PMDIS1), 1
extern volatile __bit                   TMR1ON              @ (((unsigned) &T1CON)*8) + 0;
#define                                 TMR1ON_bit          BANKMASK(T1CON), 0
extern volatile __bit                   TMR2IE              @ (((unsigned) &PIE1)*8) + 1;
#define                                 TMR2IE_bit          BANKMASK(PIE1), 1
extern volatile __bit                   TMR2IF              @ (((unsigned) &PIR1)*8) + 1;
#define                                 TMR2IF_bit          BANKMASK(PIR1), 1
extern volatile __bit                   TMR2IP              @ (((unsigned) &IPR1)*8) + 1;
#define                                 TMR2IP_bit          BANKMASK(IPR1), 1
extern volatile __bit                   TMR2MD              @ (((unsigned) &PMDIS1)*8) + 2;
#define                                 TMR2MD_bit          BANKMASK(PMDIS1), 2
extern volatile __bit                   TMR2ON              @ (((unsigned) &T2CON)*8) + 2;
#define                                 TMR2ON_bit          BANKMASK(T2CON), 2
extern volatile __bit                   TMR3CS0             @ (((unsigned) &T3CON)*8) + 6;
#define                                 TMR3CS0_bit         BANKMASK(T3CON), 6
extern volatile __bit                   TMR3CS1             @ (((unsigned) &T3CON)*8) + 7;
#define                                 TMR3CS1_bit         BANKMASK(T3CON), 7
extern volatile __bit                   TMR3GE              @ (((unsigned) &T3GCON)*8) + 7;
#define                                 TMR3GE_bit          BANKMASK(T3GCON), 7
extern volatile __bit                   TMR3GIE             @ (((unsigned) &PIE3)*8) + 1;
#define                                 TMR3GIE_bit         BANKMASK(PIE3), 1
extern volatile __bit                   TMR3GIF             @ (((unsigned) &PIR3)*8) + 1;
#define                                 TMR3GIF_bit         BANKMASK(PIR3), 1
extern volatile __bit                   TMR3GIP             @ (((unsigned) &IPR3)*8) + 1;
#define                                 TMR3GIP_bit         BANKMASK(IPR3), 1
extern volatile __bit                   TMR3IE              @ (((unsigned) &PIE2)*8) + 1;
#define                                 TMR3IE_bit          BANKMASK(PIE2), 1
extern volatile __bit                   TMR3IF              @ (((unsigned) &PIR2)*8) + 1;
#define                                 TMR3IF_bit          BANKMASK(PIR2), 1
extern volatile __bit                   TMR3IP              @ (((unsigned) &IPR2)*8) + 1;
#define                                 TMR3IP_bit          BANKMASK(IPR2), 1
extern volatile __bit                   TMR3MD              @ (((unsigned) &PMDIS1)*8) + 3;
#define                                 TMR3MD_bit          BANKMASK(PMDIS1), 3
extern volatile __bit                   TMR3ON              @ (((unsigned) &T3CON)*8) + 0;
#define                                 TMR3ON_bit          BANKMASK(T3CON), 0
extern volatile __bit                   TMR4IE              @ (((unsigned) &PIE3)*8) + 3;
#define                                 TMR4IE_bit          BANKMASK(PIE3), 3
extern volatile __bit                   TMR4IF              @ (((unsigned) &PIR3)*8) + 3;
#define                                 TMR4IF_bit          BANKMASK(PIR3), 3
extern volatile __bit                   TMR4IP              @ (((unsigned) &IPR3)*8) + 3;
#define                                 TMR4IP_bit          BANKMASK(IPR3), 3
extern volatile __bit                   TMR4MD              @ (((unsigned) &PMDIS1)*8) + 4;
#define                                 TMR4MD_bit          BANKMASK(PMDIS1), 4
extern volatile __bit                   TMR4ON              @ (((unsigned) &T4CON)*8) + 2;
#define                                 TMR4ON_bit          BANKMASK(T4CON), 2
extern volatile __bit                   TMR5CS0             @ (((unsigned) &T5CON)*8) + 6;
#define                                 TMR5CS0_bit         BANKMASK(T5CON), 6
extern volatile __bit                   TMR5CS1             @ (((unsigned) &T5CON)*8) + 7;
#define                                 TMR5CS1_bit         BANKMASK(T5CON), 7
extern volatile __bit                   TMR5GE              @ (((unsigned) &T5GCON)*8) + 7;
#define                                 TMR5GE_bit          BANKMASK(T5GCON), 7
extern volatile __bit                   TMR5GIE             @ (((unsigned) &PIE5)*8) + 1;
#define                                 TMR5GIE_bit         BANKMASK(PIE5), 1
extern volatile __bit                   TMR5GIF             @ (((unsigned) &PIR5)*8) + 1;
#define                                 TMR5GIF_bit         BANKMASK(PIR5), 1
extern volatile __bit                   TMR5GIP             @ (((unsigned) &IPR5)*8) + 1;
#define                                 TMR5GIP_bit         BANKMASK(IPR5), 1
extern volatile __bit                   TMR5IE              @ (((unsigned) &PIE5)*8) + 2;
#define                                 TMR5IE_bit          BANKMASK(PIE5), 2
extern volatile __bit                   TMR5IF              @ (((unsigned) &PIR5)*8) + 2;
#define                                 TMR5IF_bit          BANKMASK(PIR5), 2
extern volatile __bit                   TMR5IP              @ (((unsigned) &IPR5)*8) + 2;
#define                                 TMR5IP_bit          BANKMASK(IPR5), 2
extern volatile __bit                   TMR5MD              @ (((unsigned) &PMDIS2)*8) + 3;
#define                                 TMR5MD_bit          BANKMASK(PMDIS2), 3
extern volatile __bit                   TMR5ON              @ (((unsigned) &T5CON)*8) + 0;
#define                                 TMR5ON_bit          BANKMASK(T5CON), 0
extern volatile __bit                   TMR6IE              @ (((unsigned) &PIE5)*8) + 3;
#define                                 TMR6IE_bit          BANKMASK(PIE5), 3
extern volatile __bit                   TMR6IF              @ (((unsigned) &PIR5)*8) + 3;
#define                                 TMR6IF_bit          BANKMASK(PIR5), 3
extern volatile __bit                   TMR6IP              @ (((unsigned) &IPR5)*8) + 3;
#define                                 TMR6IP_bit          BANKMASK(IPR5), 3
extern volatile __bit                   TMR6MD              @ (((unsigned) &PMDIS2)*8) + 4;
#define                                 TMR6MD_bit          BANKMASK(PMDIS2), 4
extern volatile __bit                   TMR6ON              @ (((unsigned) &T6CON)*8) + 2;
#define                                 TMR6ON_bit          BANKMASK(T6CON), 2
extern volatile __bit                   TMR8IE              @ (((unsigned) &PIE5)*8) + 4;
#define                                 TMR8IE_bit          BANKMASK(PIE5), 4
extern volatile __bit                   TMR8IF              @ (((unsigned) &PIR5)*8) + 4;
#define                                 TMR8IF_bit          BANKMASK(PIR5), 4
extern volatile __bit                   TMR8IP              @ (((unsigned) &IPR5)*8) + 4;
#define                                 TMR8IP_bit          BANKMASK(IPR5), 4
extern volatile __bit                   TMR8MD              @ (((unsigned) &PMDIS2)*8) + 6;
#define                                 TMR8MD_bit          BANKMASK(PMDIS2), 6
extern volatile __bit                   TMR8ON              @ (((unsigned) &T8CON)*8) + 2;
#define                                 TMR8ON_bit          BANKMASK(T8CON), 2
extern volatile __bit                   TO                  @ (((unsigned) &RCON)*8) + 3;
#define                                 TO_bit              BANKMASK(RCON), 3
extern volatile __bit                   TRIGSEL0            @ (((unsigned) &ADCTRIG)*8) + 0;
#define                                 TRIGSEL0_bit        BANKMASK(ADCTRIG), 0
extern volatile __bit                   TRIGSEL1            @ (((unsigned) &ADCTRIG)*8) + 1;
#define                                 TRIGSEL1_bit        BANKMASK(ADCTRIG), 1
extern volatile __bit                   TRISA0              @ (((unsigned) &TRISA)*8) + 0;
#define                                 TRISA0_bit          BANKMASK(TRISA), 0
extern volatile __bit                   TRISA1              @ (((unsigned) &TRISA)*8) + 1;
#define                                 TRISA1_bit          BANKMASK(TRISA), 1
extern volatile __bit                   TRISA2              @ (((unsigned) &TRISA)*8) + 2;
#define                                 TRISA2_bit          BANKMASK(TRISA), 2
extern volatile __bit                   TRISA3              @ (((unsigned) &TRISA)*8) + 3;
#define                                 TRISA3_bit          BANKMASK(TRISA), 3
extern volatile __bit                   TRISA5              @ (((unsigned) &TRISA)*8) + 5;
#define                                 TRISA5_bit          BANKMASK(TRISA), 5
extern volatile __bit                   TRISA6              @ (((unsigned) &TRISA)*8) + 6;
#define                                 TRISA6_bit          BANKMASK(TRISA), 6
extern volatile __bit                   TRISA7              @ (((unsigned) &TRISA)*8) + 7;
#define                                 TRISA7_bit          BANKMASK(TRISA), 7
extern volatile __bit                   TRISB0              @ (((unsigned) &TRISB)*8) + 0;
#define                                 TRISB0_bit          BANKMASK(TRISB), 0
extern volatile __bit                   TRISB1              @ (((unsigned) &TRISB)*8) + 1;
#define                                 TRISB1_bit          BANKMASK(TRISB), 1
extern volatile __bit                   TRISB2              @ (((unsigned) &TRISB)*8) + 2;
#define                                 TRISB2_bit          BANKMASK(TRISB), 2
extern volatile __bit                   TRISB3              @ (((unsigned) &TRISB)*8) + 3;
#define                                 TRISB3_bit          BANKMASK(TRISB), 3
extern volatile __bit                   TRISB4              @ (((unsigned) &TRISB)*8) + 4;
#define                                 TRISB4_bit          BANKMASK(TRISB), 4
extern volatile __bit                   TRISB5              @ (((unsigned) &TRISB)*8) + 5;
#define                                 TRISB5_bit          BANKMASK(TRISB), 5
extern volatile __bit                   TRISB6              @ (((unsigned) &TRISB)*8) + 6;
#define                                 TRISB6_bit          BANKMASK(TRISB), 6
extern volatile __bit                   TRISB7              @ (((unsigned) &TRISB)*8) + 7;
#define                                 TRISB7_bit          BANKMASK(TRISB), 7
extern volatile __bit                   TRISC0              @ (((unsigned) &TRISC)*8) + 0;
#define                                 TRISC0_bit          BANKMASK(TRISC), 0
extern volatile __bit                   TRISC1              @ (((unsigned) &TRISC)*8) + 1;
#define                                 TRISC1_bit          BANKMASK(TRISC), 1
extern volatile __bit                   TRISC2              @ (((unsigned) &TRISC)*8) + 2;
#define                                 TRISC2_bit          BANKMASK(TRISC), 2
extern volatile __bit                   TRISC6              @ (((unsigned) &TRISC)*8) + 6;
#define                                 TRISC6_bit          BANKMASK(TRISC), 6
extern volatile __bit                   TRISC7              @ (((unsigned) &TRISC)*8) + 7;
#define                                 TRISC7_bit          BANKMASK(TRISC), 7
extern volatile __bit                   TRMT1               @ (((unsigned) &TXSTA1)*8) + 1;
#define                                 TRMT1_bit           BANKMASK(TXSTA1), 1
extern volatile __bit                   TRMT2               @ (((unsigned) &TXSTA2)*8) + 1;
#define                                 TRMT2_bit           BANKMASK(TXSTA2), 1
extern volatile __bit                   TRNIE               @ (((unsigned) &UIE)*8) + 3;
#define                                 TRNIE_bit           BANKMASK(UIE), 3
extern volatile __bit                   TRNIF               @ (((unsigned) &UIR)*8) + 3;
#define                                 TRNIF_bit           BANKMASK(UIR), 3
extern volatile __bit                   TUN0                @ (((unsigned) &OSCTUNE)*8) + 0;
#define                                 TUN0_bit            BANKMASK(OSCTUNE), 0
extern volatile __bit                   TUN1                @ (((unsigned) &OSCTUNE)*8) + 1;
#define                                 TUN1_bit            BANKMASK(OSCTUNE), 1
extern volatile __bit                   TUN2                @ (((unsigned) &OSCTUNE)*8) + 2;
#define                                 TUN2_bit            BANKMASK(OSCTUNE), 2
extern volatile __bit                   TUN3                @ (((unsigned) &OSCTUNE)*8) + 3;
#define                                 TUN3_bit            BANKMASK(OSCTUNE), 3
extern volatile __bit                   TUN4                @ (((unsigned) &OSCTUNE)*8) + 4;
#define                                 TUN4_bit            BANKMASK(OSCTUNE), 4
extern volatile __bit                   TUN5                @ (((unsigned) &OSCTUNE)*8) + 5;
#define                                 TUN5_bit            BANKMASK(OSCTUNE), 5
extern volatile __bit                   TX1                 @ (((unsigned) &PORTC)*8) + 6;
#define                                 TX1_bit             BANKMASK(PORTC), 6
extern volatile __bit                   TX1IE               @ (((unsigned) &PIE1)*8) + 4;
#define                                 TX1IE_bit           BANKMASK(PIE1), 4
extern volatile __bit                   TX1IF               @ (((unsigned) &PIR1)*8) + 4;
#define                                 TX1IF_bit           BANKMASK(PIR1), 4
extern volatile __bit                   TX1IP               @ (((unsigned) &IPR1)*8) + 4;
#define                                 TX1IP_bit           BANKMASK(IPR1), 4
extern volatile __bit                   TX2IE               @ (((unsigned) &PIE3)*8) + 4;
#define                                 TX2IE_bit           BANKMASK(PIE3), 4
extern volatile __bit                   TX2IF               @ (((unsigned) &PIR3)*8) + 4;
#define                                 TX2IF_bit           BANKMASK(PIR3), 4
extern volatile __bit                   TX2IP               @ (((unsigned) &IPR3)*8) + 4;
#define                                 TX2IP_bit           BANKMASK(IPR3), 4
extern volatile __bit                   TX8_9               @ (((unsigned) &TXSTA1)*8) + 6;
#define                                 TX8_9_bit           BANKMASK(TXSTA1), 6
extern volatile __bit                   TX8_92              @ (((unsigned) &TXSTA2)*8) + 6;
#define                                 TX8_92_bit          BANKMASK(TXSTA2), 6
extern volatile __bit                   TX91                @ (((unsigned) &TXSTA1)*8) + 6;
#define                                 TX91_bit            BANKMASK(TXSTA1), 6
extern volatile __bit                   TX92                @ (((unsigned) &TXSTA2)*8) + 6;
#define                                 TX92_bit            BANKMASK(TXSTA2), 6
extern volatile __bit                   TX9D1               @ (((unsigned) &TXSTA1)*8) + 0;
#define                                 TX9D1_bit           BANKMASK(TXSTA1), 0
extern volatile __bit                   TX9D2               @ (((unsigned) &TXSTA2)*8) + 0;
#define                                 TX9D2_bit           BANKMASK(TXSTA2), 0
extern volatile __bit                   TXB0IE              @ (((unsigned) &PIE3)*8) + 2;
#define                                 TXB0IE_bit          BANKMASK(PIE3), 2
extern volatile __bit                   TXB1IE              @ (((unsigned) &PIE3)*8) + 3;
#define                                 TXB1IE_bit          BANKMASK(PIE3), 3
extern volatile __bit                   TXB2IE              @ (((unsigned) &PIE3)*8) + 4;
#define                                 TXB2IE_bit          BANKMASK(PIE3), 4
extern volatile __bit                   TXBNIE              @ (((unsigned) &PIE3)*8) + 4;
#define                                 TXBNIE_bit          BANKMASK(PIE3), 4
extern volatile __bit                   TXBNIF              @ (((unsigned) &PIR3)*8) + 4;
#define                                 TXBNIF_bit          BANKMASK(PIR3), 4
extern volatile __bit                   TXBNIP              @ (((unsigned) &IPR3)*8) + 4;
#define                                 TXBNIP_bit          BANKMASK(IPR3), 4
extern volatile __bit                   TXCKP1              @ (((unsigned) &BAUDCON1)*8) + 4;
#define                                 TXCKP1_bit          BANKMASK(BAUDCON1), 4
extern volatile __bit                   TXCKP2              @ (((unsigned) &BAUDCON2)*8) + 4;
#define                                 TXCKP2_bit          BANKMASK(BAUDCON2), 4
extern volatile __bit                   TXD8                @ (((unsigned) &TXSTA1)*8) + 0;
#define                                 TXD8_bit            BANKMASK(TXSTA1), 0
extern volatile __bit                   TXD82               @ (((unsigned) &TXSTA2)*8) + 0;
#define                                 TXD82_bit           BANKMASK(TXSTA2), 0
extern volatile __bit                   TXEN1               @ (((unsigned) &TXSTA1)*8) + 5;
#define                                 TXEN1_bit           BANKMASK(TXSTA1), 5
extern volatile __bit                   TXEN2               @ (((unsigned) &TXSTA2)*8) + 5;
#define                                 TXEN2_bit           BANKMASK(TXSTA2), 5
extern volatile __bit                   TXIE                @ (((unsigned) &PIE1)*8) + 4;
#define                                 TXIE_bit            BANKMASK(PIE1), 4
extern volatile __bit                   TXIF                @ (((unsigned) &PIR1)*8) + 4;
#define                                 TXIF_bit            BANKMASK(PIR1), 4
extern volatile __bit                   TXINC               @ (((unsigned) &DMACON1)*8) + 5;
#define                                 TXINC_bit           BANKMASK(DMACON1), 5
extern volatile __bit                   TXIP                @ (((unsigned) &IPR1)*8) + 4;
#define                                 TXIP_bit            BANKMASK(IPR1), 4
extern volatile __bit                   U1OD                @ (((unsigned) &ODCON2)*8) + 0;
#define                                 U1OD_bit            BANKMASK(ODCON2), 0
extern volatile __bit                   U2OD                @ (((unsigned) &ODCON2)*8) + 1;
#define                                 U2OD_bit            BANKMASK(ODCON2), 1
extern volatile __bit                   UA1                 @ (((unsigned) &SSP1STAT)*8) + 1;
#define                                 UA1_bit             BANKMASK(SSP1STAT), 1
extern volatile __bit                   UA2                 @ (((unsigned) &SSP2STAT)*8) + 1;
#define                                 UA2_bit             BANKMASK(SSP2STAT), 1
extern volatile __bit                   UART1MD             @ (((unsigned) &PMDIS0)*8) + 3;
#define                                 UART1MD_bit         BANKMASK(PMDIS0), 3
extern volatile __bit                   UART2MD             @ (((unsigned) &PMDIS0)*8) + 4;
#define                                 UART2MD_bit         BANKMASK(PMDIS0), 4
extern volatile __bit                   UERRIE              @ (((unsigned) &UIE)*8) + 1;
#define                                 UERRIE_bit          BANKMASK(UIE), 1
extern volatile __bit                   UERRIF              @ (((unsigned) &UIR)*8) + 1;
#define                                 UERRIF_bit          BANKMASK(UIR), 1
extern volatile __bit                   ULPEN               @ (((unsigned) &WDTCON)*8) + 2;
#define                                 ULPEN_bit           BANKMASK(WDTCON), 2
extern volatile __bit                   ULPLVL              @ (((unsigned) &WDTCON)*8) + 5;
#define                                 ULPLVL_bit          BANKMASK(WDTCON), 5
extern volatile __bit                   ULPSINK             @ (((unsigned) &WDTCON)*8) + 1;
#define                                 ULPSINK_bit         BANKMASK(WDTCON), 1
extern volatile __bit                   ULPWDIS             @ (((unsigned) &DSCONL)*8) + 2;
#define                                 ULPWDIS_bit         BANKMASK(DSCONL), 2
extern volatile __bit                   ULPWU               @ (((unsigned) &PORTA)*8) + 0;
#define                                 ULPWU_bit           BANKMASK(PORTA), 0
extern volatile __bit                   ULPWUIN             @ (((unsigned) &PORTA)*8) + 0;
#define                                 ULPWUIN_bit         BANKMASK(PORTA), 0
extern volatile __bit                   UOEMON              @ (((unsigned) &UCFG)*8) + 6;
#define                                 UOEMON_bit          BANKMASK(UCFG), 6
extern volatile __bit                   UPP0                @ (((unsigned) &UCFG)*8) + 0;
#define                                 UPP0_bit            BANKMASK(UCFG), 0
extern volatile __bit                   UPP1                @ (((unsigned) &UCFG)*8) + 1;
#define                                 UPP1_bit            BANKMASK(UCFG), 1
extern volatile __bit                   UPUEN               @ (((unsigned) &UCFG)*8) + 4;
#define                                 UPUEN_bit           BANKMASK(UCFG), 4
extern volatile __bit                   URSTIE              @ (((unsigned) &UIE)*8) + 0;
#define                                 URSTIE_bit          BANKMASK(UIE), 0
extern volatile __bit                   URSTIF              @ (((unsigned) &UIR)*8) + 0;
#define                                 URSTIF_bit          BANKMASK(UIR), 0
extern volatile __bit                   USBEN               @ (((unsigned) &UCON)*8) + 3;
#define                                 USBEN_bit           BANKMASK(UCON), 3
extern volatile __bit                   USBIE               @ (((unsigned) &PIE2)*8) + 4;
#define                                 USBIE_bit           BANKMASK(PIE2), 4
extern volatile __bit                   USBIF               @ (((unsigned) &PIR2)*8) + 4;
#define                                 USBIF_bit           BANKMASK(PIR2), 4
extern volatile __bit                   USBIP               @ (((unsigned) &IPR2)*8) + 4;
#define                                 USBIP_bit           BANKMASK(IPR2), 4
extern volatile __bit                   UTEYE               @ (((unsigned) &UCFG)*8) + 7;
#define                                 UTEYE_bit           BANKMASK(UCFG), 7
extern volatile __bit                   UTRDIS              @ (((unsigned) &UCFG)*8) + 3;
#define                                 UTRDIS_bit          BANKMASK(UCFG), 3
extern volatile __bit                   VBG                 @ (((unsigned) &PORTA)*8) + 1;
#define                                 VBG_bit             BANKMASK(PORTA), 1
extern volatile __bit                   VBGEN               @ (((unsigned) &ANCON1)*8) + 7;
#define                                 VBGEN_bit           BANKMASK(ANCON1), 7
extern volatile __bit                   VBGOE               @ (((unsigned) &WDTCON)*8) + 4;
#define                                 VBGOE_bit           BANKMASK(WDTCON), 4
extern volatile __bit                   VCFG0               @ (((unsigned) &ADCON0)*8) + 6;
#define                                 VCFG0_bit           BANKMASK(ADCON0), 6
extern volatile __bit                   VCFG01              @ (((unsigned) &ADCON1)*8) + 4;
#define                                 VCFG01_bit          BANKMASK(ADCON1), 4
extern volatile __bit                   VCFG1               @ (((unsigned) &ADCON0)*8) + 7;
#define                                 VCFG1_bit           BANKMASK(ADCON0), 7
extern volatile __bit                   VCFG11              @ (((unsigned) &ADCON1)*8) + 5;
#define                                 VCFG11_bit          BANKMASK(ADCON1), 5
extern volatile __bit                   VDIRMAG             @ (((unsigned) &HLVDCON)*8) + 7;
#define                                 VDIRMAG_bit         BANKMASK(HLVDCON), 7
extern volatile __bit                   VM                  @ (((unsigned) &PORTC)*8) + 4;
#define                                 VM_bit              BANKMASK(PORTC), 4
extern volatile __bit                   VMO                 @ (((unsigned) &PORTB)*8) + 2;
#define                                 VMO_bit             BANKMASK(PORTB), 2
extern volatile __bit                   VP                  @ (((unsigned) &PORTC)*8) + 5;
#define                                 VP_bit              BANKMASK(PORTC), 5
extern volatile __bit                   VPO                 @ (((unsigned) &PORTB)*8) + 3;
#define                                 VPO_bit             BANKMASK(PORTB), 3
extern volatile __bit                   VREF_MINUS          @ (((unsigned) &PORTA)*8) + 2;
#define                                 VREF_MINUS_bit      BANKMASK(PORTA), 2
extern volatile __bit                   VREF_PLUS           @ (((unsigned) &PORTA)*8) + 3;
#define                                 VREF_PLUS_bit       BANKMASK(PORTA), 3
extern volatile __bit                   W4E                 @ (((unsigned) &BAUDCON1)*8) + 1;
#define                                 W4E_bit             BANKMASK(BAUDCON1), 1
extern volatile __bit                   WAIT0               @ (((unsigned) &PR2)*8) + 4;
#define                                 WAIT0_bit           BANKMASK(PR2), 4
extern volatile __bit                   WAIT1               @ (((unsigned) &PR2)*8) + 5;
#define                                 WAIT1_bit           BANKMASK(PR2), 5
extern volatile __bit                   WAITB0              @ (((unsigned) &RTCVALH)*8) + 6;
#define                                 WAITB0_bit          BANKMASK(RTCVALH), 6
extern volatile __bit                   WAITB1              @ (((unsigned) &RTCVALH)*8) + 7;
#define                                 WAITB1_bit          BANKMASK(RTCVALH), 7
extern volatile __bit                   WAITE0              @ (((unsigned) &RTCVALH)*8) + 0;
#define                                 WAITE0_bit          BANKMASK(RTCVALH), 0
extern volatile __bit                   WAITE1              @ (((unsigned) &RTCVALH)*8) + 1;
#define                                 WAITE1_bit          BANKMASK(RTCVALH), 1
extern volatile __bit                   WAITM0              @ (((unsigned) &RTCVALH)*8) + 2;
#define                                 WAITM0_bit          BANKMASK(RTCVALH), 2
extern volatile __bit                   WAITM1              @ (((unsigned) &RTCVALH)*8) + 3;
#define                                 WAITM1_bit          BANKMASK(RTCVALH), 3
extern volatile __bit                   WAITM2              @ (((unsigned) &RTCVALH)*8) + 4;
#define                                 WAITM2_bit          BANKMASK(RTCVALH), 4
extern volatile __bit                   WAITM3              @ (((unsigned) &RTCVALH)*8) + 5;
#define                                 WAITM3_bit          BANKMASK(RTCVALH), 5
extern volatile __bit                   WCOL1               @ (((unsigned) &SSP1CON1)*8) + 7;
#define                                 WCOL1_bit           BANKMASK(SSP1CON1), 7
extern volatile __bit                   WCOL2               @ (((unsigned) &SSP2CON1)*8) + 7;
#define                                 WCOL2_bit           BANKMASK(SSP2CON1), 7
extern volatile __bit                   WM0                 @ (((unsigned) &PR2)*8) + 0;
#define                                 WM0_bit             BANKMASK(PR2), 0
extern volatile __bit                   WM1                 @ (((unsigned) &PR2)*8) + 1;
#define                                 WM1_bit             BANKMASK(PR2), 1
extern volatile __bit                   WPROG               @ (((unsigned) &EECON1)*8) + 5;
#define                                 WPROG_bit           BANKMASK(EECON1), 5
extern volatile __bit                   WR                  @ (((unsigned) &EECON1)*8) + 1;
#define                                 WR_bit              BANKMASK(EECON1), 1
extern volatile __bit                   WREN                @ (((unsigned) &EECON1)*8) + 2;
#define                                 WREN_bit            BANKMASK(EECON1), 2
extern volatile __bit                   WRERR               @ (((unsigned) &EECON1)*8) + 3;
#define                                 WRERR_bit           BANKMASK(EECON1), 3
extern volatile __bit                   WUE1                @ (((unsigned) &BAUDCON1)*8) + 1;
#define                                 WUE1_bit            BANKMASK(BAUDCON1), 1
extern volatile __bit                   WUE2                @ (((unsigned) &BAUDCON2)*8) + 1;
#define                                 WUE2_bit            BANKMASK(BAUDCON2), 1
extern volatile __bit                   ZERO                @ (((unsigned) &STATUS)*8) + 2;
#define                                 ZERO_bit            BANKMASK(STATUS), 2
extern volatile __bit                   nA                  @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 nA_bit              BANKMASK(SSP1STAT), 5
extern volatile __bit                   nA2                 @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 nA2_bit             BANKMASK(SSP2STAT), 5
extern volatile __bit                   nADDRESS            @ (((unsigned) &SSP1STAT)*8) + 5;
#define                                 nADDRESS_bit        BANKMASK(SSP1STAT), 5
extern volatile __bit                   nADDRESS2           @ (((unsigned) &SSP2STAT)*8) + 5;
#define                                 nADDRESS2_bit       BANKMASK(SSP2STAT), 5
extern volatile __bit                   nBOR                @ (((unsigned) &RCON)*8) + 0;
#define                                 nBOR_bit            BANKMASK(RCON), 0
extern volatile __bit                   nCM                 @ (((unsigned) &RCON)*8) + 5;
#define                                 nCM_bit             BANKMASK(RCON), 5
extern volatile __bit                   nDONE               @ (((unsigned) &ADCON0)*8) + 1;
#define                                 nDONE_bit           BANKMASK(ADCON0), 1
extern volatile __bit                   nPD                 @ (((unsigned) &RCON)*8) + 2;
#define                                 nPD_bit             BANKMASK(RCON), 2
extern volatile __bit                   nPOR                @ (((unsigned) &RCON)*8) + 1;
#define                                 nPOR_bit            BANKMASK(RCON), 1
extern volatile __bit                   nRBPU               @ (((unsigned) &INTCON2)*8) + 7;
#define                                 nRBPU_bit           BANKMASK(INTCON2), 7
extern volatile __bit                   nRC8                @ (((unsigned) &RCSTA1)*8) + 6;
#define                                 nRC8_bit            BANKMASK(RCSTA1), 6
extern volatile __bit                   nRI                 @ (((unsigned) &RCON)*8) + 4;
#define                                 nRI_bit             BANKMASK(RCON), 4
extern volatile __bit                   nSS1                @ (((unsigned) &PORTA)*8) + 5;
#define                                 nSS1_bit            BANKMASK(PORTA), 5
extern volatile __bit                   nT1DONE             @ (((unsigned) &T1GCON)*8) + 3;
#define                                 nT1DONE_bit         BANKMASK(T1GCON), 3
extern volatile __bit                   nT1SYNC             @ (((unsigned) &T1CON)*8) + 2;
#define                                 nT1SYNC_bit         BANKMASK(T1CON), 2
extern volatile __bit                   nT3DONE             @ (((unsigned) &T3GCON)*8) + 3;
#define                                 nT3DONE_bit         BANKMASK(T3GCON), 3
extern volatile __bit                   nT3SYNC             @ (((unsigned) &T3CON)*8) + 2;
#define                                 nT3SYNC_bit         BANKMASK(T3CON), 2
extern volatile __bit                   nT5DONE             @ (((unsigned) &T5GCON)*8) + 3;
#define                                 nT5DONE_bit         BANKMASK(T5GCON), 3
extern volatile __bit                   nT5SYNC             @ (((unsigned) &T5CON)*8) + 2;
#define                                 nT5SYNC_bit         BANKMASK(T5CON), 2
extern volatile __bit                   nTO                 @ (((unsigned) &RCON)*8) + 3;
#define                                 nTO_bit             BANKMASK(RCON), 3
extern volatile __bit                   nTX8                @ (((unsigned) &TXSTA1)*8) + 6;
#define                                 nTX8_bit            BANKMASK(TXSTA1), 6
extern volatile __bit                   nUOE                @ (((unsigned) &PORTC)*8) + 1;
#define                                 nUOE_bit            BANKMASK(PORTC), 1
extern volatile __bit                   nW                  @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 nW_bit              BANKMASK(SSP1STAT), 2
extern volatile __bit                   nW2                 @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 nW2_bit             BANKMASK(SSP2STAT), 2
extern volatile __bit                   nWRITE              @ (((unsigned) &SSP1STAT)*8) + 2;
#define                                 nWRITE_bit          BANKMASK(SSP1STAT), 2
extern volatile __bit                   nWRITE2             @ (((unsigned) &SSP2STAT)*8) + 2;
#define                                 nWRITE2_bit         BANKMASK(SSP2STAT), 2

#endif // _PIC18F27J53_H_
